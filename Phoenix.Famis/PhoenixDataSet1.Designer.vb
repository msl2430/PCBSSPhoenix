'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.269
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("PhoenixDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class PhoenixDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableFAMISAFDCInformation As FAMISAFDCInformationDataTable
    
    Private tableFAMISApplicantInformation As FAMISApplicantInformationDataTable
    
    Private tableFAMISCaseChild As FAMISCaseChildDataTable
    
    Private tableFAMISCaseInformation As FAMISCaseInformationDataTable
    
    Private tableFAMISFoodStampInformation As FAMISFoodStampInformationDataTable
    
    Private tableFAMISIandAInformation As FAMISIandAInformationDataTable
    
    Private tableFAMISIncomeInformation As FAMISIncomeInformationDataTable
    
    Private tableFAMISIndividualsInformation As FAMISIndividualsInformationDataTable
    
    Private tableFAMISMedicaidInformation As FAMISMedicaidInformationDataTable
    
    Private tableFAMISVRPInformation As FAMISVRPInformationDataTable
    
    Private tableIMPSInformation As IMPSInformationDataTable
    
    Private tableFAMISAppendedInformation As FAMISAppendedInformationDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("FAMISAFDCInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISAFDCInformationDataTable(ds.Tables("FAMISAFDCInformation")))
            End If
            If (Not (ds.Tables("FAMISApplicantInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISApplicantInformationDataTable(ds.Tables("FAMISApplicantInformation")))
            End If
            If (Not (ds.Tables("FAMISCaseChild")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISCaseChildDataTable(ds.Tables("FAMISCaseChild")))
            End If
            If (Not (ds.Tables("FAMISCaseInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISCaseInformationDataTable(ds.Tables("FAMISCaseInformation")))
            End If
            If (Not (ds.Tables("FAMISFoodStampInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISFoodStampInformationDataTable(ds.Tables("FAMISFoodStampInformation")))
            End If
            If (Not (ds.Tables("FAMISIandAInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISIandAInformationDataTable(ds.Tables("FAMISIandAInformation")))
            End If
            If (Not (ds.Tables("FAMISIncomeInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISIncomeInformationDataTable(ds.Tables("FAMISIncomeInformation")))
            End If
            If (Not (ds.Tables("FAMISIndividualsInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISIndividualsInformationDataTable(ds.Tables("FAMISIndividualsInformation")))
            End If
            If (Not (ds.Tables("FAMISMedicaidInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISMedicaidInformationDataTable(ds.Tables("FAMISMedicaidInformation")))
            End If
            If (Not (ds.Tables("FAMISVRPInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISVRPInformationDataTable(ds.Tables("FAMISVRPInformation")))
            End If
            If (Not (ds.Tables("IMPSInformation")) Is Nothing) Then
                MyBase.Tables.Add(New IMPSInformationDataTable(ds.Tables("IMPSInformation")))
            End If
            If (Not (ds.Tables("FAMISAppendedInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISAppendedInformationDataTable(ds.Tables("FAMISAppendedInformation")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FAMISAFDCInformation() As FAMISAFDCInformationDataTable
        Get
            Return Me.tableFAMISAFDCInformation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FAMISApplicantInformation() As FAMISApplicantInformationDataTable
        Get
            Return Me.tableFAMISApplicantInformation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FAMISCaseChild() As FAMISCaseChildDataTable
        Get
            Return Me.tableFAMISCaseChild
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FAMISCaseInformation() As FAMISCaseInformationDataTable
        Get
            Return Me.tableFAMISCaseInformation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FAMISFoodStampInformation() As FAMISFoodStampInformationDataTable
        Get
            Return Me.tableFAMISFoodStampInformation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FAMISIandAInformation() As FAMISIandAInformationDataTable
        Get
            Return Me.tableFAMISIandAInformation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FAMISIncomeInformation() As FAMISIncomeInformationDataTable
        Get
            Return Me.tableFAMISIncomeInformation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FAMISIndividualsInformation() As FAMISIndividualsInformationDataTable
        Get
            Return Me.tableFAMISIndividualsInformation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FAMISMedicaidInformation() As FAMISMedicaidInformationDataTable
        Get
            Return Me.tableFAMISMedicaidInformation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FAMISVRPInformation() As FAMISVRPInformationDataTable
        Get
            Return Me.tableFAMISVRPInformation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IMPSInformation() As IMPSInformationDataTable
        Get
            Return Me.tableIMPSInformation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FAMISAppendedInformation() As FAMISAppendedInformationDataTable
        Get
            Return Me.tableFAMISAppendedInformation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As PhoenixDataSet = CType(MyBase.Clone,PhoenixDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("FAMISAFDCInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISAFDCInformationDataTable(ds.Tables("FAMISAFDCInformation")))
            End If
            If (Not (ds.Tables("FAMISApplicantInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISApplicantInformationDataTable(ds.Tables("FAMISApplicantInformation")))
            End If
            If (Not (ds.Tables("FAMISCaseChild")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISCaseChildDataTable(ds.Tables("FAMISCaseChild")))
            End If
            If (Not (ds.Tables("FAMISCaseInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISCaseInformationDataTable(ds.Tables("FAMISCaseInformation")))
            End If
            If (Not (ds.Tables("FAMISFoodStampInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISFoodStampInformationDataTable(ds.Tables("FAMISFoodStampInformation")))
            End If
            If (Not (ds.Tables("FAMISIandAInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISIandAInformationDataTable(ds.Tables("FAMISIandAInformation")))
            End If
            If (Not (ds.Tables("FAMISIncomeInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISIncomeInformationDataTable(ds.Tables("FAMISIncomeInformation")))
            End If
            If (Not (ds.Tables("FAMISIndividualsInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISIndividualsInformationDataTable(ds.Tables("FAMISIndividualsInformation")))
            End If
            If (Not (ds.Tables("FAMISMedicaidInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISMedicaidInformationDataTable(ds.Tables("FAMISMedicaidInformation")))
            End If
            If (Not (ds.Tables("FAMISVRPInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISVRPInformationDataTable(ds.Tables("FAMISVRPInformation")))
            End If
            If (Not (ds.Tables("IMPSInformation")) Is Nothing) Then
                MyBase.Tables.Add(New IMPSInformationDataTable(ds.Tables("IMPSInformation")))
            End If
            If (Not (ds.Tables("FAMISAppendedInformation")) Is Nothing) Then
                MyBase.Tables.Add(New FAMISAppendedInformationDataTable(ds.Tables("FAMISAppendedInformation")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableFAMISAFDCInformation = CType(MyBase.Tables("FAMISAFDCInformation"),FAMISAFDCInformationDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFAMISAFDCInformation) Is Nothing) Then
                Me.tableFAMISAFDCInformation.InitVars
            End If
        End If
        Me.tableFAMISApplicantInformation = CType(MyBase.Tables("FAMISApplicantInformation"),FAMISApplicantInformationDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFAMISApplicantInformation) Is Nothing) Then
                Me.tableFAMISApplicantInformation.InitVars
            End If
        End If
        Me.tableFAMISCaseChild = CType(MyBase.Tables("FAMISCaseChild"),FAMISCaseChildDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFAMISCaseChild) Is Nothing) Then
                Me.tableFAMISCaseChild.InitVars
            End If
        End If
        Me.tableFAMISCaseInformation = CType(MyBase.Tables("FAMISCaseInformation"),FAMISCaseInformationDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFAMISCaseInformation) Is Nothing) Then
                Me.tableFAMISCaseInformation.InitVars
            End If
        End If
        Me.tableFAMISFoodStampInformation = CType(MyBase.Tables("FAMISFoodStampInformation"),FAMISFoodStampInformationDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFAMISFoodStampInformation) Is Nothing) Then
                Me.tableFAMISFoodStampInformation.InitVars
            End If
        End If
        Me.tableFAMISIandAInformation = CType(MyBase.Tables("FAMISIandAInformation"),FAMISIandAInformationDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFAMISIandAInformation) Is Nothing) Then
                Me.tableFAMISIandAInformation.InitVars
            End If
        End If
        Me.tableFAMISIncomeInformation = CType(MyBase.Tables("FAMISIncomeInformation"),FAMISIncomeInformationDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFAMISIncomeInformation) Is Nothing) Then
                Me.tableFAMISIncomeInformation.InitVars
            End If
        End If
        Me.tableFAMISIndividualsInformation = CType(MyBase.Tables("FAMISIndividualsInformation"),FAMISIndividualsInformationDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFAMISIndividualsInformation) Is Nothing) Then
                Me.tableFAMISIndividualsInformation.InitVars
            End If
        End If
        Me.tableFAMISMedicaidInformation = CType(MyBase.Tables("FAMISMedicaidInformation"),FAMISMedicaidInformationDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFAMISMedicaidInformation) Is Nothing) Then
                Me.tableFAMISMedicaidInformation.InitVars
            End If
        End If
        Me.tableFAMISVRPInformation = CType(MyBase.Tables("FAMISVRPInformation"),FAMISVRPInformationDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFAMISVRPInformation) Is Nothing) Then
                Me.tableFAMISVRPInformation.InitVars
            End If
        End If
        Me.tableIMPSInformation = CType(MyBase.Tables("IMPSInformation"),IMPSInformationDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIMPSInformation) Is Nothing) Then
                Me.tableIMPSInformation.InitVars
            End If
        End If
        Me.tableFAMISAppendedInformation = CType(MyBase.Tables("FAMISAppendedInformation"),FAMISAppendedInformationDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFAMISAppendedInformation) Is Nothing) Then
                Me.tableFAMISAppendedInformation.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "PhoenixDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/PhoenixDataSet1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableFAMISAFDCInformation = New FAMISAFDCInformationDataTable()
        MyBase.Tables.Add(Me.tableFAMISAFDCInformation)
        Me.tableFAMISApplicantInformation = New FAMISApplicantInformationDataTable()
        MyBase.Tables.Add(Me.tableFAMISApplicantInformation)
        Me.tableFAMISCaseChild = New FAMISCaseChildDataTable()
        MyBase.Tables.Add(Me.tableFAMISCaseChild)
        Me.tableFAMISCaseInformation = New FAMISCaseInformationDataTable()
        MyBase.Tables.Add(Me.tableFAMISCaseInformation)
        Me.tableFAMISFoodStampInformation = New FAMISFoodStampInformationDataTable()
        MyBase.Tables.Add(Me.tableFAMISFoodStampInformation)
        Me.tableFAMISIandAInformation = New FAMISIandAInformationDataTable()
        MyBase.Tables.Add(Me.tableFAMISIandAInformation)
        Me.tableFAMISIncomeInformation = New FAMISIncomeInformationDataTable()
        MyBase.Tables.Add(Me.tableFAMISIncomeInformation)
        Me.tableFAMISIndividualsInformation = New FAMISIndividualsInformationDataTable()
        MyBase.Tables.Add(Me.tableFAMISIndividualsInformation)
        Me.tableFAMISMedicaidInformation = New FAMISMedicaidInformationDataTable()
        MyBase.Tables.Add(Me.tableFAMISMedicaidInformation)
        Me.tableFAMISVRPInformation = New FAMISVRPInformationDataTable()
        MyBase.Tables.Add(Me.tableFAMISVRPInformation)
        Me.tableIMPSInformation = New IMPSInformationDataTable()
        MyBase.Tables.Add(Me.tableIMPSInformation)
        Me.tableFAMISAppendedInformation = New FAMISAppendedInformationDataTable()
        MyBase.Tables.Add(Me.tableFAMISAppendedInformation)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFAMISAFDCInformation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFAMISApplicantInformation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFAMISCaseChild() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFAMISCaseInformation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFAMISFoodStampInformation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFAMISIandAInformation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFAMISIncomeInformation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFAMISIndividualsInformation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFAMISMedicaidInformation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFAMISVRPInformation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeIMPSInformation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFAMISAppendedInformation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As PhoenixDataSet = New PhoenixDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FAMISAFDCInformationRowChangeEventHandler(ByVal sender As Object, ByVal e As FAMISAFDCInformationRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FAMISApplicantInformationRowChangeEventHandler(ByVal sender As Object, ByVal e As FAMISApplicantInformationRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FAMISCaseChildRowChangeEventHandler(ByVal sender As Object, ByVal e As FAMISCaseChildRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FAMISCaseInformationRowChangeEventHandler(ByVal sender As Object, ByVal e As FAMISCaseInformationRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FAMISFoodStampInformationRowChangeEventHandler(ByVal sender As Object, ByVal e As FAMISFoodStampInformationRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FAMISIandAInformationRowChangeEventHandler(ByVal sender As Object, ByVal e As FAMISIandAInformationRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FAMISIncomeInformationRowChangeEventHandler(ByVal sender As Object, ByVal e As FAMISIncomeInformationRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FAMISIndividualsInformationRowChangeEventHandler(ByVal sender As Object, ByVal e As FAMISIndividualsInformationRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FAMISMedicaidInformationRowChangeEventHandler(ByVal sender As Object, ByVal e As FAMISMedicaidInformationRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FAMISVRPInformationRowChangeEventHandler(ByVal sender As Object, ByVal e As FAMISVRPInformationRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub IMPSInformationRowChangeEventHandler(ByVal sender As Object, ByVal e As IMPSInformationRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FAMISAppendedInformationRowChangeEventHandler(ByVal sender As Object, ByVal e As FAMISAppendedInformationRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FAMISAFDCInformationDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnHA As Global.System.Data.DataColumn
        
        Private columnIA As Global.System.Data.DataColumn
        
        Private columnIB As Global.System.Data.DataColumn
        
        Private columnIC As Global.System.Data.DataColumn
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnIE As Global.System.Data.DataColumn
        
        Private columnIF1 As Global.System.Data.DataColumn
        
        Private columnIG As Global.System.Data.DataColumn
        
        Private columnIH As Global.System.Data.DataColumn
        
        Private columnII As Global.System.Data.DataColumn
        
        Private columnIJ As Global.System.Data.DataColumn
        
        Private columnIL As Global.System.Data.DataColumn
        
        Private columnIK As Global.System.Data.DataColumn
        
        Private columnIP As Global.System.Data.DataColumn
        
        Private columnOJ As Global.System.Data.DataColumn
        
        Private columnIM As Global.System.Data.DataColumn
        
        Private columnIN1 As Global.System.Data.DataColumn
        
        Private columnIO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FAMISAFDCInformation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IF1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIF1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnII
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IN1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIN1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FAMISAFDCInformationRow
            Get
                Return CType(Me.Rows(index),FAMISAFDCInformationRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISAFDCInformationRowChanging As FAMISAFDCInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISAFDCInformationRowChanged As FAMISAFDCInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISAFDCInformationRowDeleting As FAMISAFDCInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISAFDCInformationRowDeleted As FAMISAFDCInformationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFAMISAFDCInformationRow(ByVal row As FAMISAFDCInformationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFAMISAFDCInformationRow( _
                    ByVal CaseNumber As String,  _
                    ByVal HA As String,  _
                    ByVal IA As String,  _
                    ByVal IB As String,  _
                    ByVal IC As Date,  _
                    ByVal ID As Date,  _
                    ByVal IE As String,  _
                    ByVal IF1 As Date,  _
                    ByVal IG As Date,  _
                    ByVal IH As String,  _
                    ByVal II As String,  _
                    ByVal IJ As String,  _
                    ByVal IL As String,  _
                    ByVal IK As String,  _
                    ByVal IP As String,  _
                    ByVal OJ As String,  _
                    ByVal IM As String,  _
                    ByVal IN1 As String,  _
                    ByVal IO As String) As FAMISAFDCInformationRow
            Dim rowFAMISAFDCInformationRow As FAMISAFDCInformationRow = CType(Me.NewRow,FAMISAFDCInformationRow)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, HA, IA, IB, IC, ID, IE, IF1, IG, IH, II, IJ, IL, IK, IP, OJ, IM, IN1, IO}
            rowFAMISAFDCInformationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFAMISAFDCInformationRow)
            Return rowFAMISAFDCInformationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FAMISAFDCInformationDataTable = CType(MyBase.Clone,FAMISAFDCInformationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FAMISAFDCInformationDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnHA = MyBase.Columns("HA")
            Me.columnIA = MyBase.Columns("IA")
            Me.columnIB = MyBase.Columns("IB")
            Me.columnIC = MyBase.Columns("IC")
            Me.columnID = MyBase.Columns("ID")
            Me.columnIE = MyBase.Columns("IE")
            Me.columnIF1 = MyBase.Columns("IF1")
            Me.columnIG = MyBase.Columns("IG")
            Me.columnIH = MyBase.Columns("IH")
            Me.columnII = MyBase.Columns("II")
            Me.columnIJ = MyBase.Columns("IJ")
            Me.columnIL = MyBase.Columns("IL")
            Me.columnIK = MyBase.Columns("IK")
            Me.columnIP = MyBase.Columns("IP")
            Me.columnOJ = MyBase.Columns("OJ")
            Me.columnIM = MyBase.Columns("IM")
            Me.columnIN1 = MyBase.Columns("IN1")
            Me.columnIO = MyBase.Columns("IO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnHA = New Global.System.Data.DataColumn("HA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHA)
            Me.columnIA = New Global.System.Data.DataColumn("IA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIA)
            Me.columnIB = New Global.System.Data.DataColumn("IB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIB)
            Me.columnIC = New Global.System.Data.DataColumn("IC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIC)
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnIE = New Global.System.Data.DataColumn("IE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIE)
            Me.columnIF1 = New Global.System.Data.DataColumn("IF1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIF1)
            Me.columnIG = New Global.System.Data.DataColumn("IG", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIG)
            Me.columnIH = New Global.System.Data.DataColumn("IH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIH)
            Me.columnII = New Global.System.Data.DataColumn("II", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnII)
            Me.columnIJ = New Global.System.Data.DataColumn("IJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIJ)
            Me.columnIL = New Global.System.Data.DataColumn("IL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIL)
            Me.columnIK = New Global.System.Data.DataColumn("IK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIK)
            Me.columnIP = New Global.System.Data.DataColumn("IP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIP)
            Me.columnOJ = New Global.System.Data.DataColumn("OJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOJ)
            Me.columnIM = New Global.System.Data.DataColumn("IM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIM)
            Me.columnIN1 = New Global.System.Data.DataColumn("IN1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIN1)
            Me.columnIO = New Global.System.Data.DataColumn("IO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIO)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnHA.MaxLength = 2
            Me.columnIA.MaxLength = 1
            Me.columnIB.MaxLength = 3
            Me.columnIE.MaxLength = 1
            Me.columnIH.MaxLength = 2
            Me.columnII.MaxLength = 1
            Me.columnIJ.MaxLength = 2
            Me.columnIL.MaxLength = 1
            Me.columnIK.MaxLength = 7
            Me.columnIP.MaxLength = 7
            Me.columnOJ.MaxLength = 2
            Me.columnIM.MaxLength = 7
            Me.columnIN1.MaxLength = 8
            Me.columnIO.MaxLength = 8
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFAMISAFDCInformationRow() As FAMISAFDCInformationRow
            Return CType(Me.NewRow,FAMISAFDCInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FAMISAFDCInformationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FAMISAFDCInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FAMISAFDCInformationRowChangedEvent) Is Nothing) Then
                RaiseEvent FAMISAFDCInformationRowChanged(Me, New FAMISAFDCInformationRowChangeEvent(CType(e.Row,FAMISAFDCInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FAMISAFDCInformationRowChangingEvent) Is Nothing) Then
                RaiseEvent FAMISAFDCInformationRowChanging(Me, New FAMISAFDCInformationRowChangeEvent(CType(e.Row,FAMISAFDCInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FAMISAFDCInformationRowDeletedEvent) Is Nothing) Then
                RaiseEvent FAMISAFDCInformationRowDeleted(Me, New FAMISAFDCInformationRowChangeEvent(CType(e.Row,FAMISAFDCInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FAMISAFDCInformationRowDeletingEvent) Is Nothing) Then
                RaiseEvent FAMISAFDCInformationRowDeleting(Me, New FAMISAFDCInformationRowChangeEvent(CType(e.Row,FAMISAFDCInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFAMISAFDCInformationRow(ByVal row As FAMISAFDCInformationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PhoenixDataSet = New PhoenixDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FAMISAFDCInformationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FAMISApplicantInformationDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnBA As Global.System.Data.DataColumn
        
        Private columnBB As Global.System.Data.DataColumn
        
        Private columnBC As Global.System.Data.DataColumn
        
        Private columnBD As Global.System.Data.DataColumn
        
        Private columnBE As Global.System.Data.DataColumn
        
        Private columnBF As Global.System.Data.DataColumn
        
        Private columnBG As Global.System.Data.DataColumn
        
        Private columnBH As Global.System.Data.DataColumn
        
        Private columnBI As Global.System.Data.DataColumn
        
        Private columnBJ As Global.System.Data.DataColumn
        
        Private columnBK As Global.System.Data.DataColumn
        
        Private columnBL As Global.System.Data.DataColumn
        
        Private columnBM As Global.System.Data.DataColumn
        
        Private columnBN As Global.System.Data.DataColumn
        
        Private columnBO As Global.System.Data.DataColumn
        
        Private columnBP As Global.System.Data.DataColumn
        
        Private columnBQ As Global.System.Data.DataColumn
        
        Private columnCA As Global.System.Data.DataColumn
        
        Private columnCC As Global.System.Data.DataColumn
        
        Private columnCD1 As Global.System.Data.DataColumn
        
        Private columnCD2 As Global.System.Data.DataColumn
        
        Private columnCE As Global.System.Data.DataColumn
        
        Private columnCF As Global.System.Data.DataColumn
        
        Private columnCG As Global.System.Data.DataColumn
        
        Private columnDB As Global.System.Data.DataColumn
        
        Private columnDC As Global.System.Data.DataColumn
        
        Private columnDD1 As Global.System.Data.DataColumn
        
        Private columnDD2 As Global.System.Data.DataColumn
        
        Private columnDE As Global.System.Data.DataColumn
        
        Private columnDF As Global.System.Data.DataColumn
        
        Private columnEA As Global.System.Data.DataColumn
        
        Private columnEB As Global.System.Data.DataColumn
        
        Private columnEC As Global.System.Data.DataColumn
        
        Private columnED As Global.System.Data.DataColumn
        
        Private columnED1 As Global.System.Data.DataColumn
        
        Private columnED2 As Global.System.Data.DataColumn
        
        Private columnEE As Global.System.Data.DataColumn
        
        Private columnEF As Global.System.Data.DataColumn
        
        Private columnEG As Global.System.Data.DataColumn
        
        Private columnEH As Global.System.Data.DataColumn
        
        Private columnEJ As Global.System.Data.DataColumn
        
        Private columnDA1 As Global.System.Data.DataColumn
        
        Private columnDA2 As Global.System.Data.DataColumn
        
        Private columnDA3 As Global.System.Data.DataColumn
        
        Private columnNN As Global.System.Data.DataColumn
        
        Private columnBR As Global.System.Data.DataColumn
        
        Private columnOM As Global.System.Data.DataColumn
        
        Private columnEI As Global.System.Data.DataColumn
        
        Private columnEK As Global.System.Data.DataColumn
        
        Private columnEL As Global.System.Data.DataColumn
        
        Private columnEM As Global.System.Data.DataColumn
        
        Private columnEN As Global.System.Data.DataColumn
        
        Private columnXA As Global.System.Data.DataColumn
        
        Private columnXB As Global.System.Data.DataColumn
        
        Private columnXC As Global.System.Data.DataColumn
        
        Private columnXD As Global.System.Data.DataColumn
        
        Private columnXE As Global.System.Data.DataColumn
        
        Private columnXF As Global.System.Data.DataColumn
        
        Private columnXG As Global.System.Data.DataColumn
        
        Private columnXH As Global.System.Data.DataColumn
        
        Private columnXI As Global.System.Data.DataColumn
        
        Private columnXJ As Global.System.Data.DataColumn
        
        Private columnXK As Global.System.Data.DataColumn
        
        Private columnXL As Global.System.Data.DataColumn
        
        Private columnXM As Global.System.Data.DataColumn
        
        Private columnXN As Global.System.Data.DataColumn
        
        Private columnJV As Global.System.Data.DataColumn
        
        Private columnKT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FAMISApplicantInformation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CD1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCD1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DD1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDD1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ED1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnED1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ED2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnED2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DA1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDA1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DA2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDA2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DA3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDA3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FAMISApplicantInformationRow
            Get
                Return CType(Me.Rows(index),FAMISApplicantInformationRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISApplicantInformationRowChanging As FAMISApplicantInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISApplicantInformationRowChanged As FAMISApplicantInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISApplicantInformationRowDeleting As FAMISApplicantInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISApplicantInformationRowDeleted As FAMISApplicantInformationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFAMISApplicantInformationRow(ByVal row As FAMISApplicantInformationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFAMISApplicantInformationRow( _
                    ByVal CaseNumber As String,  _
                    ByVal BA As String,  _
                    ByVal BB As String,  _
                    ByVal BC As String,  _
                    ByVal BD As String,  _
                    ByVal BE As String,  _
                    ByVal BF As String,  _
                    ByVal BG As String,  _
                    ByVal BH As String,  _
                    ByVal BI As String,  _
                    ByVal BJ As String,  _
                    ByVal BK As String,  _
                    ByVal BL As String,  _
                    ByVal BM As String,  _
                    ByVal BN As String,  _
                    ByVal BO As String,  _
                    ByVal BP As String,  _
                    ByVal BQ As String,  _
                    ByVal CA As String,  _
                    ByVal CC As String,  _
                    ByVal CD1 As String,  _
                    ByVal CD2 As String,  _
                    ByVal CE As String,  _
                    ByVal CF As String,  _
                    ByVal CG As String,  _
                    ByVal DB As String,  _
                    ByVal DC As String,  _
                    ByVal DD1 As String,  _
                    ByVal DD2 As String,  _
                    ByVal DE As String,  _
                    ByVal DF As String,  _
                    ByVal EA As String,  _
                    ByVal EB As String,  _
                    ByVal EC As String,  _
                    ByVal ED As String,  _
                    ByVal ED1 As String,  _
                    ByVal ED2 As String,  _
                    ByVal EE As String,  _
                    ByVal EF As String,  _
                    ByVal EG As String,  _
                    ByVal EH As String,  _
                    ByVal EJ As String,  _
                    ByVal DA1 As String,  _
                    ByVal DA2 As String,  _
                    ByVal DA3 As String,  _
                    ByVal NN As String,  _
                    ByVal BR As String,  _
                    ByVal OM As String,  _
                    ByVal EI As String,  _
                    ByVal EK As String,  _
                    ByVal EL As String,  _
                    ByVal EM As String,  _
                    ByVal EN As String,  _
                    ByVal XA As Date,  _
                    ByVal XB As String,  _
                    ByVal XC As String,  _
                    ByVal XD As String,  _
                    ByVal XE As String,  _
                    ByVal XF As String,  _
                    ByVal XG As String,  _
                    ByVal XH As String,  _
                    ByVal XI As String,  _
                    ByVal XJ As String,  _
                    ByVal XK As String,  _
                    ByVal XL As String,  _
                    ByVal XM As String,  _
                    ByVal XN As String,  _
                    ByVal JV As String,  _
                    ByVal KT As String) As FAMISApplicantInformationRow
            Dim rowFAMISApplicantInformationRow As FAMISApplicantInformationRow = CType(Me.NewRow,FAMISApplicantInformationRow)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, BA, BB, BC, BD, BE, BF, BG, BH, BI, BJ, BK, BL, BM, BN, BO, BP, BQ, CA, CC, CD1, CD2, CE, CF, CG, DB, DC, DD1, DD2, DE, DF, EA, EB, EC, ED, ED1, ED2, EE, EF, EG, EH, EJ, DA1, DA2, DA3, NN, BR, OM, EI, EK, EL, EM, EN, XA, XB, XC, XD, XE, XF, XG, XH, XI, XJ, XK, XL, XM, XN, JV, KT}
            rowFAMISApplicantInformationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFAMISApplicantInformationRow)
            Return rowFAMISApplicantInformationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FAMISApplicantInformationDataTable = CType(MyBase.Clone,FAMISApplicantInformationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FAMISApplicantInformationDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnBA = MyBase.Columns("BA")
            Me.columnBB = MyBase.Columns("BB")
            Me.columnBC = MyBase.Columns("BC")
            Me.columnBD = MyBase.Columns("BD")
            Me.columnBE = MyBase.Columns("BE")
            Me.columnBF = MyBase.Columns("BF")
            Me.columnBG = MyBase.Columns("BG")
            Me.columnBH = MyBase.Columns("BH")
            Me.columnBI = MyBase.Columns("BI")
            Me.columnBJ = MyBase.Columns("BJ")
            Me.columnBK = MyBase.Columns("BK")
            Me.columnBL = MyBase.Columns("BL")
            Me.columnBM = MyBase.Columns("BM")
            Me.columnBN = MyBase.Columns("BN")
            Me.columnBO = MyBase.Columns("BO")
            Me.columnBP = MyBase.Columns("BP")
            Me.columnBQ = MyBase.Columns("BQ")
            Me.columnCA = MyBase.Columns("CA")
            Me.columnCC = MyBase.Columns("CC")
            Me.columnCD1 = MyBase.Columns("CD1")
            Me.columnCD2 = MyBase.Columns("CD2")
            Me.columnCE = MyBase.Columns("CE")
            Me.columnCF = MyBase.Columns("CF")
            Me.columnCG = MyBase.Columns("CG")
            Me.columnDB = MyBase.Columns("DB")
            Me.columnDC = MyBase.Columns("DC")
            Me.columnDD1 = MyBase.Columns("DD1")
            Me.columnDD2 = MyBase.Columns("DD2")
            Me.columnDE = MyBase.Columns("DE")
            Me.columnDF = MyBase.Columns("DF")
            Me.columnEA = MyBase.Columns("EA")
            Me.columnEB = MyBase.Columns("EB")
            Me.columnEC = MyBase.Columns("EC")
            Me.columnED = MyBase.Columns("ED")
            Me.columnED1 = MyBase.Columns("ED1")
            Me.columnED2 = MyBase.Columns("ED2")
            Me.columnEE = MyBase.Columns("EE")
            Me.columnEF = MyBase.Columns("EF")
            Me.columnEG = MyBase.Columns("EG")
            Me.columnEH = MyBase.Columns("EH")
            Me.columnEJ = MyBase.Columns("EJ")
            Me.columnDA1 = MyBase.Columns("DA1")
            Me.columnDA2 = MyBase.Columns("DA2")
            Me.columnDA3 = MyBase.Columns("DA3")
            Me.columnNN = MyBase.Columns("NN")
            Me.columnBR = MyBase.Columns("BR")
            Me.columnOM = MyBase.Columns("OM")
            Me.columnEI = MyBase.Columns("EI")
            Me.columnEK = MyBase.Columns("EK")
            Me.columnEL = MyBase.Columns("EL")
            Me.columnEM = MyBase.Columns("EM")
            Me.columnEN = MyBase.Columns("EN")
            Me.columnXA = MyBase.Columns("XA")
            Me.columnXB = MyBase.Columns("XB")
            Me.columnXC = MyBase.Columns("XC")
            Me.columnXD = MyBase.Columns("XD")
            Me.columnXE = MyBase.Columns("XE")
            Me.columnXF = MyBase.Columns("XF")
            Me.columnXG = MyBase.Columns("XG")
            Me.columnXH = MyBase.Columns("XH")
            Me.columnXI = MyBase.Columns("XI")
            Me.columnXJ = MyBase.Columns("XJ")
            Me.columnXK = MyBase.Columns("XK")
            Me.columnXL = MyBase.Columns("XL")
            Me.columnXM = MyBase.Columns("XM")
            Me.columnXN = MyBase.Columns("XN")
            Me.columnJV = MyBase.Columns("JV")
            Me.columnKT = MyBase.Columns("KT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnBA = New Global.System.Data.DataColumn("BA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBA)
            Me.columnBB = New Global.System.Data.DataColumn("BB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB)
            Me.columnBC = New Global.System.Data.DataColumn("BC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBC)
            Me.columnBD = New Global.System.Data.DataColumn("BD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBD)
            Me.columnBE = New Global.System.Data.DataColumn("BE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBE)
            Me.columnBF = New Global.System.Data.DataColumn("BF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBF)
            Me.columnBG = New Global.System.Data.DataColumn("BG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBG)
            Me.columnBH = New Global.System.Data.DataColumn("BH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBH)
            Me.columnBI = New Global.System.Data.DataColumn("BI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBI)
            Me.columnBJ = New Global.System.Data.DataColumn("BJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBJ)
            Me.columnBK = New Global.System.Data.DataColumn("BK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK)
            Me.columnBL = New Global.System.Data.DataColumn("BL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBL)
            Me.columnBM = New Global.System.Data.DataColumn("BM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBM)
            Me.columnBN = New Global.System.Data.DataColumn("BN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBN)
            Me.columnBO = New Global.System.Data.DataColumn("BO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBO)
            Me.columnBP = New Global.System.Data.DataColumn("BP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBP)
            Me.columnBQ = New Global.System.Data.DataColumn("BQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBQ)
            Me.columnCA = New Global.System.Data.DataColumn("CA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCA)
            Me.columnCC = New Global.System.Data.DataColumn("CC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCC)
            Me.columnCD1 = New Global.System.Data.DataColumn("CD1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCD1)
            Me.columnCD2 = New Global.System.Data.DataColumn("CD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCD2)
            Me.columnCE = New Global.System.Data.DataColumn("CE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCE)
            Me.columnCF = New Global.System.Data.DataColumn("CF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCF)
            Me.columnCG = New Global.System.Data.DataColumn("CG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG)
            Me.columnDB = New Global.System.Data.DataColumn("DB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDB)
            Me.columnDC = New Global.System.Data.DataColumn("DC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDC)
            Me.columnDD1 = New Global.System.Data.DataColumn("DD1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDD1)
            Me.columnDD2 = New Global.System.Data.DataColumn("DD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDD2)
            Me.columnDE = New Global.System.Data.DataColumn("DE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDE)
            Me.columnDF = New Global.System.Data.DataColumn("DF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDF)
            Me.columnEA = New Global.System.Data.DataColumn("EA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEA)
            Me.columnEB = New Global.System.Data.DataColumn("EB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEB)
            Me.columnEC = New Global.System.Data.DataColumn("EC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEC)
            Me.columnED = New Global.System.Data.DataColumn("ED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnED)
            Me.columnED1 = New Global.System.Data.DataColumn("ED1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnED1)
            Me.columnED2 = New Global.System.Data.DataColumn("ED2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnED2)
            Me.columnEE = New Global.System.Data.DataColumn("EE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEE)
            Me.columnEF = New Global.System.Data.DataColumn("EF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEF)
            Me.columnEG = New Global.System.Data.DataColumn("EG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEG)
            Me.columnEH = New Global.System.Data.DataColumn("EH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEH)
            Me.columnEJ = New Global.System.Data.DataColumn("EJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEJ)
            Me.columnDA1 = New Global.System.Data.DataColumn("DA1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDA1)
            Me.columnDA2 = New Global.System.Data.DataColumn("DA2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDA2)
            Me.columnDA3 = New Global.System.Data.DataColumn("DA3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDA3)
            Me.columnNN = New Global.System.Data.DataColumn("NN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNN)
            Me.columnBR = New Global.System.Data.DataColumn("BR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBR)
            Me.columnOM = New Global.System.Data.DataColumn("OM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOM)
            Me.columnEI = New Global.System.Data.DataColumn("EI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEI)
            Me.columnEK = New Global.System.Data.DataColumn("EK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEK)
            Me.columnEL = New Global.System.Data.DataColumn("EL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEL)
            Me.columnEM = New Global.System.Data.DataColumn("EM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEM)
            Me.columnEN = New Global.System.Data.DataColumn("EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEN)
            Me.columnXA = New Global.System.Data.DataColumn("XA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXA)
            Me.columnXB = New Global.System.Data.DataColumn("XB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXB)
            Me.columnXC = New Global.System.Data.DataColumn("XC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXC)
            Me.columnXD = New Global.System.Data.DataColumn("XD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXD)
            Me.columnXE = New Global.System.Data.DataColumn("XE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXE)
            Me.columnXF = New Global.System.Data.DataColumn("XF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXF)
            Me.columnXG = New Global.System.Data.DataColumn("XG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXG)
            Me.columnXH = New Global.System.Data.DataColumn("XH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXH)
            Me.columnXI = New Global.System.Data.DataColumn("XI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXI)
            Me.columnXJ = New Global.System.Data.DataColumn("XJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXJ)
            Me.columnXK = New Global.System.Data.DataColumn("XK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXK)
            Me.columnXL = New Global.System.Data.DataColumn("XL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXL)
            Me.columnXM = New Global.System.Data.DataColumn("XM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXM)
            Me.columnXN = New Global.System.Data.DataColumn("XN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXN)
            Me.columnJV = New Global.System.Data.DataColumn("JV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJV)
            Me.columnKT = New Global.System.Data.DataColumn("KT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKT)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnBA.MaxLength = 12
            Me.columnBB.MaxLength = 9
            Me.columnBC.MaxLength = 1
            Me.columnBD.MaxLength = 1
            Me.columnBE.MaxLength = 1
            Me.columnBF.MaxLength = 2
            Me.columnBG.MaxLength = 1
            Me.columnBH.MaxLength = 1
            Me.columnBI.MaxLength = 2
            Me.columnBJ.MaxLength = 12
            Me.columnBK.MaxLength = 9
            Me.columnBL.MaxLength = 1
            Me.columnBM.MaxLength = 1
            Me.columnBN.MaxLength = 1
            Me.columnBO.MaxLength = 2
            Me.columnBP.MaxLength = 1
            Me.columnBQ.MaxLength = 1
            Me.columnCA.MaxLength = 20
            Me.columnCC.MaxLength = 20
            Me.columnCD1.MaxLength = 18
            Me.columnCD2.MaxLength = 2
            Me.columnCE.MaxLength = 9
            Me.columnCF.MaxLength = 2
            Me.columnCG.MaxLength = 1
            Me.columnDB.MaxLength = 1
            Me.columnDC.MaxLength = 20
            Me.columnDD1.MaxLength = 18
            Me.columnDD2.MaxLength = 2
            Me.columnDE.MaxLength = 9
            Me.columnDF.MaxLength = 3
            Me.columnEA.MaxLength = 10
            Me.columnEB.MaxLength = 10
            Me.columnEC.MaxLength = 10
            Me.columnED.MaxLength = 10
            Me.columnED1.MaxLength = 4
            Me.columnED2.MaxLength = 4
            Me.columnEE.MaxLength = 1
            Me.columnEF.MaxLength = 1
            Me.columnEG.MaxLength = 1
            Me.columnEH.MaxLength = 1
            Me.columnEJ.MaxLength = 1
            Me.columnDA1.MaxLength = 12
            Me.columnDA2.MaxLength = 8
            Me.columnDA3.MaxLength = 1
            Me.columnNN.MaxLength = 1
            Me.columnBR.MaxLength = 2
            Me.columnOM.MaxLength = 1
            Me.columnEI.MaxLength = 7
            Me.columnEK.MaxLength = 6
            Me.columnEL.MaxLength = 6
            Me.columnEM.MaxLength = 6
            Me.columnEN.MaxLength = 6
            Me.columnXB.MaxLength = 2
            Me.columnXC.MaxLength = 2
            Me.columnXD.MaxLength = 2
            Me.columnXE.MaxLength = 1
            Me.columnXF.MaxLength = 1
            Me.columnXG.MaxLength = 8
            Me.columnXH.MaxLength = 2
            Me.columnXI.MaxLength = 2
            Me.columnXJ.MaxLength = 2
            Me.columnXK.MaxLength = 1
            Me.columnXL.MaxLength = 1
            Me.columnXM.MaxLength = 2
            Me.columnXN.MaxLength = 2
            Me.columnJV.MaxLength = 2
            Me.columnKT.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFAMISApplicantInformationRow() As FAMISApplicantInformationRow
            Return CType(Me.NewRow,FAMISApplicantInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FAMISApplicantInformationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FAMISApplicantInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FAMISApplicantInformationRowChangedEvent) Is Nothing) Then
                RaiseEvent FAMISApplicantInformationRowChanged(Me, New FAMISApplicantInformationRowChangeEvent(CType(e.Row,FAMISApplicantInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FAMISApplicantInformationRowChangingEvent) Is Nothing) Then
                RaiseEvent FAMISApplicantInformationRowChanging(Me, New FAMISApplicantInformationRowChangeEvent(CType(e.Row,FAMISApplicantInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FAMISApplicantInformationRowDeletedEvent) Is Nothing) Then
                RaiseEvent FAMISApplicantInformationRowDeleted(Me, New FAMISApplicantInformationRowChangeEvent(CType(e.Row,FAMISApplicantInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FAMISApplicantInformationRowDeletingEvent) Is Nothing) Then
                RaiseEvent FAMISApplicantInformationRowDeleting(Me, New FAMISApplicantInformationRowChangeEvent(CType(e.Row,FAMISApplicantInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFAMISApplicantInformationRow(ByVal row As FAMISApplicantInformationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PhoenixDataSet = New PhoenixDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FAMISApplicantInformationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FAMISCaseChildDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnQA As Global.System.Data.DataColumn
        
        Private columnQB As Global.System.Data.DataColumn
        
        Private columnQC As Global.System.Data.DataColumn
        
        Private columnQD As Global.System.Data.DataColumn
        
        Private columnQF As Global.System.Data.DataColumn
        
        Private columnQG As Global.System.Data.DataColumn
        
        Private columnQH As Global.System.Data.DataColumn
        
        Private columnQJ As Global.System.Data.DataColumn
        
        Private columnQK As Global.System.Data.DataColumn
        
        Private columnQL As Global.System.Data.DataColumn
        
        Private columnQM As Global.System.Data.DataColumn
        
        Private columnQN As Global.System.Data.DataColumn
        
        Private columnQO As Global.System.Data.DataColumn
        
        Private columnRA As Global.System.Data.DataColumn
        
        Private columnRB As Global.System.Data.DataColumn
        
        Private columnRC As Global.System.Data.DataColumn
        
        Private columnRD As Global.System.Data.DataColumn
        
        Private columnRE As Global.System.Data.DataColumn
        
        Private columnRF As Global.System.Data.DataColumn
        
        Private columnRG As Global.System.Data.DataColumn
        
        Private columnRH As Global.System.Data.DataColumn
        
        Private columnRH2 As Global.System.Data.DataColumn
        
        Private columnRI As Global.System.Data.DataColumn
        
        Private columnRJ1 As Global.System.Data.DataColumn
        
        Private columnRJ2 As Global.System.Data.DataColumn
        
        Private columnRK As Global.System.Data.DataColumn
        
        Private columnRL As Global.System.Data.DataColumn
        
        Private columnRM As Global.System.Data.DataColumn
        
        Private columnRP As Global.System.Data.DataColumn
        
        Private columnRR As Global.System.Data.DataColumn
        
        Private columnSN As Global.System.Data.DataColumn
        
        Private columnSQ As Global.System.Data.DataColumn
        
        Private columnSR As Global.System.Data.DataColumn
        
        Private columnTA As Global.System.Data.DataColumn
        
        Private columnTB As Global.System.Data.DataColumn
        
        Private columnTI As Global.System.Data.DataColumn
        
        Private columnTJ As Global.System.Data.DataColumn
        
        Private columnTF As Global.System.Data.DataColumn
        
        Private columnTK As Global.System.Data.DataColumn
        
        Private columnTD As Global.System.Data.DataColumn
        
        Private columnUB As Global.System.Data.DataColumn
        
        Private columnRN As Global.System.Data.DataColumn
        
        Private columnRO As Global.System.Data.DataColumn
        
        Private columnRQ As Global.System.Data.DataColumn
        
        Private columnSA As Global.System.Data.DataColumn
        
        Private columnSB As Global.System.Data.DataColumn
        
        Private columnSC As Global.System.Data.DataColumn
        
        Private columnSD As Global.System.Data.DataColumn
        
        Private columnSE As Global.System.Data.DataColumn
        
        Private columnSF As Global.System.Data.DataColumn
        
        Private columnSG As Global.System.Data.DataColumn
        
        Private columnSH As Global.System.Data.DataColumn
        
        Private columnSJ As Global.System.Data.DataColumn
        
        Private columnSK As Global.System.Data.DataColumn
        
        Private columnSL As Global.System.Data.DataColumn
        
        Private columnSM As Global.System.Data.DataColumn
        
        Private columnSO As Global.System.Data.DataColumn
        
        Private columnSP As Global.System.Data.DataColumn
        
        Private columnSI As Global.System.Data.DataColumn
        
        Private columnSS As Global.System.Data.DataColumn
        
        Private columnTG As Global.System.Data.DataColumn
        
        Private columnTH As Global.System.Data.DataColumn
        
        Private columnTL As Global.System.Data.DataColumn
        
        Private columnTM As Global.System.Data.DataColumn
        
        Private columnTO1 As Global.System.Data.DataColumn
        
        Private columnTP As Global.System.Data.DataColumn
        
        Private columnTQ As Global.System.Data.DataColumn
        
        Private columnTR As Global.System.Data.DataColumn
        
        Private columnTS As Global.System.Data.DataColumn
        
        Private columnUA As Global.System.Data.DataColumn
        
        Private columnUC As Global.System.Data.DataColumn
        
        Private columnUD As Global.System.Data.DataColumn
        
        Private columnUE As Global.System.Data.DataColumn
        
        Private columnUF As Global.System.Data.DataColumn
        
        Private columnUG As Global.System.Data.DataColumn
        
        Private columnUH As Global.System.Data.DataColumn
        
        Private columnUK As Global.System.Data.DataColumn
        
        Private columnUL As Global.System.Data.DataColumn
        
        Private columnTC As Global.System.Data.DataColumn
        
        Private columnTE As Global.System.Data.DataColumn
        
        Private columnUI As Global.System.Data.DataColumn
        
        Private columnYA As Global.System.Data.DataColumn
        
        Private columnQE As Global.System.Data.DataColumn
        
        Private columnQI As Global.System.Data.DataColumn
        
        Private columnTT As Global.System.Data.DataColumn
        
        Private columnTU As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FAMISCaseChild"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RH2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRH2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RJ1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRJ1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RJ2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRJ2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTO1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ULColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FAMISCaseChildRow
            Get
                Return CType(Me.Rows(index),FAMISCaseChildRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISCaseChildRowChanging As FAMISCaseChildRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISCaseChildRowChanged As FAMISCaseChildRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISCaseChildRowDeleting As FAMISCaseChildRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISCaseChildRowDeleted As FAMISCaseChildRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFAMISCaseChildRow(ByVal row As FAMISCaseChildRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFAMISCaseChildRow( _
                    ByVal CaseNumber As String,  _
                    ByVal QA As String,  _
                    ByVal QB As String,  _
                    ByVal QC As String,  _
                    ByVal QD As String,  _
                    ByVal QF As String,  _
                    ByVal QG As Date,  _
                    ByVal QH As String,  _
                    ByVal QJ As String,  _
                    ByVal QK As Date,  _
                    ByVal QL As String,  _
                    ByVal QM As String,  _
                    ByVal QN As String,  _
                    ByVal QO As String,  _
                    ByVal RA As String,  _
                    ByVal RB As String,  _
                    ByVal RC As String,  _
                    ByVal RD As String,  _
                    ByVal RE As String,  _
                    ByVal RF As String,  _
                    ByVal RG As String,  _
                    ByVal RH As String,  _
                    ByVal RH2 As String,  _
                    ByVal RI As String,  _
                    ByVal RJ1 As String,  _
                    ByVal RJ2 As String,  _
                    ByVal RK As String,  _
                    ByVal RL As String,  _
                    ByVal RM As String,  _
                    ByVal RP As String,  _
                    ByVal RR As String,  _
                    ByVal SN As Date,  _
                    ByVal SQ As String,  _
                    ByVal SR As String,  _
                    ByVal TA As String,  _
                    ByVal TB As String,  _
                    ByVal TI As String,  _
                    ByVal TJ As String,  _
                    ByVal TF As String,  _
                    ByVal TK As String,  _
                    ByVal TD As String,  _
                    ByVal UB As String,  _
                    ByVal RN As String,  _
                    ByVal RO As String,  _
                    ByVal RQ As String,  _
                    ByVal SA As String,  _
                    ByVal SB As String,  _
                    ByVal SC As String,  _
                    ByVal SD As String,  _
                    ByVal SE As String,  _
                    ByVal SF As String,  _
                    ByVal SG As String,  _
                    ByVal SH As String,  _
                    ByVal SJ As String,  _
                    ByVal SK As String,  _
                    ByVal SL As String,  _
                    ByVal SM As String,  _
                    ByVal SO As String,  _
                    ByVal SP As String,  _
                    ByVal SI As String,  _
                    ByVal SS As String,  _
                    ByVal TG As String,  _
                    ByVal TH As String,  _
                    ByVal TL As Date,  _
                    ByVal TM As String,  _
                    ByVal TO1 As String,  _
                    ByVal TP As String,  _
                    ByVal TQ As String,  _
                    ByVal TR As String,  _
                    ByVal TS As String,  _
                    ByVal UA As String,  _
                    ByVal UC As String,  _
                    ByVal UD As String,  _
                    ByVal UE As String,  _
                    ByVal UF As String,  _
                    ByVal UG As String,  _
                    ByVal UH As String,  _
                    ByVal UK As String,  _
                    ByVal UL As String,  _
                    ByVal TC As String,  _
                    ByVal TE As Date,  _
                    ByVal UI As String,  _
                    ByVal YA As String,  _
                    ByVal QE As String,  _
                    ByVal QI As String,  _
                    ByVal TT As String,  _
                    ByVal TU As Date) As FAMISCaseChildRow
            Dim rowFAMISCaseChildRow As FAMISCaseChildRow = CType(Me.NewRow,FAMISCaseChildRow)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, QA, QB, QC, QD, QF, QG, QH, QJ, QK, QL, QM, QN, QO, RA, RB, RC, RD, RE, RF, RG, RH, RH2, RI, RJ1, RJ2, RK, RL, RM, RP, RR, SN, SQ, SR, TA, TB, TI, TJ, TF, TK, TD, UB, RN, RO, RQ, SA, SB, SC, SD, SE, SF, SG, SH, SJ, SK, SL, SM, SO, SP, SI, SS, TG, TH, TL, TM, TO1, TP, TQ, TR, TS, UA, UC, UD, UE, UF, UG, UH, UK, UL, TC, TE, UI, YA, QE, QI, TT, TU}
            rowFAMISCaseChildRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFAMISCaseChildRow)
            Return rowFAMISCaseChildRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FAMISCaseChildDataTable = CType(MyBase.Clone,FAMISCaseChildDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FAMISCaseChildDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnQA = MyBase.Columns("QA")
            Me.columnQB = MyBase.Columns("QB")
            Me.columnQC = MyBase.Columns("QC")
            Me.columnQD = MyBase.Columns("QD")
            Me.columnQF = MyBase.Columns("QF")
            Me.columnQG = MyBase.Columns("QG")
            Me.columnQH = MyBase.Columns("QH")
            Me.columnQJ = MyBase.Columns("QJ")
            Me.columnQK = MyBase.Columns("QK")
            Me.columnQL = MyBase.Columns("QL")
            Me.columnQM = MyBase.Columns("QM")
            Me.columnQN = MyBase.Columns("QN")
            Me.columnQO = MyBase.Columns("QO")
            Me.columnRA = MyBase.Columns("RA")
            Me.columnRB = MyBase.Columns("RB")
            Me.columnRC = MyBase.Columns("RC")
            Me.columnRD = MyBase.Columns("RD")
            Me.columnRE = MyBase.Columns("RE")
            Me.columnRF = MyBase.Columns("RF")
            Me.columnRG = MyBase.Columns("RG")
            Me.columnRH = MyBase.Columns("RH")
            Me.columnRH2 = MyBase.Columns("RH2")
            Me.columnRI = MyBase.Columns("RI")
            Me.columnRJ1 = MyBase.Columns("RJ1")
            Me.columnRJ2 = MyBase.Columns("RJ2")
            Me.columnRK = MyBase.Columns("RK")
            Me.columnRL = MyBase.Columns("RL")
            Me.columnRM = MyBase.Columns("RM")
            Me.columnRP = MyBase.Columns("RP")
            Me.columnRR = MyBase.Columns("RR")
            Me.columnSN = MyBase.Columns("SN")
            Me.columnSQ = MyBase.Columns("SQ")
            Me.columnSR = MyBase.Columns("SR")
            Me.columnTA = MyBase.Columns("TA")
            Me.columnTB = MyBase.Columns("TB")
            Me.columnTI = MyBase.Columns("TI")
            Me.columnTJ = MyBase.Columns("TJ")
            Me.columnTF = MyBase.Columns("TF")
            Me.columnTK = MyBase.Columns("TK")
            Me.columnTD = MyBase.Columns("TD")
            Me.columnUB = MyBase.Columns("UB")
            Me.columnRN = MyBase.Columns("RN")
            Me.columnRO = MyBase.Columns("RO")
            Me.columnRQ = MyBase.Columns("RQ")
            Me.columnSA = MyBase.Columns("SA")
            Me.columnSB = MyBase.Columns("SB")
            Me.columnSC = MyBase.Columns("SC")
            Me.columnSD = MyBase.Columns("SD")
            Me.columnSE = MyBase.Columns("SE")
            Me.columnSF = MyBase.Columns("SF")
            Me.columnSG = MyBase.Columns("SG")
            Me.columnSH = MyBase.Columns("SH")
            Me.columnSJ = MyBase.Columns("SJ")
            Me.columnSK = MyBase.Columns("SK")
            Me.columnSL = MyBase.Columns("SL")
            Me.columnSM = MyBase.Columns("SM")
            Me.columnSO = MyBase.Columns("SO")
            Me.columnSP = MyBase.Columns("SP")
            Me.columnSI = MyBase.Columns("SI")
            Me.columnSS = MyBase.Columns("SS")
            Me.columnTG = MyBase.Columns("TG")
            Me.columnTH = MyBase.Columns("TH")
            Me.columnTL = MyBase.Columns("TL")
            Me.columnTM = MyBase.Columns("TM")
            Me.columnTO1 = MyBase.Columns("TO1")
            Me.columnTP = MyBase.Columns("TP")
            Me.columnTQ = MyBase.Columns("TQ")
            Me.columnTR = MyBase.Columns("TR")
            Me.columnTS = MyBase.Columns("TS")
            Me.columnUA = MyBase.Columns("UA")
            Me.columnUC = MyBase.Columns("UC")
            Me.columnUD = MyBase.Columns("UD")
            Me.columnUE = MyBase.Columns("UE")
            Me.columnUF = MyBase.Columns("UF")
            Me.columnUG = MyBase.Columns("UG")
            Me.columnUH = MyBase.Columns("UH")
            Me.columnUK = MyBase.Columns("UK")
            Me.columnUL = MyBase.Columns("UL")
            Me.columnTC = MyBase.Columns("TC")
            Me.columnTE = MyBase.Columns("TE")
            Me.columnUI = MyBase.Columns("UI")
            Me.columnYA = MyBase.Columns("YA")
            Me.columnQE = MyBase.Columns("QE")
            Me.columnQI = MyBase.Columns("QI")
            Me.columnTT = MyBase.Columns("TT")
            Me.columnTU = MyBase.Columns("TU")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnQA = New Global.System.Data.DataColumn("QA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQA)
            Me.columnQB = New Global.System.Data.DataColumn("QB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQB)
            Me.columnQC = New Global.System.Data.DataColumn("QC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQC)
            Me.columnQD = New Global.System.Data.DataColumn("QD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQD)
            Me.columnQF = New Global.System.Data.DataColumn("QF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQF)
            Me.columnQG = New Global.System.Data.DataColumn("QG", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQG)
            Me.columnQH = New Global.System.Data.DataColumn("QH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQH)
            Me.columnQJ = New Global.System.Data.DataColumn("QJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQJ)
            Me.columnQK = New Global.System.Data.DataColumn("QK", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQK)
            Me.columnQL = New Global.System.Data.DataColumn("QL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQL)
            Me.columnQM = New Global.System.Data.DataColumn("QM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQM)
            Me.columnQN = New Global.System.Data.DataColumn("QN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQN)
            Me.columnQO = New Global.System.Data.DataColumn("QO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQO)
            Me.columnRA = New Global.System.Data.DataColumn("RA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRA)
            Me.columnRB = New Global.System.Data.DataColumn("RB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRB)
            Me.columnRC = New Global.System.Data.DataColumn("RC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC)
            Me.columnRD = New Global.System.Data.DataColumn("RD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRD)
            Me.columnRE = New Global.System.Data.DataColumn("RE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRE)
            Me.columnRF = New Global.System.Data.DataColumn("RF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF)
            Me.columnRG = New Global.System.Data.DataColumn("RG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRG)
            Me.columnRH = New Global.System.Data.DataColumn("RH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRH)
            Me.columnRH2 = New Global.System.Data.DataColumn("RH2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRH2)
            Me.columnRI = New Global.System.Data.DataColumn("RI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRI)
            Me.columnRJ1 = New Global.System.Data.DataColumn("RJ1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRJ1)
            Me.columnRJ2 = New Global.System.Data.DataColumn("RJ2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRJ2)
            Me.columnRK = New Global.System.Data.DataColumn("RK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRK)
            Me.columnRL = New Global.System.Data.DataColumn("RL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRL)
            Me.columnRM = New Global.System.Data.DataColumn("RM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRM)
            Me.columnRP = New Global.System.Data.DataColumn("RP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRP)
            Me.columnRR = New Global.System.Data.DataColumn("RR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRR)
            Me.columnSN = New Global.System.Data.DataColumn("SN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSN)
            Me.columnSQ = New Global.System.Data.DataColumn("SQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSQ)
            Me.columnSR = New Global.System.Data.DataColumn("SR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSR)
            Me.columnTA = New Global.System.Data.DataColumn("TA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTA)
            Me.columnTB = New Global.System.Data.DataColumn("TB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTB)
            Me.columnTI = New Global.System.Data.DataColumn("TI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTI)
            Me.columnTJ = New Global.System.Data.DataColumn("TJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTJ)
            Me.columnTF = New Global.System.Data.DataColumn("TF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTF)
            Me.columnTK = New Global.System.Data.DataColumn("TK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTK)
            Me.columnTD = New Global.System.Data.DataColumn("TD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTD)
            Me.columnUB = New Global.System.Data.DataColumn("UB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUB)
            Me.columnRN = New Global.System.Data.DataColumn("RN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRN)
            Me.columnRO = New Global.System.Data.DataColumn("RO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRO)
            Me.columnRQ = New Global.System.Data.DataColumn("RQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRQ)
            Me.columnSA = New Global.System.Data.DataColumn("SA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSA)
            Me.columnSB = New Global.System.Data.DataColumn("SB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB)
            Me.columnSC = New Global.System.Data.DataColumn("SC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSC)
            Me.columnSD = New Global.System.Data.DataColumn("SD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSD)
            Me.columnSE = New Global.System.Data.DataColumn("SE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSE)
            Me.columnSF = New Global.System.Data.DataColumn("SF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSF)
            Me.columnSG = New Global.System.Data.DataColumn("SG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSG)
            Me.columnSH = New Global.System.Data.DataColumn("SH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSH)
            Me.columnSJ = New Global.System.Data.DataColumn("SJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSJ)
            Me.columnSK = New Global.System.Data.DataColumn("SK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSK)
            Me.columnSL = New Global.System.Data.DataColumn("SL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSL)
            Me.columnSM = New Global.System.Data.DataColumn("SM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSM)
            Me.columnSO = New Global.System.Data.DataColumn("SO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSO)
            Me.columnSP = New Global.System.Data.DataColumn("SP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP)
            Me.columnSI = New Global.System.Data.DataColumn("SI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSI)
            Me.columnSS = New Global.System.Data.DataColumn("SS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSS)
            Me.columnTG = New Global.System.Data.DataColumn("TG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTG)
            Me.columnTH = New Global.System.Data.DataColumn("TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTH)
            Me.columnTL = New Global.System.Data.DataColumn("TL", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTL)
            Me.columnTM = New Global.System.Data.DataColumn("TM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTM)
            Me.columnTO1 = New Global.System.Data.DataColumn("TO1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTO1)
            Me.columnTP = New Global.System.Data.DataColumn("TP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP)
            Me.columnTQ = New Global.System.Data.DataColumn("TQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTQ)
            Me.columnTR = New Global.System.Data.DataColumn("TR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTR)
            Me.columnTS = New Global.System.Data.DataColumn("TS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTS)
            Me.columnUA = New Global.System.Data.DataColumn("UA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUA)
            Me.columnUC = New Global.System.Data.DataColumn("UC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUC)
            Me.columnUD = New Global.System.Data.DataColumn("UD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUD)
            Me.columnUE = New Global.System.Data.DataColumn("UE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUE)
            Me.columnUF = New Global.System.Data.DataColumn("UF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUF)
            Me.columnUG = New Global.System.Data.DataColumn("UG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUG)
            Me.columnUH = New Global.System.Data.DataColumn("UH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUH)
            Me.columnUK = New Global.System.Data.DataColumn("UK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUK)
            Me.columnUL = New Global.System.Data.DataColumn("UL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUL)
            Me.columnTC = New Global.System.Data.DataColumn("TC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTC)
            Me.columnTE = New Global.System.Data.DataColumn("TE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTE)
            Me.columnUI = New Global.System.Data.DataColumn("UI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUI)
            Me.columnYA = New Global.System.Data.DataColumn("YA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYA)
            Me.columnQE = New Global.System.Data.DataColumn("QE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQE)
            Me.columnQI = New Global.System.Data.DataColumn("QI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQI)
            Me.columnTT = New Global.System.Data.DataColumn("TT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTT)
            Me.columnTU = New Global.System.Data.DataColumn("TU", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTU)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnQA.MaxLength = 1
            Me.columnQB.MaxLength = 12
            Me.columnQC.MaxLength = 9
            Me.columnQD.MaxLength = 1
            Me.columnQF.MaxLength = 1
            Me.columnQH.MaxLength = 2
            Me.columnQJ.MaxLength = 2
            Me.columnQL.MaxLength = 1
            Me.columnQM.MaxLength = 9
            Me.columnQN.MaxLength = 1
            Me.columnQO.MaxLength = 2
            Me.columnRA.MaxLength = 12
            Me.columnRB.MaxLength = 2
            Me.columnRC.MaxLength = 12
            Me.columnRD.MaxLength = 2
            Me.columnRE.MaxLength = 2
            Me.columnRF.MaxLength = 3
            Me.columnRG.MaxLength = 2
            Me.columnRH.MaxLength = 2
            Me.columnRH2.MaxLength = 1
            Me.columnRI.MaxLength = 3
            Me.columnRJ1.MaxLength = 1
            Me.columnRJ2.MaxLength = 2
            Me.columnRK.MaxLength = 2
            Me.columnRL.MaxLength = 1
            Me.columnRM.MaxLength = 1
            Me.columnRP.MaxLength = 1
            Me.columnRR.MaxLength = 1
            Me.columnSQ.MaxLength = 1
            Me.columnSR.MaxLength = 2
            Me.columnTA.MaxLength = 8
            Me.columnTB.MaxLength = 2
            Me.columnTI.MaxLength = 3
            Me.columnTJ.MaxLength = 4
            Me.columnTF.MaxLength = 1
            Me.columnTK.MaxLength = 2
            Me.columnTD.MaxLength = 2
            Me.columnUB.MaxLength = 2
            Me.columnRN.MaxLength = 6
            Me.columnRO.MaxLength = 6
            Me.columnRQ.MaxLength = 7
            Me.columnSA.MaxLength = 7
            Me.columnSB.MaxLength = 7
            Me.columnSC.MaxLength = 7
            Me.columnSD.MaxLength = 7
            Me.columnSE.MaxLength = 7
            Me.columnSF.MaxLength = 7
            Me.columnSG.MaxLength = 7
            Me.columnSH.MaxLength = 7
            Me.columnSJ.MaxLength = 7
            Me.columnSK.MaxLength = 7
            Me.columnSL.MaxLength = 7
            Me.columnSM.MaxLength = 8
            Me.columnSO.MaxLength = 7
            Me.columnSP.MaxLength = 7
            Me.columnSI.MaxLength = 1
            Me.columnSS.MaxLength = 1
            Me.columnTG.MaxLength = 2
            Me.columnTH.MaxLength = 2
            Me.columnTM.MaxLength = 2
            Me.columnTO1.MaxLength = 1
            Me.columnTP.MaxLength = 1
            Me.columnTQ.MaxLength = 1
            Me.columnTR.MaxLength = 2
            Me.columnTS.MaxLength = 2
            Me.columnUA.MaxLength = 10
            Me.columnUC.MaxLength = 2
            Me.columnUD.MaxLength = 1
            Me.columnUE.MaxLength = 7
            Me.columnUF.MaxLength = 2
            Me.columnUG.MaxLength = 7
            Me.columnUH.MaxLength = 7
            Me.columnUK.MaxLength = 7
            Me.columnUL.MaxLength = 7
            Me.columnTC.MaxLength = 7
            Me.columnUI.MaxLength = 1
            Me.columnYA.MaxLength = 1
            Me.columnQE.MaxLength = 2
            Me.columnQI.MaxLength = 2
            Me.columnTT.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFAMISCaseChildRow() As FAMISCaseChildRow
            Return CType(Me.NewRow,FAMISCaseChildRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FAMISCaseChildRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FAMISCaseChildRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FAMISCaseChildRowChangedEvent) Is Nothing) Then
                RaiseEvent FAMISCaseChildRowChanged(Me, New FAMISCaseChildRowChangeEvent(CType(e.Row,FAMISCaseChildRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FAMISCaseChildRowChangingEvent) Is Nothing) Then
                RaiseEvent FAMISCaseChildRowChanging(Me, New FAMISCaseChildRowChangeEvent(CType(e.Row,FAMISCaseChildRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FAMISCaseChildRowDeletedEvent) Is Nothing) Then
                RaiseEvent FAMISCaseChildRowDeleted(Me, New FAMISCaseChildRowChangeEvent(CType(e.Row,FAMISCaseChildRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FAMISCaseChildRowDeletingEvent) Is Nothing) Then
                RaiseEvent FAMISCaseChildRowDeleting(Me, New FAMISCaseChildRowChangeEvent(CType(e.Row,FAMISCaseChildRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFAMISCaseChildRow(ByVal row As FAMISCaseChildRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PhoenixDataSet = New PhoenixDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FAMISCaseChildDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FAMISCaseInformationDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnAA As Global.System.Data.DataColumn
        
        Private columnAB As Global.System.Data.DataColumn
        
        Private columnAC As Global.System.Data.DataColumn
        
        Private columnAD As Global.System.Data.DataColumn
        
        Private columnAE As Global.System.Data.DataColumn
        
        Private columnAF As Global.System.Data.DataColumn
        
        Private columnAG As Global.System.Data.DataColumn
        
        Private columnAH As Global.System.Data.DataColumn
        
        Private columnAI As Global.System.Data.DataColumn
        
        Private columnAJ As Global.System.Data.DataColumn
        
        Private columnAK As Global.System.Data.DataColumn
        
        Private columnAL As Global.System.Data.DataColumn
        
        Private columnAM As Global.System.Data.DataColumn
        
        Private columnAN As Global.System.Data.DataColumn
        
        Private columnDATEENTERED As Global.System.Data.DataColumn
        
        Private columnP03 As Global.System.Data.DataColumn
        
        Private columnP05 As Global.System.Data.DataColumn
        
        Private columnOPERATOR As Global.System.Data.DataColumn
        
        Private columnP09 As Global.System.Data.DataColumn
        
        Private columnBATCHNUMBER As Global.System.Data.DataColumn
        
        Private columnP10 As Global.System.Data.DataColumn
        
        Private columnWW As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FAMISCaseInformation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ABColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATEENTEREDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEENTERED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property P03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnP03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property P05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnP05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OPERATORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERATOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property P09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnP09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BATCHNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBATCHNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property P10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnP10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FAMISCaseInformationRow
            Get
                Return CType(Me.Rows(index),FAMISCaseInformationRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISCaseInformationRowChanging As FAMISCaseInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISCaseInformationRowChanged As FAMISCaseInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISCaseInformationRowDeleting As FAMISCaseInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISCaseInformationRowDeleted As FAMISCaseInformationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFAMISCaseInformationRow(ByVal row As FAMISCaseInformationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFAMISCaseInformationRow( _
                    ByVal CaseNumber As String,  _
                    ByVal AA As String,  _
                    ByVal AB As String,  _
                    ByVal AC As String,  _
                    ByVal AD As String,  _
                    ByVal AE As String,  _
                    ByVal AF As String,  _
                    ByVal AG As String,  _
                    ByVal AH As String,  _
                    ByVal AI As String,  _
                    ByVal AJ As String,  _
                    ByVal AK As Date,  _
                    ByVal AL As String,  _
                    ByVal AM As String,  _
                    ByVal AN As String,  _
                    ByVal DATEENTERED As Date,  _
                    ByVal P03 As String,  _
                    ByVal P05 As String,  _
                    ByVal _OPERATOR As String,  _
                    ByVal P09 As String,  _
                    ByVal BATCHNUMBER As String,  _
                    ByVal P10 As String,  _
                    ByVal WW As String) As FAMISCaseInformationRow
            Dim rowFAMISCaseInformationRow As FAMISCaseInformationRow = CType(Me.NewRow,FAMISCaseInformationRow)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, AA, AB, AC, AD, AE, AF, AG, AH, AI, AJ, AK, AL, AM, AN, DATEENTERED, P03, P05, _OPERATOR, P09, BATCHNUMBER, P10, WW}
            rowFAMISCaseInformationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFAMISCaseInformationRow)
            Return rowFAMISCaseInformationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FAMISCaseInformationDataTable = CType(MyBase.Clone,FAMISCaseInformationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FAMISCaseInformationDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnAA = MyBase.Columns("AA")
            Me.columnAB = MyBase.Columns("AB")
            Me.columnAC = MyBase.Columns("AC")
            Me.columnAD = MyBase.Columns("AD")
            Me.columnAE = MyBase.Columns("AE")
            Me.columnAF = MyBase.Columns("AF")
            Me.columnAG = MyBase.Columns("AG")
            Me.columnAH = MyBase.Columns("AH")
            Me.columnAI = MyBase.Columns("AI")
            Me.columnAJ = MyBase.Columns("AJ")
            Me.columnAK = MyBase.Columns("AK")
            Me.columnAL = MyBase.Columns("AL")
            Me.columnAM = MyBase.Columns("AM")
            Me.columnAN = MyBase.Columns("AN")
            Me.columnDATEENTERED = MyBase.Columns("DATEENTERED")
            Me.columnP03 = MyBase.Columns("P03")
            Me.columnP05 = MyBase.Columns("P05")
            Me.columnOPERATOR = MyBase.Columns("OPERATOR")
            Me.columnP09 = MyBase.Columns("P09")
            Me.columnBATCHNUMBER = MyBase.Columns("BATCHNUMBER")
            Me.columnP10 = MyBase.Columns("P10")
            Me.columnWW = MyBase.Columns("WW")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnAA = New Global.System.Data.DataColumn("AA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAA)
            Me.columnAB = New Global.System.Data.DataColumn("AB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAB)
            Me.columnAC = New Global.System.Data.DataColumn("AC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAC)
            Me.columnAD = New Global.System.Data.DataColumn("AD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAD)
            Me.columnAE = New Global.System.Data.DataColumn("AE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAE)
            Me.columnAF = New Global.System.Data.DataColumn("AF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAF)
            Me.columnAG = New Global.System.Data.DataColumn("AG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAG)
            Me.columnAH = New Global.System.Data.DataColumn("AH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAH)
            Me.columnAI = New Global.System.Data.DataColumn("AI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAI)
            Me.columnAJ = New Global.System.Data.DataColumn("AJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAJ)
            Me.columnAK = New Global.System.Data.DataColumn("AK", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAK)
            Me.columnAL = New Global.System.Data.DataColumn("AL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAL)
            Me.columnAM = New Global.System.Data.DataColumn("AM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAM)
            Me.columnAN = New Global.System.Data.DataColumn("AN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAN)
            Me.columnDATEENTERED = New Global.System.Data.DataColumn("DATEENTERED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEENTERED)
            Me.columnP03 = New Global.System.Data.DataColumn("P03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP03)
            Me.columnP05 = New Global.System.Data.DataColumn("P05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP05)
            Me.columnOPERATOR = New Global.System.Data.DataColumn("OPERATOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnOPERATOR.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "OPERATORColumn")
            Me.columnOPERATOR.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnOPERATOR")
            Me.columnOPERATOR.ExtendedProperties.Add("Generator_UserColumnName", "OPERATOR")
            MyBase.Columns.Add(Me.columnOPERATOR)
            Me.columnP09 = New Global.System.Data.DataColumn("P09", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP09)
            Me.columnBATCHNUMBER = New Global.System.Data.DataColumn("BATCHNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBATCHNUMBER)
            Me.columnP10 = New Global.System.Data.DataColumn("P10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP10)
            Me.columnWW = New Global.System.Data.DataColumn("WW", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWW)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnAA.MaxLength = 10
            Me.columnAB.MaxLength = 3
            Me.columnAC.MaxLength = 12
            Me.columnAD.MaxLength = 9
            Me.columnAE.MaxLength = 1
            Me.columnAF.MaxLength = 2
            Me.columnAG.MaxLength = 2
            Me.columnAH.MaxLength = 2
            Me.columnAI.MaxLength = 2
            Me.columnAJ.MaxLength = 1
            Me.columnAL.MaxLength = 7
            Me.columnAM.MaxLength = 7
            Me.columnAN.MaxLength = 10
            Me.columnP03.MaxLength = 1
            Me.columnP05.MaxLength = 1
            Me.columnOPERATOR.MaxLength = 6
            Me.columnP09.MaxLength = 1
            Me.columnBATCHNUMBER.MaxLength = 7
            Me.columnP10.MaxLength = 1
            Me.columnWW.MaxLength = 3
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFAMISCaseInformationRow() As FAMISCaseInformationRow
            Return CType(Me.NewRow,FAMISCaseInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FAMISCaseInformationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FAMISCaseInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FAMISCaseInformationRowChangedEvent) Is Nothing) Then
                RaiseEvent FAMISCaseInformationRowChanged(Me, New FAMISCaseInformationRowChangeEvent(CType(e.Row,FAMISCaseInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FAMISCaseInformationRowChangingEvent) Is Nothing) Then
                RaiseEvent FAMISCaseInformationRowChanging(Me, New FAMISCaseInformationRowChangeEvent(CType(e.Row,FAMISCaseInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FAMISCaseInformationRowDeletedEvent) Is Nothing) Then
                RaiseEvent FAMISCaseInformationRowDeleted(Me, New FAMISCaseInformationRowChangeEvent(CType(e.Row,FAMISCaseInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FAMISCaseInformationRowDeletingEvent) Is Nothing) Then
                RaiseEvent FAMISCaseInformationRowDeleting(Me, New FAMISCaseInformationRowChangeEvent(CType(e.Row,FAMISCaseInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFAMISCaseInformationRow(ByVal row As FAMISCaseInformationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PhoenixDataSet = New PhoenixDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FAMISCaseInformationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FAMISFoodStampInformationDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnLA As Global.System.Data.DataColumn
        
        Private columnLB As Global.System.Data.DataColumn
        
        Private columnLC As Global.System.Data.DataColumn
        
        Private columnLD As Global.System.Data.DataColumn
        
        Private columnLE As Global.System.Data.DataColumn
        
        Private columnLF As Global.System.Data.DataColumn
        
        Private columnLG As Global.System.Data.DataColumn
        
        Private columnLH As Global.System.Data.DataColumn
        
        Private columnLI As Global.System.Data.DataColumn
        
        Private columnLJ As Global.System.Data.DataColumn
        
        Private columnLK As Global.System.Data.DataColumn
        
        Private columnLL As Global.System.Data.DataColumn
        
        Private columnLM As Global.System.Data.DataColumn
        
        Private columnLO As Global.System.Data.DataColumn
        
        Private columnLP As Global.System.Data.DataColumn
        
        Private columnLQ As Global.System.Data.DataColumn
        
        Private columnLR As Global.System.Data.DataColumn
        
        Private columnLT As Global.System.Data.DataColumn
        
        Private columnMD As Global.System.Data.DataColumn
        
        Private columnND As Global.System.Data.DataColumn
        
        Private columnNE As Global.System.Data.DataColumn
        
        Private columnNF As Global.System.Data.DataColumn
        
        Private columnNG As Global.System.Data.DataColumn
        
        Private columnNI As Global.System.Data.DataColumn
        
        Private columnNJ As Global.System.Data.DataColumn
        
        Private columnNP As Global.System.Data.DataColumn
        
        Private columnOA As Global.System.Data.DataColumn
        
        Private columnOH As Global.System.Data.DataColumn
        
        Private columnOI As Global.System.Data.DataColumn
        
        Private columnON1 As Global.System.Data.DataColumn
        
        Private columnOO As Global.System.Data.DataColumn
        
        Private columnOK As Global.System.Data.DataColumn
        
        Private columnWX As Global.System.Data.DataColumn
        
        Private columnWY As Global.System.Data.DataColumn
        
        Private columnLS As Global.System.Data.DataColumn
        
        Private columnMA As Global.System.Data.DataColumn
        
        Private columnMB As Global.System.Data.DataColumn
        
        Private columnMC As Global.System.Data.DataColumn
        
        Private columnME1 As Global.System.Data.DataColumn
        
        Private columnMF As Global.System.Data.DataColumn
        
        Private columnMG As Global.System.Data.DataColumn
        
        Private columnMH As Global.System.Data.DataColumn
        
        Private columnMI As Global.System.Data.DataColumn
        
        Private columnMJ As Global.System.Data.DataColumn
        
        Private columnMK As Global.System.Data.DataColumn
        
        Private columnML As Global.System.Data.DataColumn
        
        Private columnMM As Global.System.Data.DataColumn
        
        Private columnMN As Global.System.Data.DataColumn
        
        Private columnMO As Global.System.Data.DataColumn
        
        Private columnMP As Global.System.Data.DataColumn
        
        Private columnMQ As Global.System.Data.DataColumn
        
        Private columnMR As Global.System.Data.DataColumn
        
        Private columnNB As Global.System.Data.DataColumn
        
        Private columnNH As Global.System.Data.DataColumn
        
        Private columnNK As Global.System.Data.DataColumn
        
        Private columnNM As Global.System.Data.DataColumn
        
        Private columnNO As Global.System.Data.DataColumn
        
        Private columnOB As Global.System.Data.DataColumn
        
        Private columnOC As Global.System.Data.DataColumn
        
        Private columnOD As Global.System.Data.DataColumn
        
        Private columnOE As Global.System.Data.DataColumn
        
        Private columnOF1 As Global.System.Data.DataColumn
        
        Private columnOG As Global.System.Data.DataColumn
        
        Private columnOL As Global.System.Data.DataColumn
        
        Private columnNA As Global.System.Data.DataColumn
        
        Private columnNC As Global.System.Data.DataColumn
        
        Private columnNL As Global.System.Data.DataColumn
        
        Private columnLN As Global.System.Data.DataColumn
        
        Private columnMS As Global.System.Data.DataColumn
        
        Private columnMT As Global.System.Data.DataColumn
        
        Private columnOK1 As Global.System.Data.DataColumn
        
        Private columnOK2 As Global.System.Data.DataColumn
        
        Private columnOK3 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FAMISFoodStampInformation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ON1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnON1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ME1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnME1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnML
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OF1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOF1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OK1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOK1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OK2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOK2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OK3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOK3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FAMISFoodStampInformationRow
            Get
                Return CType(Me.Rows(index),FAMISFoodStampInformationRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISFoodStampInformationRowChanging As FAMISFoodStampInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISFoodStampInformationRowChanged As FAMISFoodStampInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISFoodStampInformationRowDeleting As FAMISFoodStampInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISFoodStampInformationRowDeleted As FAMISFoodStampInformationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFAMISFoodStampInformationRow(ByVal row As FAMISFoodStampInformationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFAMISFoodStampInformationRow( _
                    ByVal CaseNumber As String,  _
                    ByVal LA As String,  _
                    ByVal LB As String,  _
                    ByVal LC As Date,  _
                    ByVal LD As Date,  _
                    ByVal LE As Date,  _
                    ByVal LF As String,  _
                    ByVal LG As String,  _
                    ByVal LH As String,  _
                    ByVal LI As String,  _
                    ByVal LJ As String,  _
                    ByVal LK As String,  _
                    ByVal LL As String,  _
                    ByVal LM As String,  _
                    ByVal LO As String,  _
                    ByVal LP As String,  _
                    ByVal LQ As String,  _
                    ByVal LR As String,  _
                    ByVal LT As Date,  _
                    ByVal MD As String,  _
                    ByVal ND As String,  _
                    ByVal NE As String,  _
                    ByVal NF As String,  _
                    ByVal NG As Date,  _
                    ByVal NI As String,  _
                    ByVal NJ As String,  _
                    ByVal NP As String,  _
                    ByVal OA As String,  _
                    ByVal OH As String,  _
                    ByVal OI As String,  _
                    ByVal ON1 As String,  _
                    ByVal OO As String,  _
                    ByVal OK As String,  _
                    ByVal WX As String,  _
                    ByVal WY As String,  _
                    ByVal LS As String,  _
                    ByVal MA As String,  _
                    ByVal MB As String,  _
                    ByVal MC As String,  _
                    ByVal ME1 As String,  _
                    ByVal MF As String,  _
                    ByVal MG As String,  _
                    ByVal MH As String,  _
                    ByVal MI As String,  _
                    ByVal MJ As String,  _
                    ByVal MK As String,  _
                    ByVal ML As String,  _
                    ByVal MM As String,  _
                    ByVal MN As String,  _
                    ByVal MO As String,  _
                    ByVal MP As String,  _
                    ByVal MQ As String,  _
                    ByVal MR As String,  _
                    ByVal NB As String,  _
                    ByVal NH As String,  _
                    ByVal NK As String,  _
                    ByVal NM As String,  _
                    ByVal NO As String,  _
                    ByVal OB As String,  _
                    ByVal OC As String,  _
                    ByVal OD As String,  _
                    ByVal OE As String,  _
                    ByVal OF1 As String,  _
                    ByVal OG As String,  _
                    ByVal OL As String,  _
                    ByVal NA As String,  _
                    ByVal NC As Date,  _
                    ByVal NL As String,  _
                    ByVal LN As String,  _
                    ByVal MS As String,  _
                    ByVal MT As String,  _
                    ByVal OK1 As String,  _
                    ByVal OK2 As String,  _
                    ByVal OK3 As String) As FAMISFoodStampInformationRow
            Dim rowFAMISFoodStampInformationRow As FAMISFoodStampInformationRow = CType(Me.NewRow,FAMISFoodStampInformationRow)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, LA, LB, LC, LD, LE, LF, LG, LH, LI, LJ, LK, LL, LM, LO, LP, LQ, LR, LT, MD, ND, NE, NF, NG, NI, NJ, NP, OA, OH, OI, ON1, OO, OK, WX, WY, LS, MA, MB, MC, ME1, MF, MG, MH, MI, MJ, MK, ML, MM, MN, MO, MP, MQ, MR, NB, NH, NK, NM, NO, OB, OC, OD, OE, OF1, OG, OL, NA, NC, NL, LN, MS, MT, OK1, OK2, OK3}
            rowFAMISFoodStampInformationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFAMISFoodStampInformationRow)
            Return rowFAMISFoodStampInformationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FAMISFoodStampInformationDataTable = CType(MyBase.Clone,FAMISFoodStampInformationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FAMISFoodStampInformationDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnLA = MyBase.Columns("LA")
            Me.columnLB = MyBase.Columns("LB")
            Me.columnLC = MyBase.Columns("LC")
            Me.columnLD = MyBase.Columns("LD")
            Me.columnLE = MyBase.Columns("LE")
            Me.columnLF = MyBase.Columns("LF")
            Me.columnLG = MyBase.Columns("LG")
            Me.columnLH = MyBase.Columns("LH")
            Me.columnLI = MyBase.Columns("LI")
            Me.columnLJ = MyBase.Columns("LJ")
            Me.columnLK = MyBase.Columns("LK")
            Me.columnLL = MyBase.Columns("LL")
            Me.columnLM = MyBase.Columns("LM")
            Me.columnLO = MyBase.Columns("LO")
            Me.columnLP = MyBase.Columns("LP")
            Me.columnLQ = MyBase.Columns("LQ")
            Me.columnLR = MyBase.Columns("LR")
            Me.columnLT = MyBase.Columns("LT")
            Me.columnMD = MyBase.Columns("MD")
            Me.columnND = MyBase.Columns("ND")
            Me.columnNE = MyBase.Columns("NE")
            Me.columnNF = MyBase.Columns("NF")
            Me.columnNG = MyBase.Columns("NG")
            Me.columnNI = MyBase.Columns("NI")
            Me.columnNJ = MyBase.Columns("NJ")
            Me.columnNP = MyBase.Columns("NP")
            Me.columnOA = MyBase.Columns("OA")
            Me.columnOH = MyBase.Columns("OH")
            Me.columnOI = MyBase.Columns("OI")
            Me.columnON1 = MyBase.Columns("ON1")
            Me.columnOO = MyBase.Columns("OO")
            Me.columnOK = MyBase.Columns("OK")
            Me.columnWX = MyBase.Columns("WX")
            Me.columnWY = MyBase.Columns("WY")
            Me.columnLS = MyBase.Columns("LS")
            Me.columnMA = MyBase.Columns("MA")
            Me.columnMB = MyBase.Columns("MB")
            Me.columnMC = MyBase.Columns("MC")
            Me.columnME1 = MyBase.Columns("ME1")
            Me.columnMF = MyBase.Columns("MF")
            Me.columnMG = MyBase.Columns("MG")
            Me.columnMH = MyBase.Columns("MH")
            Me.columnMI = MyBase.Columns("MI")
            Me.columnMJ = MyBase.Columns("MJ")
            Me.columnMK = MyBase.Columns("MK")
            Me.columnML = MyBase.Columns("ML")
            Me.columnMM = MyBase.Columns("MM")
            Me.columnMN = MyBase.Columns("MN")
            Me.columnMO = MyBase.Columns("MO")
            Me.columnMP = MyBase.Columns("MP")
            Me.columnMQ = MyBase.Columns("MQ")
            Me.columnMR = MyBase.Columns("MR")
            Me.columnNB = MyBase.Columns("NB")
            Me.columnNH = MyBase.Columns("NH")
            Me.columnNK = MyBase.Columns("NK")
            Me.columnNM = MyBase.Columns("NM")
            Me.columnNO = MyBase.Columns("NO")
            Me.columnOB = MyBase.Columns("OB")
            Me.columnOC = MyBase.Columns("OC")
            Me.columnOD = MyBase.Columns("OD")
            Me.columnOE = MyBase.Columns("OE")
            Me.columnOF1 = MyBase.Columns("OF1")
            Me.columnOG = MyBase.Columns("OG")
            Me.columnOL = MyBase.Columns("OL")
            Me.columnNA = MyBase.Columns("NA")
            Me.columnNC = MyBase.Columns("NC")
            Me.columnNL = MyBase.Columns("NL")
            Me.columnLN = MyBase.Columns("LN")
            Me.columnMS = MyBase.Columns("MS")
            Me.columnMT = MyBase.Columns("MT")
            Me.columnOK1 = MyBase.Columns("OK1")
            Me.columnOK2 = MyBase.Columns("OK2")
            Me.columnOK3 = MyBase.Columns("OK3")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnLA = New Global.System.Data.DataColumn("LA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLA)
            Me.columnLB = New Global.System.Data.DataColumn("LB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLB)
            Me.columnLC = New Global.System.Data.DataColumn("LC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLC)
            Me.columnLD = New Global.System.Data.DataColumn("LD", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLD)
            Me.columnLE = New Global.System.Data.DataColumn("LE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLE)
            Me.columnLF = New Global.System.Data.DataColumn("LF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLF)
            Me.columnLG = New Global.System.Data.DataColumn("LG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG)
            Me.columnLH = New Global.System.Data.DataColumn("LH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLH)
            Me.columnLI = New Global.System.Data.DataColumn("LI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLI)
            Me.columnLJ = New Global.System.Data.DataColumn("LJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLJ)
            Me.columnLK = New Global.System.Data.DataColumn("LK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLK)
            Me.columnLL = New Global.System.Data.DataColumn("LL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLL)
            Me.columnLM = New Global.System.Data.DataColumn("LM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLM)
            Me.columnLO = New Global.System.Data.DataColumn("LO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLO)
            Me.columnLP = New Global.System.Data.DataColumn("LP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLP)
            Me.columnLQ = New Global.System.Data.DataColumn("LQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLQ)
            Me.columnLR = New Global.System.Data.DataColumn("LR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLR)
            Me.columnLT = New Global.System.Data.DataColumn("LT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLT)
            Me.columnMD = New Global.System.Data.DataColumn("MD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMD)
            Me.columnND = New Global.System.Data.DataColumn("ND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnND)
            Me.columnNE = New Global.System.Data.DataColumn("NE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNE)
            Me.columnNF = New Global.System.Data.DataColumn("NF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNF)
            Me.columnNG = New Global.System.Data.DataColumn("NG", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNG)
            Me.columnNI = New Global.System.Data.DataColumn("NI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNI)
            Me.columnNJ = New Global.System.Data.DataColumn("NJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNJ)
            Me.columnNP = New Global.System.Data.DataColumn("NP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNP)
            Me.columnOA = New Global.System.Data.DataColumn("OA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOA)
            Me.columnOH = New Global.System.Data.DataColumn("OH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOH)
            Me.columnOI = New Global.System.Data.DataColumn("OI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOI)
            Me.columnON1 = New Global.System.Data.DataColumn("ON1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnON1)
            Me.columnOO = New Global.System.Data.DataColumn("OO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOO)
            Me.columnOK = New Global.System.Data.DataColumn("OK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOK)
            Me.columnWX = New Global.System.Data.DataColumn("WX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWX)
            Me.columnWY = New Global.System.Data.DataColumn("WY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWY)
            Me.columnLS = New Global.System.Data.DataColumn("LS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLS)
            Me.columnMA = New Global.System.Data.DataColumn("MA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMA)
            Me.columnMB = New Global.System.Data.DataColumn("MB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMB)
            Me.columnMC = New Global.System.Data.DataColumn("MC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMC)
            Me.columnME1 = New Global.System.Data.DataColumn("ME1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnME1)
            Me.columnMF = New Global.System.Data.DataColumn("MF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMF)
            Me.columnMG = New Global.System.Data.DataColumn("MG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMG)
            Me.columnMH = New Global.System.Data.DataColumn("MH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMH)
            Me.columnMI = New Global.System.Data.DataColumn("MI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMI)
            Me.columnMJ = New Global.System.Data.DataColumn("MJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMJ)
            Me.columnMK = New Global.System.Data.DataColumn("MK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMK)
            Me.columnML = New Global.System.Data.DataColumn("ML", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnML)
            Me.columnMM = New Global.System.Data.DataColumn("MM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMM)
            Me.columnMN = New Global.System.Data.DataColumn("MN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMN)
            Me.columnMO = New Global.System.Data.DataColumn("MO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMO)
            Me.columnMP = New Global.System.Data.DataColumn("MP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMP)
            Me.columnMQ = New Global.System.Data.DataColumn("MQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMQ)
            Me.columnMR = New Global.System.Data.DataColumn("MR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMR)
            Me.columnNB = New Global.System.Data.DataColumn("NB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNB)
            Me.columnNH = New Global.System.Data.DataColumn("NH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNH)
            Me.columnNK = New Global.System.Data.DataColumn("NK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNK)
            Me.columnNM = New Global.System.Data.DataColumn("NM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNM)
            Me.columnNO = New Global.System.Data.DataColumn("NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO)
            Me.columnOB = New Global.System.Data.DataColumn("OB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOB)
            Me.columnOC = New Global.System.Data.DataColumn("OC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOC)
            Me.columnOD = New Global.System.Data.DataColumn("OD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOD)
            Me.columnOE = New Global.System.Data.DataColumn("OE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOE)
            Me.columnOF1 = New Global.System.Data.DataColumn("OF1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOF1)
            Me.columnOG = New Global.System.Data.DataColumn("OG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOG)
            Me.columnOL = New Global.System.Data.DataColumn("OL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOL)
            Me.columnNA = New Global.System.Data.DataColumn("NA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNA)
            Me.columnNC = New Global.System.Data.DataColumn("NC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNC)
            Me.columnNL = New Global.System.Data.DataColumn("NL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNL)
            Me.columnLN = New Global.System.Data.DataColumn("LN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLN)
            Me.columnMS = New Global.System.Data.DataColumn("MS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMS)
            Me.columnMT = New Global.System.Data.DataColumn("MT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMT)
            Me.columnOK1 = New Global.System.Data.DataColumn("OK1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOK1)
            Me.columnOK2 = New Global.System.Data.DataColumn("OK2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOK2)
            Me.columnOK3 = New Global.System.Data.DataColumn("OK3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOK3)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnLA.MaxLength = 1
            Me.columnLB.MaxLength = 3
            Me.columnLF.MaxLength = 2
            Me.columnLG.MaxLength = 1
            Me.columnLH.MaxLength = 1
            Me.columnLI.MaxLength = 1
            Me.columnLJ.MaxLength = 2
            Me.columnLK.MaxLength = 2
            Me.columnLL.MaxLength = 1
            Me.columnLM.MaxLength = 1
            Me.columnLO.MaxLength = 1
            Me.columnLP.MaxLength = 3
            Me.columnLQ.MaxLength = 3
            Me.columnLR.MaxLength = 1
            Me.columnMD.MaxLength = 1
            Me.columnND.MaxLength = 1
            Me.columnNE.MaxLength = 1
            Me.columnNF.MaxLength = 1
            Me.columnNI.MaxLength = 8
            Me.columnNJ.MaxLength = 8
            Me.columnNP.MaxLength = 8
            Me.columnOA.MaxLength = 2
            Me.columnOH.MaxLength = 3
            Me.columnOI.MaxLength = 8
            Me.columnON1.MaxLength = 3
            Me.columnOO.MaxLength = 8
            Me.columnOK.MaxLength = 14
            Me.columnWX.MaxLength = 15
            Me.columnWY.MaxLength = 6
            Me.columnLS.MaxLength = 7
            Me.columnMA.MaxLength = 7
            Me.columnMB.MaxLength = 7
            Me.columnMC.MaxLength = 7
            Me.columnME1.MaxLength = 7
            Me.columnMF.MaxLength = 7
            Me.columnMG.MaxLength = 7
            Me.columnMH.MaxLength = 7
            Me.columnMI.MaxLength = 7
            Me.columnMJ.MaxLength = 7
            Me.columnMK.MaxLength = 7
            Me.columnML.MaxLength = 7
            Me.columnMM.MaxLength = 7
            Me.columnMN.MaxLength = 7
            Me.columnMO.MaxLength = 8
            Me.columnMP.MaxLength = 7
            Me.columnMQ.MaxLength = 7
            Me.columnMR.MaxLength = 7
            Me.columnNB.MaxLength = 7
            Me.columnNH.MaxLength = 7
            Me.columnNK.MaxLength = 7
            Me.columnNM.MaxLength = 7
            Me.columnNO.MaxLength = 7
            Me.columnOB.MaxLength = 8
            Me.columnOC.MaxLength = 7
            Me.columnOE.MaxLength = 8
            Me.columnOF1.MaxLength = 7
            Me.columnOL.MaxLength = 7
            Me.columnNA.MaxLength = 8
            Me.columnNL.MaxLength = 1
            Me.columnLN.MaxLength = 1
            Me.columnMS.MaxLength = 7
            Me.columnMT.MaxLength = 7
            Me.columnOK1.MaxLength = 3
            Me.columnOK2.MaxLength = 3
            Me.columnOK3.MaxLength = 4
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFAMISFoodStampInformationRow() As FAMISFoodStampInformationRow
            Return CType(Me.NewRow,FAMISFoodStampInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FAMISFoodStampInformationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FAMISFoodStampInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FAMISFoodStampInformationRowChangedEvent) Is Nothing) Then
                RaiseEvent FAMISFoodStampInformationRowChanged(Me, New FAMISFoodStampInformationRowChangeEvent(CType(e.Row,FAMISFoodStampInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FAMISFoodStampInformationRowChangingEvent) Is Nothing) Then
                RaiseEvent FAMISFoodStampInformationRowChanging(Me, New FAMISFoodStampInformationRowChangeEvent(CType(e.Row,FAMISFoodStampInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FAMISFoodStampInformationRowDeletedEvent) Is Nothing) Then
                RaiseEvent FAMISFoodStampInformationRowDeleted(Me, New FAMISFoodStampInformationRowChangeEvent(CType(e.Row,FAMISFoodStampInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FAMISFoodStampInformationRowDeletingEvent) Is Nothing) Then
                RaiseEvent FAMISFoodStampInformationRowDeleting(Me, New FAMISFoodStampInformationRowChangeEvent(CType(e.Row,FAMISFoodStampInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFAMISFoodStampInformationRow(ByVal row As FAMISFoodStampInformationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PhoenixDataSet = New PhoenixDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FAMISFoodStampInformationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FAMISIandAInformationDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnPA As Global.System.Data.DataColumn
        
        Private columnPB As Global.System.Data.DataColumn
        
        Private columnPC As Global.System.Data.DataColumn
        
        Private columnPD As Global.System.Data.DataColumn
        
        Private columnPF As Global.System.Data.DataColumn
        
        Private columnPG As Global.System.Data.DataColumn
        
        Private columnPI As Global.System.Data.DataColumn
        
        Private columnPJ As Global.System.Data.DataColumn
        
        Private columnPK As Global.System.Data.DataColumn
        
        Private columnPL As Global.System.Data.DataColumn
        
        Private columnPN As Global.System.Data.DataColumn
        
        Private columnPE As Global.System.Data.DataColumn
        
        Private columnPH As Global.System.Data.DataColumn
        
        Private columnPM As Global.System.Data.DataColumn
        
        Private columnPO As Global.System.Data.DataColumn
        
        Private columnPP As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FAMISIandAInformation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FAMISIandAInformationRow
            Get
                Return CType(Me.Rows(index),FAMISIandAInformationRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISIandAInformationRowChanging As FAMISIandAInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISIandAInformationRowChanged As FAMISIandAInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISIandAInformationRowDeleting As FAMISIandAInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISIandAInformationRowDeleted As FAMISIandAInformationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFAMISIandAInformationRow(ByVal row As FAMISIandAInformationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFAMISIandAInformationRow( _
                    ByVal CaseNumber As String,  _
                    ByVal PA As Date,  _
                    ByVal PB As String,  _
                    ByVal PC As String,  _
                    ByVal PD As String,  _
                    ByVal PF As String,  _
                    ByVal PG As String,  _
                    ByVal PI As Date,  _
                    ByVal PJ As String,  _
                    ByVal PK As String,  _
                    ByVal PL As String,  _
                    ByVal PN As String,  _
                    ByVal PE As String,  _
                    ByVal PH As Date,  _
                    ByVal PM As String,  _
                    ByVal PO As String,  _
                    ByVal PP As String) As FAMISIandAInformationRow
            Dim rowFAMISIandAInformationRow As FAMISIandAInformationRow = CType(Me.NewRow,FAMISIandAInformationRow)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, PA, PB, PC, PD, PF, PG, PI, PJ, PK, PL, PN, PE, PH, PM, PO, PP}
            rowFAMISIandAInformationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFAMISIandAInformationRow)
            Return rowFAMISIandAInformationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FAMISIandAInformationDataTable = CType(MyBase.Clone,FAMISIandAInformationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FAMISIandAInformationDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnPA = MyBase.Columns("PA")
            Me.columnPB = MyBase.Columns("PB")
            Me.columnPC = MyBase.Columns("PC")
            Me.columnPD = MyBase.Columns("PD")
            Me.columnPF = MyBase.Columns("PF")
            Me.columnPG = MyBase.Columns("PG")
            Me.columnPI = MyBase.Columns("PI")
            Me.columnPJ = MyBase.Columns("PJ")
            Me.columnPK = MyBase.Columns("PK")
            Me.columnPL = MyBase.Columns("PL")
            Me.columnPN = MyBase.Columns("PN")
            Me.columnPE = MyBase.Columns("PE")
            Me.columnPH = MyBase.Columns("PH")
            Me.columnPM = MyBase.Columns("PM")
            Me.columnPO = MyBase.Columns("PO")
            Me.columnPP = MyBase.Columns("PP")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnPA = New Global.System.Data.DataColumn("PA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPA)
            Me.columnPB = New Global.System.Data.DataColumn("PB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPB)
            Me.columnPC = New Global.System.Data.DataColumn("PC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPC)
            Me.columnPD = New Global.System.Data.DataColumn("PD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPD)
            Me.columnPF = New Global.System.Data.DataColumn("PF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPF)
            Me.columnPG = New Global.System.Data.DataColumn("PG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPG)
            Me.columnPI = New Global.System.Data.DataColumn("PI", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPI)
            Me.columnPJ = New Global.System.Data.DataColumn("PJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPJ)
            Me.columnPK = New Global.System.Data.DataColumn("PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPK)
            Me.columnPL = New Global.System.Data.DataColumn("PL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL)
            Me.columnPN = New Global.System.Data.DataColumn("PN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPN)
            Me.columnPE = New Global.System.Data.DataColumn("PE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPE)
            Me.columnPH = New Global.System.Data.DataColumn("PH", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPH)
            Me.columnPM = New Global.System.Data.DataColumn("PM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPM)
            Me.columnPO = New Global.System.Data.DataColumn("PO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPO)
            Me.columnPP = New Global.System.Data.DataColumn("PP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPP)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnPB.MaxLength = 2
            Me.columnPC.MaxLength = 1
            Me.columnPD.MaxLength = 6
            Me.columnPF.MaxLength = 1
            Me.columnPG.MaxLength = 3
            Me.columnPJ.MaxLength = 2
            Me.columnPK.MaxLength = 1
            Me.columnPL.MaxLength = 6
            Me.columnPN.MaxLength = 1
            Me.columnPE.MaxLength = 7
            Me.columnPM.MaxLength = 7
            Me.columnPO.MaxLength = 7
            Me.columnPP.MaxLength = 7
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFAMISIandAInformationRow() As FAMISIandAInformationRow
            Return CType(Me.NewRow,FAMISIandAInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FAMISIandAInformationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FAMISIandAInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FAMISIandAInformationRowChangedEvent) Is Nothing) Then
                RaiseEvent FAMISIandAInformationRowChanged(Me, New FAMISIandAInformationRowChangeEvent(CType(e.Row,FAMISIandAInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FAMISIandAInformationRowChangingEvent) Is Nothing) Then
                RaiseEvent FAMISIandAInformationRowChanging(Me, New FAMISIandAInformationRowChangeEvent(CType(e.Row,FAMISIandAInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FAMISIandAInformationRowDeletedEvent) Is Nothing) Then
                RaiseEvent FAMISIandAInformationRowDeleted(Me, New FAMISIandAInformationRowChangeEvent(CType(e.Row,FAMISIandAInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FAMISIandAInformationRowDeletingEvent) Is Nothing) Then
                RaiseEvent FAMISIandAInformationRowDeleting(Me, New FAMISIandAInformationRowChangeEvent(CType(e.Row,FAMISIandAInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFAMISIandAInformationRow(ByVal row As FAMISIandAInformationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PhoenixDataSet = New PhoenixDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FAMISIandAInformationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FAMISIncomeInformationDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnJP As Global.System.Data.DataColumn
        
        Private columnJQ As Global.System.Data.DataColumn
        
        Private columnJS As Global.System.Data.DataColumn
        
        Private columnJT As Global.System.Data.DataColumn
        
        Private columnJW As Global.System.Data.DataColumn
        
        Private columnJX As Global.System.Data.DataColumn
        
        Private columnKU As Global.System.Data.DataColumn
        
        Private columnKV As Global.System.Data.DataColumn
        
        Private columnJA As Global.System.Data.DataColumn
        
        Private columnJB As Global.System.Data.DataColumn
        
        Private columnJC As Global.System.Data.DataColumn
        
        Private columnJD As Global.System.Data.DataColumn
        
        Private columnJE As Global.System.Data.DataColumn
        
        Private columnJF As Global.System.Data.DataColumn
        
        Private columnJG As Global.System.Data.DataColumn
        
        Private columnJH As Global.System.Data.DataColumn
        
        Private columnJI As Global.System.Data.DataColumn
        
        Private columnJK As Global.System.Data.DataColumn
        
        Private columnJL As Global.System.Data.DataColumn
        
        Private columnJM As Global.System.Data.DataColumn
        
        Private columnJN As Global.System.Data.DataColumn
        
        Private columnJO As Global.System.Data.DataColumn
        
        Private columnJR As Global.System.Data.DataColumn
        
        Private columnJU As Global.System.Data.DataColumn
        
        Private columnKA As Global.System.Data.DataColumn
        
        Private columnKB As Global.System.Data.DataColumn
        
        Private columnKC As Global.System.Data.DataColumn
        
        Private columnKD As Global.System.Data.DataColumn
        
        Private columnKE As Global.System.Data.DataColumn
        
        Private columnKF As Global.System.Data.DataColumn
        
        Private columnKG As Global.System.Data.DataColumn
        
        Private columnKH As Global.System.Data.DataColumn
        
        Private columnKI As Global.System.Data.DataColumn
        
        Private columnKJ As Global.System.Data.DataColumn
        
        Private columnKK As Global.System.Data.DataColumn
        
        Private columnKL As Global.System.Data.DataColumn
        
        Private columnKM As Global.System.Data.DataColumn
        
        Private columnKN As Global.System.Data.DataColumn
        
        Private columnKO As Global.System.Data.DataColumn
        
        Private columnKP As Global.System.Data.DataColumn
        
        Private columnKQ As Global.System.Data.DataColumn
        
        Private columnKR As Global.System.Data.DataColumn
        
        Private columnKS As Global.System.Data.DataColumn
        
        Private columnJJ As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FAMISIncomeInformation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FAMISIncomeInformationRow
            Get
                Return CType(Me.Rows(index),FAMISIncomeInformationRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISIncomeInformationRowChanging As FAMISIncomeInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISIncomeInformationRowChanged As FAMISIncomeInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISIncomeInformationRowDeleting As FAMISIncomeInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISIncomeInformationRowDeleted As FAMISIncomeInformationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFAMISIncomeInformationRow(ByVal row As FAMISIncomeInformationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFAMISIncomeInformationRow( _
                    ByVal CaseNumber As String,  _
                    ByVal JP As String,  _
                    ByVal JQ As String,  _
                    ByVal JS As String,  _
                    ByVal JT As String,  _
                    ByVal JW As String,  _
                    ByVal JX As String,  _
                    ByVal KU As String,  _
                    ByVal KV As String,  _
                    ByVal JA As String,  _
                    ByVal JB As String,  _
                    ByVal JC As String,  _
                    ByVal JD As String,  _
                    ByVal JE As String,  _
                    ByVal JF As String,  _
                    ByVal JG As String,  _
                    ByVal JH As String,  _
                    ByVal JI As String,  _
                    ByVal JK As String,  _
                    ByVal JL As String,  _
                    ByVal JM As String,  _
                    ByVal JN As String,  _
                    ByVal JO As String,  _
                    ByVal JR As String,  _
                    ByVal JU As String,  _
                    ByVal KA As String,  _
                    ByVal KB As String,  _
                    ByVal KC As String,  _
                    ByVal KD As String,  _
                    ByVal KE As String,  _
                    ByVal KF As String,  _
                    ByVal KG As String,  _
                    ByVal KH As String,  _
                    ByVal KI As String,  _
                    ByVal KJ As String,  _
                    ByVal KK As String,  _
                    ByVal KL As String,  _
                    ByVal KM As String,  _
                    ByVal KN As String,  _
                    ByVal KO As String,  _
                    ByVal KP As String,  _
                    ByVal KQ As String,  _
                    ByVal KR As String,  _
                    ByVal KS As String,  _
                    ByVal JJ As String) As FAMISIncomeInformationRow
            Dim rowFAMISIncomeInformationRow As FAMISIncomeInformationRow = CType(Me.NewRow,FAMISIncomeInformationRow)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, JP, JQ, JS, JT, JW, JX, KU, KV, JA, JB, JC, JD, JE, JF, JG, JH, JI, JK, JL, JM, JN, JO, JR, JU, KA, KB, KC, KD, KE, KF, KG, KH, KI, KJ, KK, KL, KM, KN, KO, KP, KQ, KR, KS, JJ}
            rowFAMISIncomeInformationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFAMISIncomeInformationRow)
            Return rowFAMISIncomeInformationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FAMISIncomeInformationDataTable = CType(MyBase.Clone,FAMISIncomeInformationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FAMISIncomeInformationDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnJP = MyBase.Columns("JP")
            Me.columnJQ = MyBase.Columns("JQ")
            Me.columnJS = MyBase.Columns("JS")
            Me.columnJT = MyBase.Columns("JT")
            Me.columnJW = MyBase.Columns("JW")
            Me.columnJX = MyBase.Columns("JX")
            Me.columnKU = MyBase.Columns("KU")
            Me.columnKV = MyBase.Columns("KV")
            Me.columnJA = MyBase.Columns("JA")
            Me.columnJB = MyBase.Columns("JB")
            Me.columnJC = MyBase.Columns("JC")
            Me.columnJD = MyBase.Columns("JD")
            Me.columnJE = MyBase.Columns("JE")
            Me.columnJF = MyBase.Columns("JF")
            Me.columnJG = MyBase.Columns("JG")
            Me.columnJH = MyBase.Columns("JH")
            Me.columnJI = MyBase.Columns("JI")
            Me.columnJK = MyBase.Columns("JK")
            Me.columnJL = MyBase.Columns("JL")
            Me.columnJM = MyBase.Columns("JM")
            Me.columnJN = MyBase.Columns("JN")
            Me.columnJO = MyBase.Columns("JO")
            Me.columnJR = MyBase.Columns("JR")
            Me.columnJU = MyBase.Columns("JU")
            Me.columnKA = MyBase.Columns("KA")
            Me.columnKB = MyBase.Columns("KB")
            Me.columnKC = MyBase.Columns("KC")
            Me.columnKD = MyBase.Columns("KD")
            Me.columnKE = MyBase.Columns("KE")
            Me.columnKF = MyBase.Columns("KF")
            Me.columnKG = MyBase.Columns("KG")
            Me.columnKH = MyBase.Columns("KH")
            Me.columnKI = MyBase.Columns("KI")
            Me.columnKJ = MyBase.Columns("KJ")
            Me.columnKK = MyBase.Columns("KK")
            Me.columnKL = MyBase.Columns("KL")
            Me.columnKM = MyBase.Columns("KM")
            Me.columnKN = MyBase.Columns("KN")
            Me.columnKO = MyBase.Columns("KO")
            Me.columnKP = MyBase.Columns("KP")
            Me.columnKQ = MyBase.Columns("KQ")
            Me.columnKR = MyBase.Columns("KR")
            Me.columnKS = MyBase.Columns("KS")
            Me.columnJJ = MyBase.Columns("JJ")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnJP = New Global.System.Data.DataColumn("JP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJP)
            Me.columnJQ = New Global.System.Data.DataColumn("JQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJQ)
            Me.columnJS = New Global.System.Data.DataColumn("JS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJS)
            Me.columnJT = New Global.System.Data.DataColumn("JT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJT)
            Me.columnJW = New Global.System.Data.DataColumn("JW", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJW)
            Me.columnJX = New Global.System.Data.DataColumn("JX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJX)
            Me.columnKU = New Global.System.Data.DataColumn("KU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKU)
            Me.columnKV = New Global.System.Data.DataColumn("KV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKV)
            Me.columnJA = New Global.System.Data.DataColumn("JA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJA)
            Me.columnJB = New Global.System.Data.DataColumn("JB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJB)
            Me.columnJC = New Global.System.Data.DataColumn("JC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJC)
            Me.columnJD = New Global.System.Data.DataColumn("JD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJD)
            Me.columnJE = New Global.System.Data.DataColumn("JE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJE)
            Me.columnJF = New Global.System.Data.DataColumn("JF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJF)
            Me.columnJG = New Global.System.Data.DataColumn("JG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJG)
            Me.columnJH = New Global.System.Data.DataColumn("JH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJH)
            Me.columnJI = New Global.System.Data.DataColumn("JI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJI)
            Me.columnJK = New Global.System.Data.DataColumn("JK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJK)
            Me.columnJL = New Global.System.Data.DataColumn("JL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJL)
            Me.columnJM = New Global.System.Data.DataColumn("JM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJM)
            Me.columnJN = New Global.System.Data.DataColumn("JN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJN)
            Me.columnJO = New Global.System.Data.DataColumn("JO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJO)
            Me.columnJR = New Global.System.Data.DataColumn("JR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJR)
            Me.columnJU = New Global.System.Data.DataColumn("JU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJU)
            Me.columnKA = New Global.System.Data.DataColumn("KA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKA)
            Me.columnKB = New Global.System.Data.DataColumn("KB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKB)
            Me.columnKC = New Global.System.Data.DataColumn("KC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKC)
            Me.columnKD = New Global.System.Data.DataColumn("KD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKD)
            Me.columnKE = New Global.System.Data.DataColumn("KE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKE)
            Me.columnKF = New Global.System.Data.DataColumn("KF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKF)
            Me.columnKG = New Global.System.Data.DataColumn("KG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKG)
            Me.columnKH = New Global.System.Data.DataColumn("KH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKH)
            Me.columnKI = New Global.System.Data.DataColumn("KI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKI)
            Me.columnKJ = New Global.System.Data.DataColumn("KJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKJ)
            Me.columnKK = New Global.System.Data.DataColumn("KK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKK)
            Me.columnKL = New Global.System.Data.DataColumn("KL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKL)
            Me.columnKM = New Global.System.Data.DataColumn("KM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKM)
            Me.columnKN = New Global.System.Data.DataColumn("KN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKN)
            Me.columnKO = New Global.System.Data.DataColumn("KO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKO)
            Me.columnKP = New Global.System.Data.DataColumn("KP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKP)
            Me.columnKQ = New Global.System.Data.DataColumn("KQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKQ)
            Me.columnKR = New Global.System.Data.DataColumn("KR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKR)
            Me.columnKS = New Global.System.Data.DataColumn("KS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKS)
            Me.columnJJ = New Global.System.Data.DataColumn("JJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJJ)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnJP.MaxLength = 1
            Me.columnJQ.MaxLength = 1
            Me.columnJS.MaxLength = 2
            Me.columnJT.MaxLength = 2
            Me.columnJW.MaxLength = 7
            Me.columnJX.MaxLength = 7
            Me.columnKU.MaxLength = 7
            Me.columnKV.MaxLength = 7
            Me.columnJA.MaxLength = 7
            Me.columnJB.MaxLength = 7
            Me.columnJC.MaxLength = 7
            Me.columnJD.MaxLength = 7
            Me.columnJE.MaxLength = 7
            Me.columnJF.MaxLength = 7
            Me.columnJG.MaxLength = 7
            Me.columnJH.MaxLength = 7
            Me.columnJI.MaxLength = 1
            Me.columnJK.MaxLength = 7
            Me.columnJL.MaxLength = 7
            Me.columnJM.MaxLength = 7
            Me.columnJN.MaxLength = 8
            Me.columnJO.MaxLength = 8
            Me.columnJR.MaxLength = 7
            Me.columnJU.MaxLength = 7
            Me.columnKA.MaxLength = 7
            Me.columnKB.MaxLength = 7
            Me.columnKC.MaxLength = 7
            Me.columnKD.MaxLength = 7
            Me.columnKE.MaxLength = 7
            Me.columnKF.MaxLength = 7
            Me.columnKG.MaxLength = 7
            Me.columnKH.MaxLength = 7
            Me.columnKI.MaxLength = 1
            Me.columnKJ.MaxLength = 7
            Me.columnKK.MaxLength = 7
            Me.columnKL.MaxLength = 7
            Me.columnKM.MaxLength = 8
            Me.columnKN.MaxLength = 8
            Me.columnKO.MaxLength = 8
            Me.columnKP.MaxLength = 7
            Me.columnKQ.MaxLength = 7
            Me.columnKR.MaxLength = 7
            Me.columnKS.MaxLength = 7
            Me.columnJJ.MaxLength = 7
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFAMISIncomeInformationRow() As FAMISIncomeInformationRow
            Return CType(Me.NewRow,FAMISIncomeInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FAMISIncomeInformationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FAMISIncomeInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FAMISIncomeInformationRowChangedEvent) Is Nothing) Then
                RaiseEvent FAMISIncomeInformationRowChanged(Me, New FAMISIncomeInformationRowChangeEvent(CType(e.Row,FAMISIncomeInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FAMISIncomeInformationRowChangingEvent) Is Nothing) Then
                RaiseEvent FAMISIncomeInformationRowChanging(Me, New FAMISIncomeInformationRowChangeEvent(CType(e.Row,FAMISIncomeInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FAMISIncomeInformationRowDeletedEvent) Is Nothing) Then
                RaiseEvent FAMISIncomeInformationRowDeleted(Me, New FAMISIncomeInformationRowChangeEvent(CType(e.Row,FAMISIncomeInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FAMISIncomeInformationRowDeletingEvent) Is Nothing) Then
                RaiseEvent FAMISIncomeInformationRowDeleting(Me, New FAMISIncomeInformationRowChangeEvent(CType(e.Row,FAMISIncomeInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFAMISIncomeInformationRow(ByVal row As FAMISIncomeInformationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PhoenixDataSet = New PhoenixDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FAMISIncomeInformationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FAMISIndividualsInformationDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnBS As Global.System.Data.DataColumn
        
        Private columnBT As Global.System.Data.DataColumn
        
        Private columnBX As Global.System.Data.DataColumn
        
        Private columnFA As Global.System.Data.DataColumn
        
        Private columnFB As Global.System.Data.DataColumn
        
        Private columnBU As Global.System.Data.DataColumn
        
        Private columnFC As Global.System.Data.DataColumn
        
        Private columnBV As Global.System.Data.DataColumn
        
        Private columnFD As Global.System.Data.DataColumn
        
        Private columnFD2 As Global.System.Data.DataColumn
        
        Private columnBW As Global.System.Data.DataColumn
        
        Private columnFE2 As Global.System.Data.DataColumn
        
        Private columnFE1 As Global.System.Data.DataColumn
        
        Private columnBY1 As Global.System.Data.DataColumn
        
        Private columnFF As Global.System.Data.DataColumn
        
        Private columnBZ As Global.System.Data.DataColumn
        
        Private columnFG As Global.System.Data.DataColumn
        
        Private columnFI As Global.System.Data.DataColumn
        
        Private columnFJ As Global.System.Data.DataColumn
        
        Private columnFK As Global.System.Data.DataColumn
        
        Private columnFL As Global.System.Data.DataColumn
        
        Private columnFL2 As Global.System.Data.DataColumn
        
        Private columnFM1 As Global.System.Data.DataColumn
        
        Private columnFM2 As Global.System.Data.DataColumn
        
        Private columnFN As Global.System.Data.DataColumn
        
        Private columnFP As Global.System.Data.DataColumn
        
        Private columnGA As Global.System.Data.DataColumn
        
        Private columnGB As Global.System.Data.DataColumn
        
        Private columnGC As Global.System.Data.DataColumn
        
        Private columnGD As Global.System.Data.DataColumn
        
        Private columnGE As Global.System.Data.DataColumn
        
        Private columnGF As Global.System.Data.DataColumn
        
        Private columnGG As Global.System.Data.DataColumn
        
        Private columnGH As Global.System.Data.DataColumn
        
        Private columnGI As Global.System.Data.DataColumn
        
        Private columnGJ As Global.System.Data.DataColumn
        
        Private columnGK As Global.System.Data.DataColumn
        
        Private columnGL As Global.System.Data.DataColumn
        
        Private columnFH As Global.System.Data.DataColumn
        
        Private columnFO As Global.System.Data.DataColumn
        
        Private columnZA As Global.System.Data.DataColumn
        
        Private columnZF As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FAMISIndividualsInformation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BY1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBY1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FL2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFL2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FM1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFM1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FM2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFM2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FAMISIndividualsInformationRow
            Get
                Return CType(Me.Rows(index),FAMISIndividualsInformationRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISIndividualsInformationRowChanging As FAMISIndividualsInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISIndividualsInformationRowChanged As FAMISIndividualsInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISIndividualsInformationRowDeleting As FAMISIndividualsInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISIndividualsInformationRowDeleted As FAMISIndividualsInformationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFAMISIndividualsInformationRow(ByVal row As FAMISIndividualsInformationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFAMISIndividualsInformationRow( _
                    ByVal CaseNumber As String,  _
                    ByVal BS As String,  _
                    ByVal BT As String,  _
                    ByVal BX As String,  _
                    ByVal FA As String,  _
                    ByVal FB As Date,  _
                    ByVal BU As String,  _
                    ByVal FC As String,  _
                    ByVal BV As String,  _
                    ByVal FD As String,  _
                    ByVal FD2 As String,  _
                    ByVal BW As String,  _
                    ByVal FE2 As String,  _
                    ByVal FE1 As String,  _
                    ByVal BY1 As String,  _
                    ByVal FF As String,  _
                    ByVal BZ As String,  _
                    ByVal FG As String,  _
                    ByVal FI As String,  _
                    ByVal FJ As Date,  _
                    ByVal FK As String,  _
                    ByVal FL As String,  _
                    ByVal FL2 As String,  _
                    ByVal FM1 As String,  _
                    ByVal FM2 As String,  _
                    ByVal FN As String,  _
                    ByVal FP As String,  _
                    ByVal GA As String,  _
                    ByVal GB As Date,  _
                    ByVal GC As String,  _
                    ByVal GD As String,  _
                    ByVal GE As String,  _
                    ByVal GF As Date,  _
                    ByVal GG As String,  _
                    ByVal GH As Date,  _
                    ByVal GI As String,  _
                    ByVal GJ As String,  _
                    ByVal GK As String,  _
                    ByVal GL As Date,  _
                    ByVal FH As String,  _
                    ByVal FO As String,  _
                    ByVal ZA As String,  _
                    ByVal ZF As String) As FAMISIndividualsInformationRow
            Dim rowFAMISIndividualsInformationRow As FAMISIndividualsInformationRow = CType(Me.NewRow,FAMISIndividualsInformationRow)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, BS, BT, BX, FA, FB, BU, FC, BV, FD, FD2, BW, FE2, FE1, BY1, FF, BZ, FG, FI, FJ, FK, FL, FL2, FM1, FM2, FN, FP, GA, GB, GC, GD, GE, GF, GG, GH, GI, GJ, GK, GL, FH, FO, ZA, ZF}
            rowFAMISIndividualsInformationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFAMISIndividualsInformationRow)
            Return rowFAMISIndividualsInformationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FAMISIndividualsInformationDataTable = CType(MyBase.Clone,FAMISIndividualsInformationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FAMISIndividualsInformationDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnBS = MyBase.Columns("BS")
            Me.columnBT = MyBase.Columns("BT")
            Me.columnBX = MyBase.Columns("BX")
            Me.columnFA = MyBase.Columns("FA")
            Me.columnFB = MyBase.Columns("FB")
            Me.columnBU = MyBase.Columns("BU")
            Me.columnFC = MyBase.Columns("FC")
            Me.columnBV = MyBase.Columns("BV")
            Me.columnFD = MyBase.Columns("FD")
            Me.columnFD2 = MyBase.Columns("FD2")
            Me.columnBW = MyBase.Columns("BW")
            Me.columnFE2 = MyBase.Columns("FE2")
            Me.columnFE1 = MyBase.Columns("FE1")
            Me.columnBY1 = MyBase.Columns("BY1")
            Me.columnFF = MyBase.Columns("FF")
            Me.columnBZ = MyBase.Columns("BZ")
            Me.columnFG = MyBase.Columns("FG")
            Me.columnFI = MyBase.Columns("FI")
            Me.columnFJ = MyBase.Columns("FJ")
            Me.columnFK = MyBase.Columns("FK")
            Me.columnFL = MyBase.Columns("FL")
            Me.columnFL2 = MyBase.Columns("FL2")
            Me.columnFM1 = MyBase.Columns("FM1")
            Me.columnFM2 = MyBase.Columns("FM2")
            Me.columnFN = MyBase.Columns("FN")
            Me.columnFP = MyBase.Columns("FP")
            Me.columnGA = MyBase.Columns("GA")
            Me.columnGB = MyBase.Columns("GB")
            Me.columnGC = MyBase.Columns("GC")
            Me.columnGD = MyBase.Columns("GD")
            Me.columnGE = MyBase.Columns("GE")
            Me.columnGF = MyBase.Columns("GF")
            Me.columnGG = MyBase.Columns("GG")
            Me.columnGH = MyBase.Columns("GH")
            Me.columnGI = MyBase.Columns("GI")
            Me.columnGJ = MyBase.Columns("GJ")
            Me.columnGK = MyBase.Columns("GK")
            Me.columnGL = MyBase.Columns("GL")
            Me.columnFH = MyBase.Columns("FH")
            Me.columnFO = MyBase.Columns("FO")
            Me.columnZA = MyBase.Columns("ZA")
            Me.columnZF = MyBase.Columns("ZF")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnBS = New Global.System.Data.DataColumn("BS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBS)
            Me.columnBT = New Global.System.Data.DataColumn("BT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBT)
            Me.columnBX = New Global.System.Data.DataColumn("BX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBX)
            Me.columnFA = New Global.System.Data.DataColumn("FA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA)
            Me.columnFB = New Global.System.Data.DataColumn("FB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFB)
            Me.columnBU = New Global.System.Data.DataColumn("BU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBU)
            Me.columnFC = New Global.System.Data.DataColumn("FC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFC)
            Me.columnBV = New Global.System.Data.DataColumn("BV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBV)
            Me.columnFD = New Global.System.Data.DataColumn("FD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFD)
            Me.columnFD2 = New Global.System.Data.DataColumn("FD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFD2)
            Me.columnBW = New Global.System.Data.DataColumn("BW", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBW)
            Me.columnFE2 = New Global.System.Data.DataColumn("FE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE2)
            Me.columnFE1 = New Global.System.Data.DataColumn("FE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE1)
            Me.columnBY1 = New Global.System.Data.DataColumn("BY1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBY1)
            Me.columnFF = New Global.System.Data.DataColumn("FF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFF)
            Me.columnBZ = New Global.System.Data.DataColumn("BZ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBZ)
            Me.columnFG = New Global.System.Data.DataColumn("FG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFG)
            Me.columnFI = New Global.System.Data.DataColumn("FI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFI)
            Me.columnFJ = New Global.System.Data.DataColumn("FJ", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFJ)
            Me.columnFK = New Global.System.Data.DataColumn("FK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFK)
            Me.columnFL = New Global.System.Data.DataColumn("FL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFL)
            Me.columnFL2 = New Global.System.Data.DataColumn("FL2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFL2)
            Me.columnFM1 = New Global.System.Data.DataColumn("FM1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFM1)
            Me.columnFM2 = New Global.System.Data.DataColumn("FM2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFM2)
            Me.columnFN = New Global.System.Data.DataColumn("FN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFN)
            Me.columnFP = New Global.System.Data.DataColumn("FP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFP)
            Me.columnGA = New Global.System.Data.DataColumn("GA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGA)
            Me.columnGB = New Global.System.Data.DataColumn("GB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGB)
            Me.columnGC = New Global.System.Data.DataColumn("GC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGC)
            Me.columnGD = New Global.System.Data.DataColumn("GD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGD)
            Me.columnGE = New Global.System.Data.DataColumn("GE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGE)
            Me.columnGF = New Global.System.Data.DataColumn("GF", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGF)
            Me.columnGG = New Global.System.Data.DataColumn("GG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGG)
            Me.columnGH = New Global.System.Data.DataColumn("GH", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGH)
            Me.columnGI = New Global.System.Data.DataColumn("GI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGI)
            Me.columnGJ = New Global.System.Data.DataColumn("GJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGJ)
            Me.columnGK = New Global.System.Data.DataColumn("GK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGK)
            Me.columnGL = New Global.System.Data.DataColumn("GL", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGL)
            Me.columnFH = New Global.System.Data.DataColumn("FH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFH)
            Me.columnFO = New Global.System.Data.DataColumn("FO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFO)
            Me.columnZA = New Global.System.Data.DataColumn("ZA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZA)
            Me.columnZF = New Global.System.Data.DataColumn("ZF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZF)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnBS.MaxLength = 10
            Me.columnBT.MaxLength = 2
            Me.columnBX.MaxLength = 2
            Me.columnFA.MaxLength = 1
            Me.columnBU.MaxLength = 1
            Me.columnFC.MaxLength = 9
            Me.columnBV.MaxLength = 1
            Me.columnFD.MaxLength = 2
            Me.columnFD2.MaxLength = 1
            Me.columnBW.MaxLength = 10
            Me.columnFE2.MaxLength = 2
            Me.columnFE1.MaxLength = 1
            Me.columnBY1.MaxLength = 1
            Me.columnFF.MaxLength = 1
            Me.columnBZ.MaxLength = 1
            Me.columnFG.MaxLength = 3
            Me.columnFI.MaxLength = 1
            Me.columnFK.MaxLength = 9
            Me.columnFL.MaxLength = 2
            Me.columnFL2.MaxLength = 1
            Me.columnFM1.MaxLength = 1
            Me.columnFM2.MaxLength = 2
            Me.columnFN.MaxLength = 1
            Me.columnFP.MaxLength = 3
            Me.columnGA.MaxLength = 12
            Me.columnGC.MaxLength = 1
            Me.columnGD.MaxLength = 2
            Me.columnGE.MaxLength = 1
            Me.columnGG.MaxLength = 12
            Me.columnGI.MaxLength = 1
            Me.columnGJ.MaxLength = 2
            Me.columnGK.MaxLength = 1
            Me.columnFH.MaxLength = 3
            Me.columnFO.MaxLength = 3
            Me.columnZA.MaxLength = 1
            Me.columnZF.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFAMISIndividualsInformationRow() As FAMISIndividualsInformationRow
            Return CType(Me.NewRow,FAMISIndividualsInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FAMISIndividualsInformationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FAMISIndividualsInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FAMISIndividualsInformationRowChangedEvent) Is Nothing) Then
                RaiseEvent FAMISIndividualsInformationRowChanged(Me, New FAMISIndividualsInformationRowChangeEvent(CType(e.Row,FAMISIndividualsInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FAMISIndividualsInformationRowChangingEvent) Is Nothing) Then
                RaiseEvent FAMISIndividualsInformationRowChanging(Me, New FAMISIndividualsInformationRowChangeEvent(CType(e.Row,FAMISIndividualsInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FAMISIndividualsInformationRowDeletedEvent) Is Nothing) Then
                RaiseEvent FAMISIndividualsInformationRowDeleted(Me, New FAMISIndividualsInformationRowChangeEvent(CType(e.Row,FAMISIndividualsInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FAMISIndividualsInformationRowDeletingEvent) Is Nothing) Then
                RaiseEvent FAMISIndividualsInformationRowDeleting(Me, New FAMISIndividualsInformationRowChangeEvent(CType(e.Row,FAMISIndividualsInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFAMISIndividualsInformationRow(ByVal row As FAMISIndividualsInformationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PhoenixDataSet = New PhoenixDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FAMISIndividualsInformationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FAMISMedicaidInformationDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnHD As Global.System.Data.DataColumn
        
        Private columnHE As Global.System.Data.DataColumn
        
        Private columnHF As Global.System.Data.DataColumn
        
        Private columnHG As Global.System.Data.DataColumn
        
        Private columnHH As Global.System.Data.DataColumn
        
        Private columnHI As Global.System.Data.DataColumn
        
        Private columnHJ As Global.System.Data.DataColumn
        
        Private columnHK As Global.System.Data.DataColumn
        
        Private columnHL As Global.System.Data.DataColumn
        
        Private columnHM As Global.System.Data.DataColumn
        
        Private columnHN As Global.System.Data.DataColumn
        
        Private columnHO As Global.System.Data.DataColumn
        
        Private columnHP As Global.System.Data.DataColumn
        
        Private columnHQ As Global.System.Data.DataColumn
        
        Private columnHR As Global.System.Data.DataColumn
        
        Private columnHS As Global.System.Data.DataColumn
        
        Private columnHT As Global.System.Data.DataColumn
        
        Private columnHB As Global.System.Data.DataColumn
        
        Private columnHC As Global.System.Data.DataColumn
        
        Private columnWL As Global.System.Data.DataColumn
        
        Private columnWA As Global.System.Data.DataColumn
        
        Private columnWB As Global.System.Data.DataColumn
        
        Private columnWE As Global.System.Data.DataColumn
        
        Private columnWH As Global.System.Data.DataColumn
        
        Private columnWI As Global.System.Data.DataColumn
        
        Private columnWK As Global.System.Data.DataColumn
        
        Private columnWM As Global.System.Data.DataColumn
        
        Private columnWN As Global.System.Data.DataColumn
        
        Private columnWO As Global.System.Data.DataColumn
        
        Private columnWP As Global.System.Data.DataColumn
        
        Private columnWQ As Global.System.Data.DataColumn
        
        Private columnWR As Global.System.Data.DataColumn
        
        Private columnWS As Global.System.Data.DataColumn
        
        Private columnWT As Global.System.Data.DataColumn
        
        Private columnWU As Global.System.Data.DataColumn
        
        Private columnWV As Global.System.Data.DataColumn
        
        Private columnWC As Global.System.Data.DataColumn
        
        Private columnWD As Global.System.Data.DataColumn
        
        Private columnWF As Global.System.Data.DataColumn
        
        Private columnWG As Global.System.Data.DataColumn
        
        Private columnXQ As Global.System.Data.DataColumn
        
        Private columnXO As Global.System.Data.DataColumn
        
        Private columnXR As Global.System.Data.DataColumn
        
        Private columnXS As Global.System.Data.DataColumn
        
        Private columnXT As Global.System.Data.DataColumn
        
        Private columnXV As Global.System.Data.DataColumn
        
        Private columnXU As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FAMISMedicaidInformation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FAMISMedicaidInformationRow
            Get
                Return CType(Me.Rows(index),FAMISMedicaidInformationRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISMedicaidInformationRowChanging As FAMISMedicaidInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISMedicaidInformationRowChanged As FAMISMedicaidInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISMedicaidInformationRowDeleting As FAMISMedicaidInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISMedicaidInformationRowDeleted As FAMISMedicaidInformationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFAMISMedicaidInformationRow(ByVal row As FAMISMedicaidInformationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFAMISMedicaidInformationRow( _
                    ByVal CaseNumber As String,  _
                    ByVal HD As String,  _
                    ByVal HE As String,  _
                    ByVal HF As String,  _
                    ByVal HG As String,  _
                    ByVal HH As String,  _
                    ByVal HI As String,  _
                    ByVal HJ As String,  _
                    ByVal HK As String,  _
                    ByVal HL As String,  _
                    ByVal HM As String,  _
                    ByVal HN As String,  _
                    ByVal HO As String,  _
                    ByVal HP As String,  _
                    ByVal HQ As String,  _
                    ByVal HR As String,  _
                    ByVal HS As String,  _
                    ByVal HT As String,  _
                    ByVal HB As String,  _
                    ByVal HC As String,  _
                    ByVal WL As String,  _
                    ByVal WA As String,  _
                    ByVal WB As String,  _
                    ByVal WE As String,  _
                    ByVal WH As String,  _
                    ByVal WI As String,  _
                    ByVal WK As String,  _
                    ByVal WM As String,  _
                    ByVal WN As String,  _
                    ByVal WO As String,  _
                    ByVal WP As String,  _
                    ByVal WQ As String,  _
                    ByVal WR As String,  _
                    ByVal WS As String,  _
                    ByVal WT As String,  _
                    ByVal WU As String,  _
                    ByVal WV As String,  _
                    ByVal WC As Date,  _
                    ByVal WD As Date,  _
                    ByVal WF As Date,  _
                    ByVal WG As Date,  _
                    ByVal XQ As String,  _
                    ByVal XO As String,  _
                    ByVal XR As String,  _
                    ByVal XS As String,  _
                    ByVal XT As String,  _
                    ByVal XV As String,  _
                    ByVal XU As String) As FAMISMedicaidInformationRow
            Dim rowFAMISMedicaidInformationRow As FAMISMedicaidInformationRow = CType(Me.NewRow,FAMISMedicaidInformationRow)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, HD, HE, HF, HG, HH, HI, HJ, HK, HL, HM, HN, HO, HP, HQ, HR, HS, HT, HB, HC, WL, WA, WB, WE, WH, WI, WK, WM, WN, WO, WP, WQ, WR, WS, WT, WU, WV, WC, WD, WF, WG, XQ, XO, XR, XS, XT, XV, XU}
            rowFAMISMedicaidInformationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFAMISMedicaidInformationRow)
            Return rowFAMISMedicaidInformationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FAMISMedicaidInformationDataTable = CType(MyBase.Clone,FAMISMedicaidInformationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FAMISMedicaidInformationDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnHD = MyBase.Columns("HD")
            Me.columnHE = MyBase.Columns("HE")
            Me.columnHF = MyBase.Columns("HF")
            Me.columnHG = MyBase.Columns("HG")
            Me.columnHH = MyBase.Columns("HH")
            Me.columnHI = MyBase.Columns("HI")
            Me.columnHJ = MyBase.Columns("HJ")
            Me.columnHK = MyBase.Columns("HK")
            Me.columnHL = MyBase.Columns("HL")
            Me.columnHM = MyBase.Columns("HM")
            Me.columnHN = MyBase.Columns("HN")
            Me.columnHO = MyBase.Columns("HO")
            Me.columnHP = MyBase.Columns("HP")
            Me.columnHQ = MyBase.Columns("HQ")
            Me.columnHR = MyBase.Columns("HR")
            Me.columnHS = MyBase.Columns("HS")
            Me.columnHT = MyBase.Columns("HT")
            Me.columnHB = MyBase.Columns("HB")
            Me.columnHC = MyBase.Columns("HC")
            Me.columnWL = MyBase.Columns("WL")
            Me.columnWA = MyBase.Columns("WA")
            Me.columnWB = MyBase.Columns("WB")
            Me.columnWE = MyBase.Columns("WE")
            Me.columnWH = MyBase.Columns("WH")
            Me.columnWI = MyBase.Columns("WI")
            Me.columnWK = MyBase.Columns("WK")
            Me.columnWM = MyBase.Columns("WM")
            Me.columnWN = MyBase.Columns("WN")
            Me.columnWO = MyBase.Columns("WO")
            Me.columnWP = MyBase.Columns("WP")
            Me.columnWQ = MyBase.Columns("WQ")
            Me.columnWR = MyBase.Columns("WR")
            Me.columnWS = MyBase.Columns("WS")
            Me.columnWT = MyBase.Columns("WT")
            Me.columnWU = MyBase.Columns("WU")
            Me.columnWV = MyBase.Columns("WV")
            Me.columnWC = MyBase.Columns("WC")
            Me.columnWD = MyBase.Columns("WD")
            Me.columnWF = MyBase.Columns("WF")
            Me.columnWG = MyBase.Columns("WG")
            Me.columnXQ = MyBase.Columns("XQ")
            Me.columnXO = MyBase.Columns("XO")
            Me.columnXR = MyBase.Columns("XR")
            Me.columnXS = MyBase.Columns("XS")
            Me.columnXT = MyBase.Columns("XT")
            Me.columnXV = MyBase.Columns("XV")
            Me.columnXU = MyBase.Columns("XU")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnHD = New Global.System.Data.DataColumn("HD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHD)
            Me.columnHE = New Global.System.Data.DataColumn("HE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHE)
            Me.columnHF = New Global.System.Data.DataColumn("HF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHF)
            Me.columnHG = New Global.System.Data.DataColumn("HG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHG)
            Me.columnHH = New Global.System.Data.DataColumn("HH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHH)
            Me.columnHI = New Global.System.Data.DataColumn("HI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHI)
            Me.columnHJ = New Global.System.Data.DataColumn("HJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHJ)
            Me.columnHK = New Global.System.Data.DataColumn("HK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHK)
            Me.columnHL = New Global.System.Data.DataColumn("HL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHL)
            Me.columnHM = New Global.System.Data.DataColumn("HM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHM)
            Me.columnHN = New Global.System.Data.DataColumn("HN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHN)
            Me.columnHO = New Global.System.Data.DataColumn("HO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHO)
            Me.columnHP = New Global.System.Data.DataColumn("HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHP)
            Me.columnHQ = New Global.System.Data.DataColumn("HQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHQ)
            Me.columnHR = New Global.System.Data.DataColumn("HR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHR)
            Me.columnHS = New Global.System.Data.DataColumn("HS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHS)
            Me.columnHT = New Global.System.Data.DataColumn("HT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHT)
            Me.columnHB = New Global.System.Data.DataColumn("HB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHB)
            Me.columnHC = New Global.System.Data.DataColumn("HC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHC)
            Me.columnWL = New Global.System.Data.DataColumn("WL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWL)
            Me.columnWA = New Global.System.Data.DataColumn("WA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWA)
            Me.columnWB = New Global.System.Data.DataColumn("WB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWB)
            Me.columnWE = New Global.System.Data.DataColumn("WE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWE)
            Me.columnWH = New Global.System.Data.DataColumn("WH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWH)
            Me.columnWI = New Global.System.Data.DataColumn("WI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWI)
            Me.columnWK = New Global.System.Data.DataColumn("WK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWK)
            Me.columnWM = New Global.System.Data.DataColumn("WM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWM)
            Me.columnWN = New Global.System.Data.DataColumn("WN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWN)
            Me.columnWO = New Global.System.Data.DataColumn("WO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWO)
            Me.columnWP = New Global.System.Data.DataColumn("WP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWP)
            Me.columnWQ = New Global.System.Data.DataColumn("WQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWQ)
            Me.columnWR = New Global.System.Data.DataColumn("WR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWR)
            Me.columnWS = New Global.System.Data.DataColumn("WS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWS)
            Me.columnWT = New Global.System.Data.DataColumn("WT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWT)
            Me.columnWU = New Global.System.Data.DataColumn("WU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWU)
            Me.columnWV = New Global.System.Data.DataColumn("WV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWV)
            Me.columnWC = New Global.System.Data.DataColumn("WC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWC)
            Me.columnWD = New Global.System.Data.DataColumn("WD", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWD)
            Me.columnWF = New Global.System.Data.DataColumn("WF", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWF)
            Me.columnWG = New Global.System.Data.DataColumn("WG", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWG)
            Me.columnXQ = New Global.System.Data.DataColumn("XQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXQ)
            Me.columnXO = New Global.System.Data.DataColumn("XO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXO)
            Me.columnXR = New Global.System.Data.DataColumn("XR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXR)
            Me.columnXS = New Global.System.Data.DataColumn("XS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXS)
            Me.columnXT = New Global.System.Data.DataColumn("XT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXT)
            Me.columnXV = New Global.System.Data.DataColumn("XV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXV)
            Me.columnXU = New Global.System.Data.DataColumn("XU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXU)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnHD.MaxLength = 1
            Me.columnHE.MaxLength = 2
            Me.columnHF.MaxLength = 12
            Me.columnHG.MaxLength = 2
            Me.columnHH.MaxLength = 1
            Me.columnHI.MaxLength = 2
            Me.columnHJ.MaxLength = 1
            Me.columnHK.MaxLength = 2
            Me.columnHL.MaxLength = 3
            Me.columnHM.MaxLength = 2
            Me.columnHN.MaxLength = 12
            Me.columnHO.MaxLength = 2
            Me.columnHP.MaxLength = 1
            Me.columnHQ.MaxLength = 2
            Me.columnHR.AllowDBNull = false
            Me.columnHR.MaxLength = 1
            Me.columnHS.MaxLength = 2
            Me.columnHT.MaxLength = 3
            Me.columnHB.MaxLength = 6
            Me.columnHC.MaxLength = 6
            Me.columnWL.MaxLength = 7
            Me.columnWA.MaxLength = 1
            Me.columnWB.MaxLength = 3
            Me.columnWE.MaxLength = 1
            Me.columnWH.MaxLength = 2
            Me.columnWI.MaxLength = 1
            Me.columnWK.MaxLength = 7
            Me.columnWM.MaxLength = 7
            Me.columnWN.MaxLength = 8
            Me.columnWO.MaxLength = 8
            Me.columnWP.MaxLength = 1
            Me.columnWQ.MaxLength = 7
            Me.columnWR.MaxLength = 8
            Me.columnWS.MaxLength = 7
            Me.columnWT.MaxLength = 7
            Me.columnWU.MaxLength = 7
            Me.columnWV.MaxLength = 7
            Me.columnXQ.MaxLength = 1
            Me.columnXO.MaxLength = 2
            Me.columnXR.MaxLength = 1
            Me.columnXS.MaxLength = 3
            Me.columnXT.MaxLength = 10
            Me.columnXV.MaxLength = 1
            Me.columnXU.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFAMISMedicaidInformationRow() As FAMISMedicaidInformationRow
            Return CType(Me.NewRow,FAMISMedicaidInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FAMISMedicaidInformationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FAMISMedicaidInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FAMISMedicaidInformationRowChangedEvent) Is Nothing) Then
                RaiseEvent FAMISMedicaidInformationRowChanged(Me, New FAMISMedicaidInformationRowChangeEvent(CType(e.Row,FAMISMedicaidInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FAMISMedicaidInformationRowChangingEvent) Is Nothing) Then
                RaiseEvent FAMISMedicaidInformationRowChanging(Me, New FAMISMedicaidInformationRowChangeEvent(CType(e.Row,FAMISMedicaidInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FAMISMedicaidInformationRowDeletedEvent) Is Nothing) Then
                RaiseEvent FAMISMedicaidInformationRowDeleted(Me, New FAMISMedicaidInformationRowChangeEvent(CType(e.Row,FAMISMedicaidInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FAMISMedicaidInformationRowDeletingEvent) Is Nothing) Then
                RaiseEvent FAMISMedicaidInformationRowDeleting(Me, New FAMISMedicaidInformationRowChangeEvent(CType(e.Row,FAMISMedicaidInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFAMISMedicaidInformationRow(ByVal row As FAMISMedicaidInformationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PhoenixDataSet = New PhoenixDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FAMISMedicaidInformationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FAMISVRPInformationDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnVRPNumber As Global.System.Data.DataColumn
        
        Private columnVA As Global.System.Data.DataColumn
        
        Private columnVC As Global.System.Data.DataColumn
        
        Private columnVE As Global.System.Data.DataColumn
        
        Private columnVG As Global.System.Data.DataColumn
        
        Private columnVI As Global.System.Data.DataColumn
        
        Private columnVQ As Global.System.Data.DataColumn
        
        Private columnVK As Global.System.Data.DataColumn
        
        Private columnVM As Global.System.Data.DataColumn
        
        Private columnVO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FAMISVRPInformation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VRPNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVRPNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FAMISVRPInformationRow
            Get
                Return CType(Me.Rows(index),FAMISVRPInformationRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISVRPInformationRowChanging As FAMISVRPInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISVRPInformationRowChanged As FAMISVRPInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISVRPInformationRowDeleting As FAMISVRPInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISVRPInformationRowDeleted As FAMISVRPInformationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFAMISVRPInformationRow(ByVal row As FAMISVRPInformationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFAMISVRPInformationRow(ByVal CaseNumber As String, ByVal VRPNumber As String, ByVal VA As String, ByVal VC As String, ByVal VE As String, ByVal VG As String, ByVal VI As String, ByVal VQ As String, ByVal VK As String, ByVal VM As String, ByVal VO As String) As FAMISVRPInformationRow
            Dim rowFAMISVRPInformationRow As FAMISVRPInformationRow = CType(Me.NewRow,FAMISVRPInformationRow)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, VRPNumber, VA, VC, VE, VG, VI, VQ, VK, VM, VO}
            rowFAMISVRPInformationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFAMISVRPInformationRow)
            Return rowFAMISVRPInformationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FAMISVRPInformationDataTable = CType(MyBase.Clone,FAMISVRPInformationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FAMISVRPInformationDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnVRPNumber = MyBase.Columns("VRPNumber")
            Me.columnVA = MyBase.Columns("VA")
            Me.columnVC = MyBase.Columns("VC")
            Me.columnVE = MyBase.Columns("VE")
            Me.columnVG = MyBase.Columns("VG")
            Me.columnVI = MyBase.Columns("VI")
            Me.columnVQ = MyBase.Columns("VQ")
            Me.columnVK = MyBase.Columns("VK")
            Me.columnVM = MyBase.Columns("VM")
            Me.columnVO = MyBase.Columns("VO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnVRPNumber = New Global.System.Data.DataColumn("VRPNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVRPNumber)
            Me.columnVA = New Global.System.Data.DataColumn("VA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVA)
            Me.columnVC = New Global.System.Data.DataColumn("VC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVC)
            Me.columnVE = New Global.System.Data.DataColumn("VE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVE)
            Me.columnVG = New Global.System.Data.DataColumn("VG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVG)
            Me.columnVI = New Global.System.Data.DataColumn("VI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVI)
            Me.columnVQ = New Global.System.Data.DataColumn("VQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVQ)
            Me.columnVK = New Global.System.Data.DataColumn("VK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVK)
            Me.columnVM = New Global.System.Data.DataColumn("VM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVM)
            Me.columnVO = New Global.System.Data.DataColumn("VO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVO)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnVRPNumber.MaxLength = 5
            Me.columnVA.MaxLength = 4
            Me.columnVC.MaxLength = 1
            Me.columnVE.MaxLength = 6
            Me.columnVG.MaxLength = 3
            Me.columnVI.MaxLength = 9
            Me.columnVQ.MaxLength = 20
            Me.columnVK.MaxLength = 7
            Me.columnVM.MaxLength = 6
            Me.columnVO.MaxLength = 6
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFAMISVRPInformationRow() As FAMISVRPInformationRow
            Return CType(Me.NewRow,FAMISVRPInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FAMISVRPInformationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FAMISVRPInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FAMISVRPInformationRowChangedEvent) Is Nothing) Then
                RaiseEvent FAMISVRPInformationRowChanged(Me, New FAMISVRPInformationRowChangeEvent(CType(e.Row,FAMISVRPInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FAMISVRPInformationRowChangingEvent) Is Nothing) Then
                RaiseEvent FAMISVRPInformationRowChanging(Me, New FAMISVRPInformationRowChangeEvent(CType(e.Row,FAMISVRPInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FAMISVRPInformationRowDeletedEvent) Is Nothing) Then
                RaiseEvent FAMISVRPInformationRowDeleted(Me, New FAMISVRPInformationRowChangeEvent(CType(e.Row,FAMISVRPInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FAMISVRPInformationRowDeletingEvent) Is Nothing) Then
                RaiseEvent FAMISVRPInformationRowDeleting(Me, New FAMISVRPInformationRowChangeEvent(CType(e.Row,FAMISVRPInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFAMISVRPInformationRow(ByVal row As FAMISVRPInformationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PhoenixDataSet = New PhoenixDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FAMISVRPInformationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IMPSInformationDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnBatchNumber As Global.System.Data.DataColumn
        
        Private columnDropped As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IMPSInformation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BatchNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatchNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DroppedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDropped
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IMPSInformationRow
            Get
                Return CType(Me.Rows(index),IMPSInformationRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IMPSInformationRowChanging As IMPSInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IMPSInformationRowChanged As IMPSInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IMPSInformationRowDeleting As IMPSInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IMPSInformationRowDeleted As IMPSInformationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddIMPSInformationRow(ByVal row As IMPSInformationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddIMPSInformationRow(ByVal CaseNumber As String, ByVal BatchNumber As String, ByVal Dropped As String) As IMPSInformationRow
            Dim rowIMPSInformationRow As IMPSInformationRow = CType(Me.NewRow,IMPSInformationRow)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, BatchNumber, Dropped}
            rowIMPSInformationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIMPSInformationRow)
            Return rowIMPSInformationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IMPSInformationDataTable = CType(MyBase.Clone,IMPSInformationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IMPSInformationDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnBatchNumber = MyBase.Columns("BatchNumber")
            Me.columnDropped = MyBase.Columns("Dropped")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnBatchNumber = New Global.System.Data.DataColumn("BatchNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatchNumber)
            Me.columnDropped = New Global.System.Data.DataColumn("Dropped", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDropped)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnBatchNumber.MaxLength = 10
            Me.columnDropped.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewIMPSInformationRow() As IMPSInformationRow
            Return CType(Me.NewRow,IMPSInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IMPSInformationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IMPSInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IMPSInformationRowChangedEvent) Is Nothing) Then
                RaiseEvent IMPSInformationRowChanged(Me, New IMPSInformationRowChangeEvent(CType(e.Row,IMPSInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IMPSInformationRowChangingEvent) Is Nothing) Then
                RaiseEvent IMPSInformationRowChanging(Me, New IMPSInformationRowChangeEvent(CType(e.Row,IMPSInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IMPSInformationRowDeletedEvent) Is Nothing) Then
                RaiseEvent IMPSInformationRowDeleted(Me, New IMPSInformationRowChangeEvent(CType(e.Row,IMPSInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IMPSInformationRowDeletingEvent) Is Nothing) Then
                RaiseEvent IMPSInformationRowDeleting(Me, New IMPSInformationRowChangeEvent(CType(e.Row,IMPSInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveIMPSInformationRow(ByVal row As IMPSInformationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PhoenixDataSet = New PhoenixDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IMPSInformationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FAMISAppendedInformationDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnAQ As Global.System.Data.DataColumn
        
        Private columnCH As Global.System.Data.DataColumn
        
        Private columnDG As Global.System.Data.DataColumn
        
        Private columnDH As Global.System.Data.DataColumn
        
        Private columnDI As Global.System.Data.DataColumn
        
        Private columnMU As Global.System.Data.DataColumn
        
        Private columnOP As Global.System.Data.DataColumn
        
        Private columnOQ1 As Global.System.Data.DataColumn
        
        Private columnOQ2 As Global.System.Data.DataColumn
        
        Private columnOR As Global.System.Data.DataColumn
        
        Private columnMS As Global.System.Data.DataColumn
        
        Private columnMT As Global.System.Data.DataColumn
        
        Private columnNQ As Global.System.Data.DataColumn
        
        Private columnNR As Global.System.Data.DataColumn
        
        Private columnNS As Global.System.Data.DataColumn
        
        Private columnNT As Global.System.Data.DataColumn
        
        Private columnNU As Global.System.Data.DataColumn
        
        Private columnNV As Global.System.Data.DataColumn
        
        Private columnNW As Global.System.Data.DataColumn
        
        Private columnVB As Global.System.Data.DataColumn
        
        Private columnVF As Global.System.Data.DataColumn
        
        Private columnVH As Global.System.Data.DataColumn
        
        Private columnWR As Global.System.Data.DataColumn
        
        Private columnXO As Global.System.Data.DataColumn
        
        Private columnXP As Global.System.Data.DataColumn
        
        Private columnXQ As Global.System.Data.DataColumn
        
        Private columnXR As Global.System.Data.DataColumn
        
        Private columnXS As Global.System.Data.DataColumn
        
        Private columnXT As Global.System.Data.DataColumn
        
        Private columnXU As Global.System.Data.DataColumn
        
        Private columnXV As Global.System.Data.DataColumn
        
        Private columnB1 As Global.System.Data.DataColumn
        
        Private columnB2 As Global.System.Data.DataColumn
        
        Private columnEO As Global.System.Data.DataColumn
        
        Private columnFQ As Global.System.Data.DataColumn
        
        Private columnHU As Global.System.Data.DataColumn
        
        Private columnZF As Global.System.Data.DataColumn
        
        Private columnB3 As Global.System.Data.DataColumn
        
        Private columnB4 As Global.System.Data.DataColumn
        
        Private columnFR As Global.System.Data.DataColumn
        
        Private columnHV As Global.System.Data.DataColumn
        
        Private columnZA As Global.System.Data.DataColumn
        
        Private columnNT1 As Global.System.Data.DataColumn
        
        Private columnXT1 As Global.System.Data.DataColumn
        
        Private columnHU1 As Global.System.Data.DataColumn
        
        Private columnHV1 As Global.System.Data.DataColumn
        
        Private columnB5 As Global.System.Data.DataColumn
        
        Private columnB6 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FAMISAppendedInformation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OQ1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOQ1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OQ2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOQ2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property B1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnB1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property B2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnB2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property B3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnB3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property B4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnB4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnXT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HU1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnHU1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HV1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnHV1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property B5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnB5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property B6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnB6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FAMISAppendedInformationRow
            Get
                Return CType(Me.Rows(index),FAMISAppendedInformationRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISAppendedInformationRowChanging As FAMISAppendedInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISAppendedInformationRowChanged As FAMISAppendedInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISAppendedInformationRowDeleting As FAMISAppendedInformationRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMISAppendedInformationRowDeleted As FAMISAppendedInformationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFAMISAppendedInformationRow(ByVal row As FAMISAppendedInformationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFAMISAppendedInformationRow( _
                    ByVal CaseNumber As String,  _
                    ByVal AQ As String,  _
                    ByVal CH As String,  _
                    ByVal DG As String,  _
                    ByVal DH As String,  _
                    ByVal DI As String,  _
                    ByVal MU As String,  _
                    ByVal OP As String,  _
                    ByVal OQ1 As String,  _
                    ByVal OQ2 As String,  _
                    ByVal _OR As String,  _
                    ByVal MS As String,  _
                    ByVal MT As String,  _
                    ByVal NQ As String,  _
                    ByVal NR As String,  _
                    ByVal NS As String,  _
                    ByVal NT As String,  _
                    ByVal NU As String,  _
                    ByVal NV As String,  _
                    ByVal NW As String,  _
                    ByVal VB As String,  _
                    ByVal VF As String,  _
                    ByVal VH As String,  _
                    ByVal WR As String,  _
                    ByVal XO As String,  _
                    ByVal XP As String,  _
                    ByVal XQ As String,  _
                    ByVal XR As String,  _
                    ByVal XS As String,  _
                    ByVal XT As String,  _
                    ByVal XU As String,  _
                    ByVal XV As String,  _
                    ByVal B1 As String,  _
                    ByVal B2 As String,  _
                    ByVal EO As String,  _
                    ByVal FQ As String,  _
                    ByVal HU As String,  _
                    ByVal ZF As String,  _
                    ByVal B3 As String,  _
                    ByVal B4 As String,  _
                    ByVal FR As String,  _
                    ByVal HV As String,  _
                    ByVal ZA As String,  _
                    ByVal NT1 As Date,  _
                    ByVal XT1 As Date,  _
                    ByVal HU1 As Date,  _
                    ByVal HV1 As Date,  _
                    ByVal B5 As Date,  _
                    ByVal B6 As Date) As FAMISAppendedInformationRow
            Dim rowFAMISAppendedInformationRow As FAMISAppendedInformationRow = CType(Me.NewRow,FAMISAppendedInformationRow)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, AQ, CH, DG, DH, DI, MU, OP, OQ1, OQ2, _OR, MS, MT, NQ, NR, NS, NT, NU, NV, NW, VB, VF, VH, WR, XO, XP, XQ, XR, XS, XT, XU, XV, B1, B2, EO, FQ, HU, ZF, B3, B4, FR, HV, ZA, NT1, XT1, HU1, HV1, B5, B6}
            rowFAMISAppendedInformationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFAMISAppendedInformationRow)
            Return rowFAMISAppendedInformationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FAMISAppendedInformationDataTable = CType(MyBase.Clone,FAMISAppendedInformationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FAMISAppendedInformationDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnAQ = MyBase.Columns("AQ")
            Me.columnCH = MyBase.Columns("CH")
            Me.columnDG = MyBase.Columns("DG")
            Me.columnDH = MyBase.Columns("DH")
            Me.columnDI = MyBase.Columns("DI")
            Me.columnMU = MyBase.Columns("MU")
            Me.columnOP = MyBase.Columns("OP")
            Me.columnOQ1 = MyBase.Columns("OQ1")
            Me.columnOQ2 = MyBase.Columns("OQ2")
            Me.columnOR = MyBase.Columns("OR")
            Me.columnMS = MyBase.Columns("MS")
            Me.columnMT = MyBase.Columns("MT")
            Me.columnNQ = MyBase.Columns("NQ")
            Me.columnNR = MyBase.Columns("NR")
            Me.columnNS = MyBase.Columns("NS")
            Me.columnNT = MyBase.Columns("NT")
            Me.columnNU = MyBase.Columns("NU")
            Me.columnNV = MyBase.Columns("NV")
            Me.columnNW = MyBase.Columns("NW")
            Me.columnVB = MyBase.Columns("VB")
            Me.columnVF = MyBase.Columns("VF")
            Me.columnVH = MyBase.Columns("VH")
            Me.columnWR = MyBase.Columns("WR")
            Me.columnXO = MyBase.Columns("XO")
            Me.columnXP = MyBase.Columns("XP")
            Me.columnXQ = MyBase.Columns("XQ")
            Me.columnXR = MyBase.Columns("XR")
            Me.columnXS = MyBase.Columns("XS")
            Me.columnXT = MyBase.Columns("XT")
            Me.columnXU = MyBase.Columns("XU")
            Me.columnXV = MyBase.Columns("XV")
            Me.columnB1 = MyBase.Columns("B1")
            Me.columnB2 = MyBase.Columns("B2")
            Me.columnEO = MyBase.Columns("EO")
            Me.columnFQ = MyBase.Columns("FQ")
            Me.columnHU = MyBase.Columns("HU")
            Me.columnZF = MyBase.Columns("ZF")
            Me.columnB3 = MyBase.Columns("B3")
            Me.columnB4 = MyBase.Columns("B4")
            Me.columnFR = MyBase.Columns("FR")
            Me.columnHV = MyBase.Columns("HV")
            Me.columnZA = MyBase.Columns("ZA")
            Me.columnNT1 = MyBase.Columns("NT1")
            Me.columnXT1 = MyBase.Columns("XT1")
            Me.columnHU1 = MyBase.Columns("HU1")
            Me.columnHV1 = MyBase.Columns("HV1")
            Me.columnB5 = MyBase.Columns("B5")
            Me.columnB6 = MyBase.Columns("B6")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnAQ = New Global.System.Data.DataColumn("AQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAQ)
            Me.columnCH = New Global.System.Data.DataColumn("CH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCH)
            Me.columnDG = New Global.System.Data.DataColumn("DG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDG)
            Me.columnDH = New Global.System.Data.DataColumn("DH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDH)
            Me.columnDI = New Global.System.Data.DataColumn("DI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI)
            Me.columnMU = New Global.System.Data.DataColumn("MU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMU)
            Me.columnOP = New Global.System.Data.DataColumn("OP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOP)
            Me.columnOQ1 = New Global.System.Data.DataColumn("OQ1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOQ1)
            Me.columnOQ2 = New Global.System.Data.DataColumn("OQ2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOQ2)
            Me.columnOR = New Global.System.Data.DataColumn("OR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnOR.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "ORColumn")
            Me.columnOR.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnOR")
            Me.columnOR.ExtendedProperties.Add("Generator_UserColumnName", "OR")
            MyBase.Columns.Add(Me.columnOR)
            Me.columnMS = New Global.System.Data.DataColumn("MS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMS)
            Me.columnMT = New Global.System.Data.DataColumn("MT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMT)
            Me.columnNQ = New Global.System.Data.DataColumn("NQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNQ)
            Me.columnNR = New Global.System.Data.DataColumn("NR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNR)
            Me.columnNS = New Global.System.Data.DataColumn("NS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNS)
            Me.columnNT = New Global.System.Data.DataColumn("NT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNT)
            Me.columnNU = New Global.System.Data.DataColumn("NU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNU)
            Me.columnNV = New Global.System.Data.DataColumn("NV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNV)
            Me.columnNW = New Global.System.Data.DataColumn("NW", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNW)
            Me.columnVB = New Global.System.Data.DataColumn("VB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVB)
            Me.columnVF = New Global.System.Data.DataColumn("VF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVF)
            Me.columnVH = New Global.System.Data.DataColumn("VH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVH)
            Me.columnWR = New Global.System.Data.DataColumn("WR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWR)
            Me.columnXO = New Global.System.Data.DataColumn("XO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXO)
            Me.columnXP = New Global.System.Data.DataColumn("XP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXP)
            Me.columnXQ = New Global.System.Data.DataColumn("XQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXQ)
            Me.columnXR = New Global.System.Data.DataColumn("XR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXR)
            Me.columnXS = New Global.System.Data.DataColumn("XS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXS)
            Me.columnXT = New Global.System.Data.DataColumn("XT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXT)
            Me.columnXU = New Global.System.Data.DataColumn("XU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXU)
            Me.columnXV = New Global.System.Data.DataColumn("XV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXV)
            Me.columnB1 = New Global.System.Data.DataColumn("B1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnB1)
            Me.columnB2 = New Global.System.Data.DataColumn("B2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnB2)
            Me.columnEO = New Global.System.Data.DataColumn("EO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEO)
            Me.columnFQ = New Global.System.Data.DataColumn("FQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFQ)
            Me.columnHU = New Global.System.Data.DataColumn("HU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHU)
            Me.columnZF = New Global.System.Data.DataColumn("ZF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZF)
            Me.columnB3 = New Global.System.Data.DataColumn("B3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnB3)
            Me.columnB4 = New Global.System.Data.DataColumn("B4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnB4)
            Me.columnFR = New Global.System.Data.DataColumn("FR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFR)
            Me.columnHV = New Global.System.Data.DataColumn("HV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHV)
            Me.columnZA = New Global.System.Data.DataColumn("ZA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZA)
            Me.columnNT1 = New Global.System.Data.DataColumn("NT1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNT1)
            Me.columnXT1 = New Global.System.Data.DataColumn("XT1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXT1)
            Me.columnHU1 = New Global.System.Data.DataColumn("HU1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHU1)
            Me.columnHV1 = New Global.System.Data.DataColumn("HV1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHV1)
            Me.columnB5 = New Global.System.Data.DataColumn("B5", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnB5)
            Me.columnB6 = New Global.System.Data.DataColumn("B6", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnB6)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnAQ.MaxLength = 4
            Me.columnCH.MaxLength = 2
            Me.columnDG.MaxLength = 2
            Me.columnDH.MaxLength = 1
            Me.columnDI.MaxLength = 2
            Me.columnMU.MaxLength = 13
            Me.columnOP.MaxLength = 1
            Me.columnOQ1.MaxLength = 3
            Me.columnOQ2.MaxLength = 7
            Me.columnOR.MaxLength = 1
            Me.columnMS.MaxLength = 4
            Me.columnMT.MaxLength = 4
            Me.columnNQ.MaxLength = 1
            Me.columnNR.MaxLength = 1
            Me.columnNS.MaxLength = 1
            Me.columnNT.MaxLength = 8
            Me.columnNU.MaxLength = 4
            Me.columnNV.MaxLength = 8
            Me.columnNW.MaxLength = 8
            Me.columnVB.MaxLength = 15
            Me.columnVF.MaxLength = 2
            Me.columnVH.MaxLength = 1
            Me.columnWR.MaxLength = 5
            Me.columnXO.MaxLength = 2
            Me.columnXP.MaxLength = 1
            Me.columnXQ.MaxLength = 1
            Me.columnXR.MaxLength = 1
            Me.columnXS.MaxLength = 3
            Me.columnXT.MaxLength = 8
            Me.columnXU.MaxLength = 2
            Me.columnXV.MaxLength = 1
            Me.columnB1.MaxLength = 2
            Me.columnB2.MaxLength = 2
            Me.columnEO.MaxLength = 4
            Me.columnFQ.MaxLength = 1
            Me.columnHU.MaxLength = 8
            Me.columnZF.MaxLength = 1
            Me.columnB3.MaxLength = 2
            Me.columnB4.MaxLength = 2
            Me.columnFR.MaxLength = 1
            Me.columnHV.MaxLength = 8
            Me.columnZA.MaxLength = 1
            Me.columnNT1.Caption = "NT"
            Me.columnXT1.Caption = "XT"
            Me.columnHU1.Caption = "HU"
            Me.columnHV1.Caption = "HV"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFAMISAppendedInformationRow() As FAMISAppendedInformationRow
            Return CType(Me.NewRow,FAMISAppendedInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FAMISAppendedInformationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FAMISAppendedInformationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FAMISAppendedInformationRowChangedEvent) Is Nothing) Then
                RaiseEvent FAMISAppendedInformationRowChanged(Me, New FAMISAppendedInformationRowChangeEvent(CType(e.Row,FAMISAppendedInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FAMISAppendedInformationRowChangingEvent) Is Nothing) Then
                RaiseEvent FAMISAppendedInformationRowChanging(Me, New FAMISAppendedInformationRowChangeEvent(CType(e.Row,FAMISAppendedInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FAMISAppendedInformationRowDeletedEvent) Is Nothing) Then
                RaiseEvent FAMISAppendedInformationRowDeleted(Me, New FAMISAppendedInformationRowChangeEvent(CType(e.Row,FAMISAppendedInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FAMISAppendedInformationRowDeletingEvent) Is Nothing) Then
                RaiseEvent FAMISAppendedInformationRowDeleting(Me, New FAMISAppendedInformationRowChangeEvent(CType(e.Row,FAMISAppendedInformationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFAMISAppendedInformationRow(ByVal row As FAMISAppendedInformationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PhoenixDataSet = New PhoenixDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FAMISAppendedInformationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FAMISAFDCInformationRow
        Inherits Global.System.Data.DataRow
        
        Private tableFAMISAFDCInformation As FAMISAFDCInformationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFAMISAFDCInformation = CType(Me.Table,FAMISAFDCInformationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.HAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HA' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.HAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.IAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IA' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.IAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.IBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IB' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.IBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.ICColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IC' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.ICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.IDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.IEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IE' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.IEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IF1() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.IF1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IF1' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.IF1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IG() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.IGColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IG' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.IGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.IHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IH' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.IHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property II() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.IIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'II' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.IIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.IJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IJ' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.IJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.ILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IL' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.ILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.IKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IK' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.IKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.IPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IP' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.IPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.OJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OJ' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.OJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.IMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IM' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.IMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IN1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.IN1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IN1' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.IN1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAFDCInformation.IOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IO' in table 'FAMISAFDCInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAFDCInformation.IOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableFAMISAFDCInformation.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHANull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.HAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHANull()
            Me(Me.tableFAMISAFDCInformation.HAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIANull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.IAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIANull()
            Me(Me.tableFAMISAFDCInformation.IAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.IBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIBNull()
            Me(Me.tableFAMISAFDCInformation.IBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsICNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.ICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetICNull()
            Me(Me.tableFAMISAFDCInformation.ICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDNull()
            Me(Me.tableFAMISAFDCInformation.IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIENull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.IEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIENull()
            Me(Me.tableFAMISAFDCInformation.IEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIF1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.IF1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIF1Null()
            Me(Me.tableFAMISAFDCInformation.IF1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.IGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIGNull()
            Me(Me.tableFAMISAFDCInformation.IGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.IHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIHNull()
            Me(Me.tableFAMISAFDCInformation.IHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIINull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.IIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIINull()
            Me(Me.tableFAMISAFDCInformation.IIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.IJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIJNull()
            Me(Me.tableFAMISAFDCInformation.IJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsILNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.ILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetILNull()
            Me(Me.tableFAMISAFDCInformation.ILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.IKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIKNull()
            Me(Me.tableFAMISAFDCInformation.IKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.IPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIPNull()
            Me(Me.tableFAMISAFDCInformation.IPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.OJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOJNull()
            Me(Me.tableFAMISAFDCInformation.OJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.IMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMNull()
            Me(Me.tableFAMISAFDCInformation.IMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIN1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.IN1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIN1Null()
            Me(Me.tableFAMISAFDCInformation.IN1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIONull() As Boolean
            Return Me.IsNull(Me.tableFAMISAFDCInformation.IOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIONull()
            Me(Me.tableFAMISAFDCInformation.IOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FAMISApplicantInformationRow
        Inherits Global.System.Data.DataRow
        
        Private tableFAMISApplicantInformation As FAMISApplicantInformationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFAMISApplicantInformation = CType(Me.Table,FAMISApplicantInformationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'FAMISApplicantInformation' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BA' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BB' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BC' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BD' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BE' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BF' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BG' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BH' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BI' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BJ' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BK' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BL' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BM' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BN' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BO' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BP' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BQ' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.CAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CA' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.CAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.CCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CC' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.CCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CD1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.CD1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CD1' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.CD1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CD2() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.CD2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CD2' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.CD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.CEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CE' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.CEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.CFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CF' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.CFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.CGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.CGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.DBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DB' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.DBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.DCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DC' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.DCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DD1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.DD1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DD1' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.DD1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DD2() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.DD2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DD2' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.DD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.DEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DE' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.DEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.DFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DF' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.DFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.EAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EA' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.EAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.EBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EB' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.EBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.ECColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EC' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.ECColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ED() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.EDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ED' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.EDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ED1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.ED1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ED1' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.ED1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ED2() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.ED2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ED2' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.ED2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.EEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EE' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.EEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.EFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EF' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.EFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.EGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EG' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.EGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.EHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EH' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.EHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.EJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EJ' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.EJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DA1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.DA1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DA1' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.DA1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DA2() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.DA2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DA2' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.DA2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DA3() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.DA3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DA3' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.DA3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.NNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NN' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.NNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.BRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BR' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.BRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.OMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OM' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.OMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.EIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EI' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.EIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.EKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EK' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.EKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.ELColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EL' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.ELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.EMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EM' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.EMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EN' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.XAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XA' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.XAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.XBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XB' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.XBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.XCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XC' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.XCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.XDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XD' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.XDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.XEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XE' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.XEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.XFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XF' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.XFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.XGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XG' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.XGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.XHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XH' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.XHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.XIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XI' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.XIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.XJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XJ' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.XJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.XKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XK' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.XKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.XLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XL' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.XLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.XMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XM' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.XMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.XNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XN' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.XNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JV() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.JVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JV' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.JVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KT() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISApplicantInformation.KTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KT' in table 'FAMISApplicantInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISApplicantInformation.KTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableFAMISApplicantInformation.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBANull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBANull()
            Me(Me.tableFAMISApplicantInformation.BAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBBNull()
            Me(Me.tableFAMISApplicantInformation.BBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBCNull()
            Me(Me.tableFAMISApplicantInformation.BCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBDNull()
            Me(Me.tableFAMISApplicantInformation.BDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBENull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBENull()
            Me(Me.tableFAMISApplicantInformation.BEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBFNull()
            Me(Me.tableFAMISApplicantInformation.BFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBGNull()
            Me(Me.tableFAMISApplicantInformation.BGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBHNull()
            Me(Me.tableFAMISApplicantInformation.BHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBINull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBINull()
            Me(Me.tableFAMISApplicantInformation.BIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBJNull()
            Me(Me.tableFAMISApplicantInformation.BJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBKNull()
            Me(Me.tableFAMISApplicantInformation.BKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBLNull()
            Me(Me.tableFAMISApplicantInformation.BLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBMNull()
            Me(Me.tableFAMISApplicantInformation.BMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBNNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBNNull()
            Me(Me.tableFAMISApplicantInformation.BNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBONull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBONull()
            Me(Me.tableFAMISApplicantInformation.BOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBPNull()
            Me(Me.tableFAMISApplicantInformation.BPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBQNull()
            Me(Me.tableFAMISApplicantInformation.BQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.CAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANull()
            Me(Me.tableFAMISApplicantInformation.CAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.CCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCCNull()
            Me(Me.tableFAMISApplicantInformation.CCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCD1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.CD1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCD1Null()
            Me(Me.tableFAMISApplicantInformation.CD1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCD2Null() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.CD2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCD2Null()
            Me(Me.tableFAMISApplicantInformation.CD2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCENull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.CEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCENull()
            Me(Me.tableFAMISApplicantInformation.CEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.CFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCFNull()
            Me(Me.tableFAMISApplicantInformation.CFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.CGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCGNull()
            Me(Me.tableFAMISApplicantInformation.CGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.DBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDBNull()
            Me(Me.tableFAMISApplicantInformation.DBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.DCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDCNull()
            Me(Me.tableFAMISApplicantInformation.DCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDD1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.DD1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDD1Null()
            Me(Me.tableFAMISApplicantInformation.DD1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDD2Null() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.DD2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDD2Null()
            Me(Me.tableFAMISApplicantInformation.DD2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDENull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.DEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDENull()
            Me(Me.tableFAMISApplicantInformation.DEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.DFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDFNull()
            Me(Me.tableFAMISApplicantInformation.DFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEANull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.EAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEANull()
            Me(Me.tableFAMISApplicantInformation.EAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.EBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEBNull()
            Me(Me.tableFAMISApplicantInformation.EBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsECNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.ECColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetECNull()
            Me(Me.tableFAMISApplicantInformation.ECColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.EDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEDNull()
            Me(Me.tableFAMISApplicantInformation.EDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsED1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.ED1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetED1Null()
            Me(Me.tableFAMISApplicantInformation.ED1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsED2Null() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.ED2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetED2Null()
            Me(Me.tableFAMISApplicantInformation.ED2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEENull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.EEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEENull()
            Me(Me.tableFAMISApplicantInformation.EEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.EFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEFNull()
            Me(Me.tableFAMISApplicantInformation.EFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.EGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEGNull()
            Me(Me.tableFAMISApplicantInformation.EGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.EHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEHNull()
            Me(Me.tableFAMISApplicantInformation.EHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.EJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEJNull()
            Me(Me.tableFAMISApplicantInformation.EJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDA1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.DA1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDA1Null()
            Me(Me.tableFAMISApplicantInformation.DA1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDA2Null() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.DA2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDA2Null()
            Me(Me.tableFAMISApplicantInformation.DA2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDA3Null() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.DA3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDA3Null()
            Me(Me.tableFAMISApplicantInformation.DA3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNNNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.NNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNNNull()
            Me(Me.tableFAMISApplicantInformation.NNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBRNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.BRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBRNull()
            Me(Me.tableFAMISApplicantInformation.BRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.OMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOMNull()
            Me(Me.tableFAMISApplicantInformation.OMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEINull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.EIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEINull()
            Me(Me.tableFAMISApplicantInformation.EIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.EKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEKNull()
            Me(Me.tableFAMISApplicantInformation.EKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsELNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.ELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetELNull()
            Me(Me.tableFAMISApplicantInformation.ELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.EMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMNull()
            Me(Me.tableFAMISApplicantInformation.EMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENNull()
            Me(Me.tableFAMISApplicantInformation.ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXANull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.XAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXANull()
            Me(Me.tableFAMISApplicantInformation.XAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.XBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXBNull()
            Me(Me.tableFAMISApplicantInformation.XBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.XCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXCNull()
            Me(Me.tableFAMISApplicantInformation.XCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.XDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXDNull()
            Me(Me.tableFAMISApplicantInformation.XDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXENull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.XEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXENull()
            Me(Me.tableFAMISApplicantInformation.XEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.XFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXFNull()
            Me(Me.tableFAMISApplicantInformation.XFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.XGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXGNull()
            Me(Me.tableFAMISApplicantInformation.XGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.XHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXHNull()
            Me(Me.tableFAMISApplicantInformation.XHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXINull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.XIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXINull()
            Me(Me.tableFAMISApplicantInformation.XIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.XJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXJNull()
            Me(Me.tableFAMISApplicantInformation.XJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.XKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXKNull()
            Me(Me.tableFAMISApplicantInformation.XKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.XLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXLNull()
            Me(Me.tableFAMISApplicantInformation.XLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.XMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXMNull()
            Me(Me.tableFAMISApplicantInformation.XMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXNNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.XNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXNNull()
            Me(Me.tableFAMISApplicantInformation.XNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJVNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.JVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJVNull()
            Me(Me.tableFAMISApplicantInformation.JVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKTNull() As Boolean
            Return Me.IsNull(Me.tableFAMISApplicantInformation.KTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKTNull()
            Me(Me.tableFAMISApplicantInformation.KTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FAMISCaseChildRow
        Inherits Global.System.Data.DataRow
        
        Private tableFAMISCaseChild As FAMISCaseChildDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFAMISCaseChild = CType(Me.Table,FAMISCaseChildDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QA' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QB' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QC' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QD' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QF' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QG() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QGColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QG' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QH' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QJ' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QK() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QKColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QK' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QL' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QM' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QN' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QO' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RA' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RB' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RC' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RD' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.REColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RE' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.REColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RG' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RH' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RH2() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RH2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RH2' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RH2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RI' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RJ1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RJ1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RJ1' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RJ1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RJ2() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RJ2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RJ2' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RJ2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RK' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RL' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RM' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RP' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RR' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SNColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SN' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SQ' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SR' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TA' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TB' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TI' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TJ' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TF' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TK' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TD' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.UBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UB' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.UBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RN' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.ROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RO' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.ROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.RQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RQ' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.RQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SA' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SB' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SC' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SD' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SE' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SF' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SG' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SH' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SJ' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SK' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SL' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SM' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SO' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SP' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SI' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.SSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SS' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.SSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TG' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.THColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TH' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.THColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TL() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TLColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TL' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TM' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TO1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TO1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TO1' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TO1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TQ' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TR' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TS' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.UAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UA' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.UAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.UCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UC' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.UCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.UDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UD' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.UDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.UEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UE' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.UEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.UFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UF' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.UFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.UGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UG' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.UGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.UHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UH' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.UHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.UKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UK' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.UKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.ULColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UL' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.ULColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TC' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TE' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.UIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UI' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.UIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.YAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YA' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.YAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QE' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.QIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QI' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.QIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TT() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TT' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TU() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseChild.TUColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TU' in table 'FAMISCaseChild' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseChild.TUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableFAMISCaseChild.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQANull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQANull()
            Me(Me.tableFAMISCaseChild.QAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQBNull()
            Me(Me.tableFAMISCaseChild.QBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQCNull()
            Me(Me.tableFAMISCaseChild.QCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQDNull()
            Me(Me.tableFAMISCaseChild.QDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQFNull()
            Me(Me.tableFAMISCaseChild.QFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQGNull()
            Me(Me.tableFAMISCaseChild.QGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQHNull()
            Me(Me.tableFAMISCaseChild.QHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQJNull()
            Me(Me.tableFAMISCaseChild.QJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQKNull()
            Me(Me.tableFAMISCaseChild.QKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQLNull()
            Me(Me.tableFAMISCaseChild.QLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQMNull()
            Me(Me.tableFAMISCaseChild.QMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQNNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQNNull()
            Me(Me.tableFAMISCaseChild.QNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQONull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQONull()
            Me(Me.tableFAMISCaseChild.QOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRANull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRANull()
            Me(Me.tableFAMISCaseChild.RAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRBNull()
            Me(Me.tableFAMISCaseChild.RBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCNull()
            Me(Me.tableFAMISCaseChild.RCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRDNull()
            Me(Me.tableFAMISCaseChild.RDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRENull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.REColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRENull()
            Me(Me.tableFAMISCaseChild.REColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRFNull()
            Me(Me.tableFAMISCaseChild.RFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRGNull()
            Me(Me.tableFAMISCaseChild.RGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRHNull()
            Me(Me.tableFAMISCaseChild.RHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRH2Null() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RH2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRH2Null()
            Me(Me.tableFAMISCaseChild.RH2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRINull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRINull()
            Me(Me.tableFAMISCaseChild.RIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRJ1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RJ1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRJ1Null()
            Me(Me.tableFAMISCaseChild.RJ1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRJ2Null() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RJ2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRJ2Null()
            Me(Me.tableFAMISCaseChild.RJ2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRKNull()
            Me(Me.tableFAMISCaseChild.RKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRLNull()
            Me(Me.tableFAMISCaseChild.RLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRMNull()
            Me(Me.tableFAMISCaseChild.RMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRPNull()
            Me(Me.tableFAMISCaseChild.RPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRRNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRRNull()
            Me(Me.tableFAMISCaseChild.RRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSNNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSNNull()
            Me(Me.tableFAMISCaseChild.SNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSQNull()
            Me(Me.tableFAMISCaseChild.SQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSRNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSRNull()
            Me(Me.tableFAMISCaseChild.SRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTANull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTANull()
            Me(Me.tableFAMISCaseChild.TAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTBNull()
            Me(Me.tableFAMISCaseChild.TBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTINull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTINull()
            Me(Me.tableFAMISCaseChild.TIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTJNull()
            Me(Me.tableFAMISCaseChild.TJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTFNull()
            Me(Me.tableFAMISCaseChild.TFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTKNull()
            Me(Me.tableFAMISCaseChild.TKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTDNull()
            Me(Me.tableFAMISCaseChild.TDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.UBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUBNull()
            Me(Me.tableFAMISCaseChild.UBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRNNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRNNull()
            Me(Me.tableFAMISCaseChild.RNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRONull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.ROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRONull()
            Me(Me.tableFAMISCaseChild.ROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.RQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRQNull()
            Me(Me.tableFAMISCaseChild.RQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSANull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSANull()
            Me(Me.tableFAMISCaseChild.SAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSBNull()
            Me(Me.tableFAMISCaseChild.SBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCNull()
            Me(Me.tableFAMISCaseChild.SCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSDNull()
            Me(Me.tableFAMISCaseChild.SDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSENull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSENull()
            Me(Me.tableFAMISCaseChild.SEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSFNull()
            Me(Me.tableFAMISCaseChild.SFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSGNull()
            Me(Me.tableFAMISCaseChild.SGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSHNull()
            Me(Me.tableFAMISCaseChild.SHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSJNull()
            Me(Me.tableFAMISCaseChild.SJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSKNull()
            Me(Me.tableFAMISCaseChild.SKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSLNull()
            Me(Me.tableFAMISCaseChild.SLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSMNull()
            Me(Me.tableFAMISCaseChild.SMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSONull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSONull()
            Me(Me.tableFAMISCaseChild.SOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPNull()
            Me(Me.tableFAMISCaseChild.SPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSINull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSINull()
            Me(Me.tableFAMISCaseChild.SIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSSNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.SSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSSNull()
            Me(Me.tableFAMISCaseChild.SSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGNull()
            Me(Me.tableFAMISCaseChild.TGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.THColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTHNull()
            Me(Me.tableFAMISCaseChild.THColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTLNull()
            Me(Me.tableFAMISCaseChild.TLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTMNull()
            Me(Me.tableFAMISCaseChild.TMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTO1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TO1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTO1Null()
            Me(Me.tableFAMISCaseChild.TO1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTPNull()
            Me(Me.tableFAMISCaseChild.TPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTQNull()
            Me(Me.tableFAMISCaseChild.TQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRNull()
            Me(Me.tableFAMISCaseChild.TRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTSNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTSNull()
            Me(Me.tableFAMISCaseChild.TSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUANull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.UAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUANull()
            Me(Me.tableFAMISCaseChild.UAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.UCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUCNull()
            Me(Me.tableFAMISCaseChild.UCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.UDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUDNull()
            Me(Me.tableFAMISCaseChild.UDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUENull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.UEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUENull()
            Me(Me.tableFAMISCaseChild.UEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.UFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUFNull()
            Me(Me.tableFAMISCaseChild.UFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.UGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUGNull()
            Me(Me.tableFAMISCaseChild.UGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.UHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUHNull()
            Me(Me.tableFAMISCaseChild.UHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.UKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUKNull()
            Me(Me.tableFAMISCaseChild.UKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsULNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.ULColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetULNull()
            Me(Me.tableFAMISCaseChild.ULColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTCNull()
            Me(Me.tableFAMISCaseChild.TCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTENull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTENull()
            Me(Me.tableFAMISCaseChild.TEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUINull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.UIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUINull()
            Me(Me.tableFAMISCaseChild.UIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYANull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.YAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYANull()
            Me(Me.tableFAMISCaseChild.YAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQENull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQENull()
            Me(Me.tableFAMISCaseChild.QEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQINull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.QIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQINull()
            Me(Me.tableFAMISCaseChild.QIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTTNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTTNull()
            Me(Me.tableFAMISCaseChild.TTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTUNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseChild.TUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTUNull()
            Me(Me.tableFAMISCaseChild.TUColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FAMISCaseInformationRow
        Inherits Global.System.Data.DataRow
        
        Private tableFAMISCaseInformation As FAMISCaseInformationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFAMISCaseInformation = CType(Me.Table,FAMISCaseInformationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.AAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AA' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.AAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.ABColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AB' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.ABColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.ACColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AC' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.ACColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.ADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AD' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.ADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.AEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AE' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.AEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.AFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AF' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.AFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.AGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AG' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.AGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.AHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AH' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.AHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.AIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AI' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.AIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.AJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AJ' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.AJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AK() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.AKColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AK' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.AKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.ALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AL' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.ALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.AMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AM' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.AMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.ANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AN' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.ANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATEENTERED() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.DATEENTEREDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATEENTERED' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.DATEENTEREDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property P03() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.P03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P03' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.P03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property P05() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.P05Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P05' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.P05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _OPERATOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.OPERATORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPERATOR' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.OPERATORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property P09() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.P09Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P09' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.P09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BATCHNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.BATCHNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BATCHNUMBER' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.BATCHNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property P10() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.P10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P10' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.P10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WW() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISCaseInformation.WWColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WW' in table 'FAMISCaseInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISCaseInformation.WWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableFAMISCaseInformation.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAANull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.AAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAANull()
            Me(Me.tableFAMISCaseInformation.AAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsABNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.ABColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetABNull()
            Me(Me.tableFAMISCaseInformation.ABColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.ACColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACNull()
            Me(Me.tableFAMISCaseInformation.ACColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.ADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADNull()
            Me(Me.tableFAMISCaseInformation.ADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAENull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.AEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAENull()
            Me(Me.tableFAMISCaseInformation.AEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.AFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAFNull()
            Me(Me.tableFAMISCaseInformation.AFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.AGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAGNull()
            Me(Me.tableFAMISCaseInformation.AGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.AHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAHNull()
            Me(Me.tableFAMISCaseInformation.AHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAINull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.AIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAINull()
            Me(Me.tableFAMISCaseInformation.AIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.AJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAJNull()
            Me(Me.tableFAMISCaseInformation.AJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.AKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAKNull()
            Me(Me.tableFAMISCaseInformation.AKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsALNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.ALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetALNull()
            Me(Me.tableFAMISCaseInformation.ALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.AMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAMNull()
            Me(Me.tableFAMISCaseInformation.AMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.ANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANNull()
            Me(Me.tableFAMISCaseInformation.ANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATEENTEREDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.DATEENTEREDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATEENTEREDNull()
            Me(Me.tableFAMISCaseInformation.DATEENTEREDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsP03Null() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.P03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetP03Null()
            Me(Me.tableFAMISCaseInformation.P03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsP05Null() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.P05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetP05Null()
            Me(Me.tableFAMISCaseInformation.P05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_OPERATORNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.OPERATORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_OPERATORNull()
            Me(Me.tableFAMISCaseInformation.OPERATORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsP09Null() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.P09Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetP09Null()
            Me(Me.tableFAMISCaseInformation.P09Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBATCHNUMBERNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.BATCHNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBATCHNUMBERNull()
            Me(Me.tableFAMISCaseInformation.BATCHNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsP10Null() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.P10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetP10Null()
            Me(Me.tableFAMISCaseInformation.P10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWWNull() As Boolean
            Return Me.IsNull(Me.tableFAMISCaseInformation.WWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWWNull()
            Me(Me.tableFAMISCaseInformation.WWColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FAMISFoodStampInformationRow
        Inherits Global.System.Data.DataRow
        
        Private tableFAMISFoodStampInformation As FAMISFoodStampInformationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFAMISFoodStampInformation = CType(Me.Table,FAMISFoodStampInformationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'FAMISFoodStampInformation' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LA' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LB' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LCColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LC' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LD() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LD' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LE' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LF' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LH' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LI' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LJ' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LK' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LL' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LM' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LO' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LP' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LQ' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LR' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LTColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LT' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MD' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ND() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ND' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NE' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NF' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NG() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NGColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NG' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NI' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NJ' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NP' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.OAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OA' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.OAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.OHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OH' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.OHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.OIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OI' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.OIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ON1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.ON1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ON1' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.ON1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.OOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OO' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.OOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.OKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OK' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.OKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WX() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.WXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WX' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.WXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WY() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.WYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WY' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.WYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LS' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MA' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MB' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MC' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ME1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.ME1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ME1' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.ME1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MF' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MG' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MH' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MI' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MJ' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MK' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ML() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ML' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MM' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MN' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MO' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MP' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MQ' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MR' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NB' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NH' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NK' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NM' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.OBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OB' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.OBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.OCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OC' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.OCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.ODColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OD' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.ODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.OEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OE' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.OEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OF1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.OF1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OF1' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.OF1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.OGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OG' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.OGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.OLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OL' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.OLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NA' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NCColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NC' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.NLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NL' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.NLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.LNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LN' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.LNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MS' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MT() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.MTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MT' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.MTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OK1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.OK1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OK1' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.OK1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OK2() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.OK2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OK2' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.OK2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OK3() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISFoodStampInformation.OK3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OK3' in table 'FAMISFoodStampInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISFoodStampInformation.OK3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableFAMISFoodStampInformation.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLANull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLANull()
            Me(Me.tableFAMISFoodStampInformation.LAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLBNull()
            Me(Me.tableFAMISFoodStampInformation.LBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLCNull()
            Me(Me.tableFAMISFoodStampInformation.LCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLDNull()
            Me(Me.tableFAMISFoodStampInformation.LDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLENull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLENull()
            Me(Me.tableFAMISFoodStampInformation.LEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLFNull()
            Me(Me.tableFAMISFoodStampInformation.LFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLGNull()
            Me(Me.tableFAMISFoodStampInformation.LGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLHNull()
            Me(Me.tableFAMISFoodStampInformation.LHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLINull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLINull()
            Me(Me.tableFAMISFoodStampInformation.LIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLJNull()
            Me(Me.tableFAMISFoodStampInformation.LJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLKNull()
            Me(Me.tableFAMISFoodStampInformation.LKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLLNull()
            Me(Me.tableFAMISFoodStampInformation.LLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLMNull()
            Me(Me.tableFAMISFoodStampInformation.LMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLONull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLONull()
            Me(Me.tableFAMISFoodStampInformation.LOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLPNull()
            Me(Me.tableFAMISFoodStampInformation.LPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLQNull()
            Me(Me.tableFAMISFoodStampInformation.LQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLRNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLRNull()
            Me(Me.tableFAMISFoodStampInformation.LRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLTNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLTNull()
            Me(Me.tableFAMISFoodStampInformation.LTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMDNull()
            Me(Me.tableFAMISFoodStampInformation.MDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNDNull()
            Me(Me.tableFAMISFoodStampInformation.NDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNENull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNENull()
            Me(Me.tableFAMISFoodStampInformation.NEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNFNull()
            Me(Me.tableFAMISFoodStampInformation.NFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNGNull()
            Me(Me.tableFAMISFoodStampInformation.NGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNINull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNINull()
            Me(Me.tableFAMISFoodStampInformation.NIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNJNull()
            Me(Me.tableFAMISFoodStampInformation.NJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNPNull()
            Me(Me.tableFAMISFoodStampInformation.NPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOANull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.OAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOANull()
            Me(Me.tableFAMISFoodStampInformation.OAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.OHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOHNull()
            Me(Me.tableFAMISFoodStampInformation.OHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOINull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.OIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOINull()
            Me(Me.tableFAMISFoodStampInformation.OIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsON1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.ON1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetON1Null()
            Me(Me.tableFAMISFoodStampInformation.ON1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOONull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.OOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOONull()
            Me(Me.tableFAMISFoodStampInformation.OOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.OKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOKNull()
            Me(Me.tableFAMISFoodStampInformation.OKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWXNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.WXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWXNull()
            Me(Me.tableFAMISFoodStampInformation.WXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWYNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.WYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWYNull()
            Me(Me.tableFAMISFoodStampInformation.WYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSNull()
            Me(Me.tableFAMISFoodStampInformation.LSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMANull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMANull()
            Me(Me.tableFAMISFoodStampInformation.MAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMBNull()
            Me(Me.tableFAMISFoodStampInformation.MBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMCNull()
            Me(Me.tableFAMISFoodStampInformation.MCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsME1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.ME1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetME1Null()
            Me(Me.tableFAMISFoodStampInformation.ME1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMFNull()
            Me(Me.tableFAMISFoodStampInformation.MFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMGNull()
            Me(Me.tableFAMISFoodStampInformation.MGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMHNull()
            Me(Me.tableFAMISFoodStampInformation.MHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMINull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMINull()
            Me(Me.tableFAMISFoodStampInformation.MIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMJNull()
            Me(Me.tableFAMISFoodStampInformation.MJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMKNull()
            Me(Me.tableFAMISFoodStampInformation.MKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMLNull()
            Me(Me.tableFAMISFoodStampInformation.MLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMMNull()
            Me(Me.tableFAMISFoodStampInformation.MMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMNNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMNNull()
            Me(Me.tableFAMISFoodStampInformation.MNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMONull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMONull()
            Me(Me.tableFAMISFoodStampInformation.MOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMPNull()
            Me(Me.tableFAMISFoodStampInformation.MPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMQNull()
            Me(Me.tableFAMISFoodStampInformation.MQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMRNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMRNull()
            Me(Me.tableFAMISFoodStampInformation.MRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNBNull()
            Me(Me.tableFAMISFoodStampInformation.NBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNHNull()
            Me(Me.tableFAMISFoodStampInformation.NHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNKNull()
            Me(Me.tableFAMISFoodStampInformation.NKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNMNull()
            Me(Me.tableFAMISFoodStampInformation.NMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNONull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNONull()
            Me(Me.tableFAMISFoodStampInformation.NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.OBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOBNull()
            Me(Me.tableFAMISFoodStampInformation.OBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.OCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOCNull()
            Me(Me.tableFAMISFoodStampInformation.OCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsODNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.ODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetODNull()
            Me(Me.tableFAMISFoodStampInformation.ODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOENull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.OEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOENull()
            Me(Me.tableFAMISFoodStampInformation.OEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOF1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.OF1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOF1Null()
            Me(Me.tableFAMISFoodStampInformation.OF1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.OGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOGNull()
            Me(Me.tableFAMISFoodStampInformation.OGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.OLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOLNull()
            Me(Me.tableFAMISFoodStampInformation.OLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNANull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNANull()
            Me(Me.tableFAMISFoodStampInformation.NAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNCNull()
            Me(Me.tableFAMISFoodStampInformation.NCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.NLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNLNull()
            Me(Me.tableFAMISFoodStampInformation.NLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLNNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.LNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLNNull()
            Me(Me.tableFAMISFoodStampInformation.LNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMSNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMSNull()
            Me(Me.tableFAMISFoodStampInformation.MSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMTNull() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.MTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMTNull()
            Me(Me.tableFAMISFoodStampInformation.MTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOK1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.OK1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOK1Null()
            Me(Me.tableFAMISFoodStampInformation.OK1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOK2Null() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.OK2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOK2Null()
            Me(Me.tableFAMISFoodStampInformation.OK2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOK3Null() As Boolean
            Return Me.IsNull(Me.tableFAMISFoodStampInformation.OK3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOK3Null()
            Me(Me.tableFAMISFoodStampInformation.OK3Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FAMISIandAInformationRow
        Inherits Global.System.Data.DataRow
        
        Private tableFAMISIandAInformation As FAMISIandAInformationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFAMISIandAInformation = CType(Me.Table,FAMISIandAInformationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PA' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PB' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PC' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PD' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PF' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PG' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PI() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PIColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PI' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PJ' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PK' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PN' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PE' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PH() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PHColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PH' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PM' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.POColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PO' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.POColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIandAInformation.PPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PP' in table 'FAMISIandAInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIandAInformation.PPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableFAMISIandAInformation.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPANull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPANull()
            Me(Me.tableFAMISIandAInformation.PAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPBNull()
            Me(Me.tableFAMISIandAInformation.PBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPCNull()
            Me(Me.tableFAMISIandAInformation.PCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPDNull()
            Me(Me.tableFAMISIandAInformation.PDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPFNull()
            Me(Me.tableFAMISIandAInformation.PFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPGNull()
            Me(Me.tableFAMISIandAInformation.PGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPINull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPINull()
            Me(Me.tableFAMISIandAInformation.PIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPJNull()
            Me(Me.tableFAMISIandAInformation.PJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPKNull()
            Me(Me.tableFAMISIandAInformation.PKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLNull()
            Me(Me.tableFAMISIandAInformation.PLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPNNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPNNull()
            Me(Me.tableFAMISIandAInformation.PNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPENull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPENull()
            Me(Me.tableFAMISIandAInformation.PEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPHNull()
            Me(Me.tableFAMISIandAInformation.PHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPMNull()
            Me(Me.tableFAMISIandAInformation.PMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPONull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.POColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPONull()
            Me(Me.tableFAMISIandAInformation.POColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIandAInformation.PPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPPNull()
            Me(Me.tableFAMISIandAInformation.PPColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FAMISIncomeInformationRow
        Inherits Global.System.Data.DataRow
        
        Private tableFAMISIncomeInformation As FAMISIncomeInformationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFAMISIncomeInformation = CType(Me.Table,FAMISIncomeInformationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JP' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JQ' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JS' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JT() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JT' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JW() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JWColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JW' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JX() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JX' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KU() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KU' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KV() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KV' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JA' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JB' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JC' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JD' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JE' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JF' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JG' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JH' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JI' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JK' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JL' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JM' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JN' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JO' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JR' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JU() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JU' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KA' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KB' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KC' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KD' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KE' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KF' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KG' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KH' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KI' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KJ' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KK' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KL' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KM' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KN' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KO' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KP' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KQ' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KR' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.KSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KS' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.KSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIncomeInformation.JJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JJ' in table 'FAMISIncomeInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIncomeInformation.JJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableFAMISIncomeInformation.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJPNull()
            Me(Me.tableFAMISIncomeInformation.JPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJQNull()
            Me(Me.tableFAMISIncomeInformation.JQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJSNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJSNull()
            Me(Me.tableFAMISIncomeInformation.JSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJTNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJTNull()
            Me(Me.tableFAMISIncomeInformation.JTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJWNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJWNull()
            Me(Me.tableFAMISIncomeInformation.JWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJXNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJXNull()
            Me(Me.tableFAMISIncomeInformation.JXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKUNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKUNull()
            Me(Me.tableFAMISIncomeInformation.KUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKVNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKVNull()
            Me(Me.tableFAMISIncomeInformation.KVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJANull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJANull()
            Me(Me.tableFAMISIncomeInformation.JAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJBNull()
            Me(Me.tableFAMISIncomeInformation.JBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJCNull()
            Me(Me.tableFAMISIncomeInformation.JCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJDNull()
            Me(Me.tableFAMISIncomeInformation.JDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJENull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJENull()
            Me(Me.tableFAMISIncomeInformation.JEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJFNull()
            Me(Me.tableFAMISIncomeInformation.JFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJGNull()
            Me(Me.tableFAMISIncomeInformation.JGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJHNull()
            Me(Me.tableFAMISIncomeInformation.JHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJINull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJINull()
            Me(Me.tableFAMISIncomeInformation.JIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJKNull()
            Me(Me.tableFAMISIncomeInformation.JKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJLNull()
            Me(Me.tableFAMISIncomeInformation.JLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJMNull()
            Me(Me.tableFAMISIncomeInformation.JMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJNNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJNNull()
            Me(Me.tableFAMISIncomeInformation.JNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJONull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJONull()
            Me(Me.tableFAMISIncomeInformation.JOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJRNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJRNull()
            Me(Me.tableFAMISIncomeInformation.JRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJUNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJUNull()
            Me(Me.tableFAMISIncomeInformation.JUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKANull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKANull()
            Me(Me.tableFAMISIncomeInformation.KAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKBNull()
            Me(Me.tableFAMISIncomeInformation.KBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKCNull()
            Me(Me.tableFAMISIncomeInformation.KCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKDNull()
            Me(Me.tableFAMISIncomeInformation.KDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKENull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKENull()
            Me(Me.tableFAMISIncomeInformation.KEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKFNull()
            Me(Me.tableFAMISIncomeInformation.KFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKGNull()
            Me(Me.tableFAMISIncomeInformation.KGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKHNull()
            Me(Me.tableFAMISIncomeInformation.KHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKINull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKINull()
            Me(Me.tableFAMISIncomeInformation.KIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKJNull()
            Me(Me.tableFAMISIncomeInformation.KJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKKNull()
            Me(Me.tableFAMISIncomeInformation.KKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKLNull()
            Me(Me.tableFAMISIncomeInformation.KLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKMNull()
            Me(Me.tableFAMISIncomeInformation.KMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKNNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKNNull()
            Me(Me.tableFAMISIncomeInformation.KNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKONull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKONull()
            Me(Me.tableFAMISIncomeInformation.KOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKPNull()
            Me(Me.tableFAMISIncomeInformation.KPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKQNull()
            Me(Me.tableFAMISIncomeInformation.KQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKRNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKRNull()
            Me(Me.tableFAMISIncomeInformation.KRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKSNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.KSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKSNull()
            Me(Me.tableFAMISIncomeInformation.KSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIncomeInformation.JJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJJNull()
            Me(Me.tableFAMISIncomeInformation.JJColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FAMISIndividualsInformationRow
        Inherits Global.System.Data.DataRow
        
        Private tableFAMISIndividualsInformation As FAMISIndividualsInformationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFAMISIndividualsInformation = CType(Me.Table,FAMISIndividualsInformationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'FAMISIndividualsInformation' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.BSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BS' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.BSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BT() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.BTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BT' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.BTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BX() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.BXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BX' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.BXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FB() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FB' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BU() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.BUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BU' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.BUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FC' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BV() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.BVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BV' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.BVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FD' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FD2() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FD2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FD2' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BW() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.BWColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BW' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.BWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FE2() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FE2' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FE1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FE1' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BY1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.BY1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BY1' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.BY1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FF' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BZ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.BZColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BZ' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.BZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FG' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FI' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FJ() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FJColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FJ' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FK' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FL' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FL2() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FL2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FL2' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FL2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FM1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FM1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FM1' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FM1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FM2() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FM2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FM2' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FM2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FN' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FP' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.GAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GA' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.GAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GB() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.GBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GB' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.GBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.GCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GC' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.GCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.GDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GD' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.GDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.GEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GE' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.GEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GF() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.GFColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GF' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.GFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.GGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GG' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.GGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GH() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.GHColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GH' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.GHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.GIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GI' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.GIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.GJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GJ' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.GJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.GKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GK' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.GKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GL() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.GLColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GL' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.GLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FH' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.FOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FO' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.FOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.ZAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZA' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.ZAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISIndividualsInformation.ZFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZF' in table 'FAMISIndividualsInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISIndividualsInformation.ZFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableFAMISIndividualsInformation.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBSNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.BSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBSNull()
            Me(Me.tableFAMISIndividualsInformation.BSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBTNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.BTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBTNull()
            Me(Me.tableFAMISIndividualsInformation.BTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBXNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.BXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBXNull()
            Me(Me.tableFAMISIndividualsInformation.BXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFANull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFANull()
            Me(Me.tableFAMISIndividualsInformation.FAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFBNull()
            Me(Me.tableFAMISIndividualsInformation.FBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBUNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.BUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBUNull()
            Me(Me.tableFAMISIndividualsInformation.BUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFCNull()
            Me(Me.tableFAMISIndividualsInformation.FCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBVNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.BVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBVNull()
            Me(Me.tableFAMISIndividualsInformation.BVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFDNull()
            Me(Me.tableFAMISIndividualsInformation.FDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFD2Null() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FD2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFD2Null()
            Me(Me.tableFAMISIndividualsInformation.FD2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBWNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.BWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBWNull()
            Me(Me.tableFAMISIndividualsInformation.BWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFE2Null() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFE2Null()
            Me(Me.tableFAMISIndividualsInformation.FE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFE1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFE1Null()
            Me(Me.tableFAMISIndividualsInformation.FE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBY1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.BY1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBY1Null()
            Me(Me.tableFAMISIndividualsInformation.BY1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFFNull()
            Me(Me.tableFAMISIndividualsInformation.FFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBZNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.BZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBZNull()
            Me(Me.tableFAMISIndividualsInformation.BZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFGNull()
            Me(Me.tableFAMISIndividualsInformation.FGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFINull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFINull()
            Me(Me.tableFAMISIndividualsInformation.FIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFJNull()
            Me(Me.tableFAMISIndividualsInformation.FJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFKNull()
            Me(Me.tableFAMISIndividualsInformation.FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFLNull()
            Me(Me.tableFAMISIndividualsInformation.FLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFL2Null() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FL2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFL2Null()
            Me(Me.tableFAMISIndividualsInformation.FL2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFM1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FM1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFM1Null()
            Me(Me.tableFAMISIndividualsInformation.FM1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFM2Null() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FM2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFM2Null()
            Me(Me.tableFAMISIndividualsInformation.FM2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNNull()
            Me(Me.tableFAMISIndividualsInformation.FNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFPNull()
            Me(Me.tableFAMISIndividualsInformation.FPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGANull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.GAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGANull()
            Me(Me.tableFAMISIndividualsInformation.GAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.GBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGBNull()
            Me(Me.tableFAMISIndividualsInformation.GBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.GCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGCNull()
            Me(Me.tableFAMISIndividualsInformation.GCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.GDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGDNull()
            Me(Me.tableFAMISIndividualsInformation.GDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGENull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.GEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGENull()
            Me(Me.tableFAMISIndividualsInformation.GEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.GFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGFNull()
            Me(Me.tableFAMISIndividualsInformation.GFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.GGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGGNull()
            Me(Me.tableFAMISIndividualsInformation.GGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.GHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGHNull()
            Me(Me.tableFAMISIndividualsInformation.GHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGINull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.GIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGINull()
            Me(Me.tableFAMISIndividualsInformation.GIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.GJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGJNull()
            Me(Me.tableFAMISIndividualsInformation.GJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.GKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGKNull()
            Me(Me.tableFAMISIndividualsInformation.GKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.GLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGLNull()
            Me(Me.tableFAMISIndividualsInformation.GLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFHNull()
            Me(Me.tableFAMISIndividualsInformation.FHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFONull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.FOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFONull()
            Me(Me.tableFAMISIndividualsInformation.FOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZANull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.ZAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZANull()
            Me(Me.tableFAMISIndividualsInformation.ZAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISIndividualsInformation.ZFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZFNull()
            Me(Me.tableFAMISIndividualsInformation.ZFColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FAMISMedicaidInformationRow
        Inherits Global.System.Data.DataRow
        
        Private tableFAMISMedicaidInformation As FAMISMedicaidInformationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFAMISMedicaidInformation = CType(Me.Table,FAMISMedicaidInformationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HD' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HE' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HF' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HG' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HH' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HI' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HJ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HJ' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HK' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HL' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HM' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HN' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HO' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HP' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HQ' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HR() As String
            Get
                Return CType(Me(Me.tableFAMISMedicaidInformation.HRColumn),String)
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HS' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HT() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HT' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HB' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.HCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HC' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.HCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WL' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WA' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WB' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WE' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WH' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WI' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WK' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WM' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WN' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WO' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WP' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WQ' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WR' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WS' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WT() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WT' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WU() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WU' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WV() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WV' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WCColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WC' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WD() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WD' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WF() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WFColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WF' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WG() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.WGColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WG' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.WGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.XQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XQ' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.XQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.XOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XO' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.XOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.XRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XR' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.XRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.XSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XS' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.XSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XT() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.XTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XT' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.XTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XV() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.XVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XV' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.XVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XU() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISMedicaidInformation.XUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XU' in table 'FAMISMedicaidInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISMedicaidInformation.XUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableFAMISMedicaidInformation.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHDNull()
            Me(Me.tableFAMISMedicaidInformation.HDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHENull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHENull()
            Me(Me.tableFAMISMedicaidInformation.HEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHFNull()
            Me(Me.tableFAMISMedicaidInformation.HFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHGNull()
            Me(Me.tableFAMISMedicaidInformation.HGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHHNull()
            Me(Me.tableFAMISMedicaidInformation.HHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHINull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHINull()
            Me(Me.tableFAMISMedicaidInformation.HIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHJNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHJNull()
            Me(Me.tableFAMISMedicaidInformation.HJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHKNull()
            Me(Me.tableFAMISMedicaidInformation.HKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHLNull()
            Me(Me.tableFAMISMedicaidInformation.HLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHMNull()
            Me(Me.tableFAMISMedicaidInformation.HMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHNNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHNNull()
            Me(Me.tableFAMISMedicaidInformation.HNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHONull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHONull()
            Me(Me.tableFAMISMedicaidInformation.HOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHPNull()
            Me(Me.tableFAMISMedicaidInformation.HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHQNull()
            Me(Me.tableFAMISMedicaidInformation.HQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHSNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHSNull()
            Me(Me.tableFAMISMedicaidInformation.HSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHTNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHTNull()
            Me(Me.tableFAMISMedicaidInformation.HTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHBNull()
            Me(Me.tableFAMISMedicaidInformation.HBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.HCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHCNull()
            Me(Me.tableFAMISMedicaidInformation.HCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWLNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWLNull()
            Me(Me.tableFAMISMedicaidInformation.WLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWANull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWANull()
            Me(Me.tableFAMISMedicaidInformation.WAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWBNull()
            Me(Me.tableFAMISMedicaidInformation.WBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWENull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWENull()
            Me(Me.tableFAMISMedicaidInformation.WEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWHNull()
            Me(Me.tableFAMISMedicaidInformation.WHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWINull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWINull()
            Me(Me.tableFAMISMedicaidInformation.WIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWKNull()
            Me(Me.tableFAMISMedicaidInformation.WKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWMNull()
            Me(Me.tableFAMISMedicaidInformation.WMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWNNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWNNull()
            Me(Me.tableFAMISMedicaidInformation.WNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWONull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWONull()
            Me(Me.tableFAMISMedicaidInformation.WOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWPNull()
            Me(Me.tableFAMISMedicaidInformation.WPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWQNull()
            Me(Me.tableFAMISMedicaidInformation.WQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWRNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWRNull()
            Me(Me.tableFAMISMedicaidInformation.WRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWSNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWSNull()
            Me(Me.tableFAMISMedicaidInformation.WSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWTNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWTNull()
            Me(Me.tableFAMISMedicaidInformation.WTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWUNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWUNull()
            Me(Me.tableFAMISMedicaidInformation.WUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWVNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWVNull()
            Me(Me.tableFAMISMedicaidInformation.WVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWCNull()
            Me(Me.tableFAMISMedicaidInformation.WCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWDNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWDNull()
            Me(Me.tableFAMISMedicaidInformation.WDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWFNull()
            Me(Me.tableFAMISMedicaidInformation.WFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.WGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWGNull()
            Me(Me.tableFAMISMedicaidInformation.WGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.XQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXQNull()
            Me(Me.tableFAMISMedicaidInformation.XQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXONull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.XOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXONull()
            Me(Me.tableFAMISMedicaidInformation.XOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXRNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.XRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXRNull()
            Me(Me.tableFAMISMedicaidInformation.XRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXSNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.XSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXSNull()
            Me(Me.tableFAMISMedicaidInformation.XSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXTNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.XTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXTNull()
            Me(Me.tableFAMISMedicaidInformation.XTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXVNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.XVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXVNull()
            Me(Me.tableFAMISMedicaidInformation.XVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXUNull() As Boolean
            Return Me.IsNull(Me.tableFAMISMedicaidInformation.XUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXUNull()
            Me(Me.tableFAMISMedicaidInformation.XUColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FAMISVRPInformationRow
        Inherits Global.System.Data.DataRow
        
        Private tableFAMISVRPInformation As FAMISVRPInformationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFAMISVRPInformation = CType(Me.Table,FAMISVRPInformationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISVRPInformation.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'FAMISVRPInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISVRPInformation.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VRPNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISVRPInformation.VRPNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VRPNumber' in table 'FAMISVRPInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISVRPInformation.VRPNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISVRPInformation.VAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VA' in table 'FAMISVRPInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISVRPInformation.VAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISVRPInformation.VCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VC' in table 'FAMISVRPInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISVRPInformation.VCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISVRPInformation.VEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VE' in table 'FAMISVRPInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISVRPInformation.VEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISVRPInformation.VGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VG' in table 'FAMISVRPInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISVRPInformation.VGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISVRPInformation.VIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VI' in table 'FAMISVRPInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISVRPInformation.VIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISVRPInformation.VQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VQ' in table 'FAMISVRPInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISVRPInformation.VQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISVRPInformation.VKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VK' in table 'FAMISVRPInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISVRPInformation.VKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VM() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISVRPInformation.VMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VM' in table 'FAMISVRPInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISVRPInformation.VMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISVRPInformation.VOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VO' in table 'FAMISVRPInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISVRPInformation.VOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableFAMISVRPInformation.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableFAMISVRPInformation.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVRPNumberNull() As Boolean
            Return Me.IsNull(Me.tableFAMISVRPInformation.VRPNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVRPNumberNull()
            Me(Me.tableFAMISVRPInformation.VRPNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVANull() As Boolean
            Return Me.IsNull(Me.tableFAMISVRPInformation.VAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVANull()
            Me(Me.tableFAMISVRPInformation.VAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVCNull() As Boolean
            Return Me.IsNull(Me.tableFAMISVRPInformation.VCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVCNull()
            Me(Me.tableFAMISVRPInformation.VCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVENull() As Boolean
            Return Me.IsNull(Me.tableFAMISVRPInformation.VEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVENull()
            Me(Me.tableFAMISVRPInformation.VEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISVRPInformation.VGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVGNull()
            Me(Me.tableFAMISVRPInformation.VGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVINull() As Boolean
            Return Me.IsNull(Me.tableFAMISVRPInformation.VIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVINull()
            Me(Me.tableFAMISVRPInformation.VIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISVRPInformation.VQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVQNull()
            Me(Me.tableFAMISVRPInformation.VQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVKNull() As Boolean
            Return Me.IsNull(Me.tableFAMISVRPInformation.VKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVKNull()
            Me(Me.tableFAMISVRPInformation.VKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVMNull() As Boolean
            Return Me.IsNull(Me.tableFAMISVRPInformation.VMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVMNull()
            Me(Me.tableFAMISVRPInformation.VMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVONull() As Boolean
            Return Me.IsNull(Me.tableFAMISVRPInformation.VOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVONull()
            Me(Me.tableFAMISVRPInformation.VOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IMPSInformationRow
        Inherits Global.System.Data.DataRow
        
        Private tableIMPSInformation As IMPSInformationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIMPSInformation = CType(Me.Table,IMPSInformationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMPSInformation.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'IMPSInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMPSInformation.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BatchNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMPSInformation.BatchNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BatchNumber' in table 'IMPSInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMPSInformation.BatchNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Dropped() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMPSInformation.DroppedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dropped' in table 'IMPSInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMPSInformation.DroppedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableIMPSInformation.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableIMPSInformation.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBatchNumberNull() As Boolean
            Return Me.IsNull(Me.tableIMPSInformation.BatchNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBatchNumberNull()
            Me(Me.tableIMPSInformation.BatchNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDroppedNull() As Boolean
            Return Me.IsNull(Me.tableIMPSInformation.DroppedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDroppedNull()
            Me(Me.tableIMPSInformation.DroppedColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FAMISAppendedInformationRow
        Inherits Global.System.Data.DataRow
        
        Private tableFAMISAppendedInformation As FAMISAppendedInformationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFAMISAppendedInformation = CType(Me.Table,FAMISAppendedInformationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.AQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AQ' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.AQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.CHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CH' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.CHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DG() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.DGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DG' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.DGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.DHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DH' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.DHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.DIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.DIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MU() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.MUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MU' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.MUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.OPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OP' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.OPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OQ1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.OQ1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OQ1' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.OQ1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OQ2() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.OQ2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OQ2' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.OQ2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _OR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.ORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OR' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.ORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.MSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MS' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.MSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MT() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.MTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MT' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.MTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.NQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NQ' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.NQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.NRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NR' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.NRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.NSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NS' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.NSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NT() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.NTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NT' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.NTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NU() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.NUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NU' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.NUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NV() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.NVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NV' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.NVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NW() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.NWColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NW' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.NWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VB() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.VBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VB' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.VBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.VFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VF' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.VFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VH() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.VHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VH' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.VHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.WRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WR' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.WRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.XOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XO' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.XOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XP() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.XPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XP' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.XPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.XQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XQ' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.XQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.XRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XR' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.XRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XS() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.XSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XS' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.XSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XT() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.XTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XT' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.XTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XU() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.XUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XU' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.XUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XV() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.XVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XV' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.XVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property B1() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.B1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'B1' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.B1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property B2() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.B2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'B2' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.B2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.EOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EO' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.EOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.FQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FQ' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.FQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HU() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.HUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HU' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.HUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZF() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.ZFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZF' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.ZFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property B3() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.B3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'B3' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.B3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property B4() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.B4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'B4' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.B4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.FRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FR' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.FRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HV() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.HVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HV' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.HVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.ZAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZA' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.ZAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NT1() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.NT1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NT1' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.NT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XT1() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.XT1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XT1' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.XT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HU1() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.HU1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HU1' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.HU1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HV1() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.HV1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HV1' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.HV1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property B5() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.B5Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'B5' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.B5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property B6() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFAMISAppendedInformation.B6Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'B6' in table 'FAMISAppendedInformation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMISAppendedInformation.B6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableFAMISAppendedInformation.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.AQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAQNull()
            Me(Me.tableFAMISAppendedInformation.AQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.CHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHNull()
            Me(Me.tableFAMISAppendedInformation.CHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDGNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.DGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDGNull()
            Me(Me.tableFAMISAppendedInformation.DGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.DHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDHNull()
            Me(Me.tableFAMISAppendedInformation.DHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDINull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.DIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDINull()
            Me(Me.tableFAMISAppendedInformation.DIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMUNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.MUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMUNull()
            Me(Me.tableFAMISAppendedInformation.MUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.OPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOPNull()
            Me(Me.tableFAMISAppendedInformation.OPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOQ1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.OQ1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOQ1Null()
            Me(Me.tableFAMISAppendedInformation.OQ1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOQ2Null() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.OQ2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOQ2Null()
            Me(Me.tableFAMISAppendedInformation.OQ2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_ORNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.ORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_ORNull()
            Me(Me.tableFAMISAppendedInformation.ORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMSNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.MSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMSNull()
            Me(Me.tableFAMISAppendedInformation.MSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMTNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.MTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMTNull()
            Me(Me.tableFAMISAppendedInformation.MTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.NQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNQNull()
            Me(Me.tableFAMISAppendedInformation.NQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNRNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.NRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNRNull()
            Me(Me.tableFAMISAppendedInformation.NRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNSNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.NSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNSNull()
            Me(Me.tableFAMISAppendedInformation.NSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNTNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.NTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNTNull()
            Me(Me.tableFAMISAppendedInformation.NTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.NUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUNull()
            Me(Me.tableFAMISAppendedInformation.NUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNVNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.NVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNVNull()
            Me(Me.tableFAMISAppendedInformation.NVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNWNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.NWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNWNull()
            Me(Me.tableFAMISAppendedInformation.NWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVBNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.VBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVBNull()
            Me(Me.tableFAMISAppendedInformation.VBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.VFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVFNull()
            Me(Me.tableFAMISAppendedInformation.VFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVHNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.VHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVHNull()
            Me(Me.tableFAMISAppendedInformation.VHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWRNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.WRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWRNull()
            Me(Me.tableFAMISAppendedInformation.WRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXONull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.XOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXONull()
            Me(Me.tableFAMISAppendedInformation.XOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXPNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.XPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXPNull()
            Me(Me.tableFAMISAppendedInformation.XPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.XQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXQNull()
            Me(Me.tableFAMISAppendedInformation.XQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXRNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.XRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXRNull()
            Me(Me.tableFAMISAppendedInformation.XRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXSNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.XSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXSNull()
            Me(Me.tableFAMISAppendedInformation.XSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXTNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.XTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXTNull()
            Me(Me.tableFAMISAppendedInformation.XTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXUNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.XUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXUNull()
            Me(Me.tableFAMISAppendedInformation.XUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXVNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.XVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXVNull()
            Me(Me.tableFAMISAppendedInformation.XVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsB1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.B1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetB1Null()
            Me(Me.tableFAMISAppendedInformation.B1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsB2Null() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.B2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetB2Null()
            Me(Me.tableFAMISAppendedInformation.B2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEONull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.EOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEONull()
            Me(Me.tableFAMISAppendedInformation.EOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFQNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.FQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFQNull()
            Me(Me.tableFAMISAppendedInformation.FQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHUNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.HUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHUNull()
            Me(Me.tableFAMISAppendedInformation.HUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZFNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.ZFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZFNull()
            Me(Me.tableFAMISAppendedInformation.ZFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsB3Null() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.B3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetB3Null()
            Me(Me.tableFAMISAppendedInformation.B3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsB4Null() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.B4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetB4Null()
            Me(Me.tableFAMISAppendedInformation.B4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFRNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.FRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFRNull()
            Me(Me.tableFAMISAppendedInformation.FRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHVNull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.HVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHVNull()
            Me(Me.tableFAMISAppendedInformation.HVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZANull() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.ZAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZANull()
            Me(Me.tableFAMISAppendedInformation.ZAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNT1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.NT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNT1Null()
            Me(Me.tableFAMISAppendedInformation.NT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXT1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.XT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXT1Null()
            Me(Me.tableFAMISAppendedInformation.XT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHU1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.HU1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHU1Null()
            Me(Me.tableFAMISAppendedInformation.HU1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHV1Null() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.HV1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHV1Null()
            Me(Me.tableFAMISAppendedInformation.HV1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsB5Null() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.B5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetB5Null()
            Me(Me.tableFAMISAppendedInformation.B5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsB6Null() As Boolean
            Return Me.IsNull(Me.tableFAMISAppendedInformation.B6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetB6Null()
            Me(Me.tableFAMISAppendedInformation.B6Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FAMISAFDCInformationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FAMISAFDCInformationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FAMISAFDCInformationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FAMISAFDCInformationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FAMISApplicantInformationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FAMISApplicantInformationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FAMISApplicantInformationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FAMISApplicantInformationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FAMISCaseChildRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FAMISCaseChildRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FAMISCaseChildRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FAMISCaseChildRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FAMISCaseInformationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FAMISCaseInformationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FAMISCaseInformationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FAMISCaseInformationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FAMISFoodStampInformationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FAMISFoodStampInformationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FAMISFoodStampInformationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FAMISFoodStampInformationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FAMISIandAInformationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FAMISIandAInformationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FAMISIandAInformationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FAMISIandAInformationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FAMISIncomeInformationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FAMISIncomeInformationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FAMISIncomeInformationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FAMISIncomeInformationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FAMISIndividualsInformationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FAMISIndividualsInformationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FAMISIndividualsInformationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FAMISIndividualsInformationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FAMISMedicaidInformationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FAMISMedicaidInformationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FAMISMedicaidInformationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FAMISMedicaidInformationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FAMISVRPInformationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FAMISVRPInformationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FAMISVRPInformationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FAMISVRPInformationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class IMPSInformationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IMPSInformationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As IMPSInformationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As IMPSInformationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FAMISAppendedInformationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FAMISAppendedInformationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FAMISAppendedInformationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FAMISAppendedInformationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace PhoenixDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FAMISAFDCInformationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FAMISAFDCInformation"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("HA", "HA")
            tableMapping.ColumnMappings.Add("IA", "IA")
            tableMapping.ColumnMappings.Add("IB", "IB")
            tableMapping.ColumnMappings.Add("IC", "IC")
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("IE", "IE")
            tableMapping.ColumnMappings.Add("IF", "IF1")
            tableMapping.ColumnMappings.Add("IG", "IG")
            tableMapping.ColumnMappings.Add("IH", "IH")
            tableMapping.ColumnMappings.Add("II", "II")
            tableMapping.ColumnMappings.Add("IJ", "IJ")
            tableMapping.ColumnMappings.Add("IL", "IL")
            tableMapping.ColumnMappings.Add("IK", "IK")
            tableMapping.ColumnMappings.Add("IP", "IP")
            tableMapping.ColumnMappings.Add("OJ", "OJ")
            tableMapping.ColumnMappings.Add("IM", "IM")
            tableMapping.ColumnMappings.Add("IN", "IN1")
            tableMapping.ColumnMappings.Add("IO", "IO")
            tableMapping.ColumnMappings.Add("IF1", "IF1")
            tableMapping.ColumnMappings.Add("IN1", "IN1")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FAMISAFDCInformation] ([CaseNumber], [HA], [IA], [IB], [IC], [ID], ["& _ 
                "IE], [IF1], [IG], [IH], [II], [IJ], [IL], [IK], [IP], [OJ], [IM], [IN1], [IO]) V"& _ 
                "ALUES (@CaseNumber, @HA, @IA, @IB, @IC, @ID, @IE, @IF1, @IG, @IH, @II, @IJ, @IL,"& _ 
                " @IK, @IP, @OJ, @IM, @IN1, @IO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IF1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IF1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@II", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "II", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IN1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IN1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Phoenix.My.MySettings.Default.phxSQLConn
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, HA, IA, IB, IC, ID, IE, IF1, IG, IH, II, IJ, IL, IK, IP, OJ, I"& _ 
                "M, IN1, IO FROM FAMISAFDCInformation WHERE (CaseNumber = @casenumber)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@casenumber", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PhoenixDataSet.FAMISAFDCInformationDataTable, ByVal casenumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (casenumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(casenumber,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal casenumber As String) As PhoenixDataSet.FAMISAFDCInformationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (casenumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(casenumber,String)
            End If
            Dim dataTable As PhoenixDataSet.FAMISAFDCInformationDataTable = New PhoenixDataSet.FAMISAFDCInformationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PhoenixDataSet.FAMISAFDCInformationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PhoenixDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "FAMISAFDCInformation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CaseNumber As String,  _
                    ByVal HA As String,  _
                    ByVal IA As String,  _
                    ByVal IB As String,  _
                    ByVal IC As String,  _
                    ByVal ID As String,  _
                    ByVal IE As String,  _
                    ByVal IF1 As String,  _
                    ByVal IG As String,  _
                    ByVal IH As String,  _
                    ByVal II As String,  _
                    ByVal IJ As String,  _
                    ByVal IL As String,  _
                    ByVal IK As String,  _
                    ByVal IP As String,  _
                    ByVal OJ As String,  _
                    ByVal IM As String,  _
                    ByVal IN1 As String,  _
                    ByVal IO As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (HA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(HA,String)
            End If
            If (IA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(IA,String)
            End If
            If (IB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(IB,String)
            End If
            If (IC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(IC,String)
            End If
            If (ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ID,String)
            End If
            If (IE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(IE,String)
            End If
            If (IF1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(IF1,String)
            End If
            If (IG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(IG,String)
            End If
            If (IH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(IH,String)
            End If
            If (II Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(II,String)
            End If
            If (IJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(IJ,String)
            End If
            If (IL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(IL,String)
            End If
            If (IK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(IK,String)
            End If
            If (IP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(IP,String)
            End If
            If (OJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(OJ,String)
            End If
            If (IM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(IM,String)
            End If
            If (IN1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(IN1,String)
            End If
            If (IO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(IO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FAMISApplicantInformationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FAMISApplicantInformation"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("BA", "BA")
            tableMapping.ColumnMappings.Add("BB", "BB")
            tableMapping.ColumnMappings.Add("BC", "BC")
            tableMapping.ColumnMappings.Add("BD", "BD")
            tableMapping.ColumnMappings.Add("BE", "BE")
            tableMapping.ColumnMappings.Add("BF", "BF")
            tableMapping.ColumnMappings.Add("BG", "BG")
            tableMapping.ColumnMappings.Add("BH", "BH")
            tableMapping.ColumnMappings.Add("BI", "BI")
            tableMapping.ColumnMappings.Add("BJ", "BJ")
            tableMapping.ColumnMappings.Add("BK", "BK")
            tableMapping.ColumnMappings.Add("BL", "BL")
            tableMapping.ColumnMappings.Add("BM", "BM")
            tableMapping.ColumnMappings.Add("BN", "BN")
            tableMapping.ColumnMappings.Add("BO", "BO")
            tableMapping.ColumnMappings.Add("BP", "BP")
            tableMapping.ColumnMappings.Add("BQ", "BQ")
            tableMapping.ColumnMappings.Add("CA1", "CA")
            tableMapping.ColumnMappings.Add("CC", "CC")
            tableMapping.ColumnMappings.Add("CD1", "CD1")
            tableMapping.ColumnMappings.Add("CD2", "CD2")
            tableMapping.ColumnMappings.Add("CE", "CE")
            tableMapping.ColumnMappings.Add("CF", "CF")
            tableMapping.ColumnMappings.Add("CG", "CG")
            tableMapping.ColumnMappings.Add("DB", "DB")
            tableMapping.ColumnMappings.Add("DC", "DC")
            tableMapping.ColumnMappings.Add("DD1", "DD1")
            tableMapping.ColumnMappings.Add("DD2", "DD2")
            tableMapping.ColumnMappings.Add("DE", "DE")
            tableMapping.ColumnMappings.Add("DF", "DF")
            tableMapping.ColumnMappings.Add("EA", "EA")
            tableMapping.ColumnMappings.Add("EB", "EB")
            tableMapping.ColumnMappings.Add("EC", "EC")
            tableMapping.ColumnMappings.Add("ED", "ED")
            tableMapping.ColumnMappings.Add("ED1", "ED1")
            tableMapping.ColumnMappings.Add("ED2", "ED2")
            tableMapping.ColumnMappings.Add("EE", "EE")
            tableMapping.ColumnMappings.Add("EF", "EF")
            tableMapping.ColumnMappings.Add("EG", "EG")
            tableMapping.ColumnMappings.Add("EH", "EH")
            tableMapping.ColumnMappings.Add("EJ", "EJ")
            tableMapping.ColumnMappings.Add("DA1", "DA1")
            tableMapping.ColumnMappings.Add("DA2", "DA2")
            tableMapping.ColumnMappings.Add("DA3", "DA3")
            tableMapping.ColumnMappings.Add("NN", "NN")
            tableMapping.ColumnMappings.Add("BR", "BR")
            tableMapping.ColumnMappings.Add("OM", "OM")
            tableMapping.ColumnMappings.Add("EI", "EI")
            tableMapping.ColumnMappings.Add("EK", "EK")
            tableMapping.ColumnMappings.Add("EL", "EL")
            tableMapping.ColumnMappings.Add("EM", "EM")
            tableMapping.ColumnMappings.Add("EN", "EN")
            tableMapping.ColumnMappings.Add("XA", "XA")
            tableMapping.ColumnMappings.Add("XB", "XB")
            tableMapping.ColumnMappings.Add("XC", "XC")
            tableMapping.ColumnMappings.Add("XD", "XD")
            tableMapping.ColumnMappings.Add("XE", "XE")
            tableMapping.ColumnMappings.Add("XF", "XF")
            tableMapping.ColumnMappings.Add("XG", "XG")
            tableMapping.ColumnMappings.Add("XH", "XH")
            tableMapping.ColumnMappings.Add("XI", "XI")
            tableMapping.ColumnMappings.Add("XJ", "XJ")
            tableMapping.ColumnMappings.Add("XK", "XK")
            tableMapping.ColumnMappings.Add("XL", "XL")
            tableMapping.ColumnMappings.Add("XM", "XM")
            tableMapping.ColumnMappings.Add("XN", "XN")
            tableMapping.ColumnMappings.Add("JV", "JV")
            tableMapping.ColumnMappings.Add("KT", "KT")
            tableMapping.ColumnMappings.Add("CA", "CA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FAMISApplicantInformation] ([CaseNumber], [BA], [BB], [BC], [BD], [B"& _ 
                "E], [BF], [BG], [BH], [BI], [BJ], [BK], [BL], [BM], [BN], [BO], [BP], [BQ], [CA]"& _ 
                ", [CC], [CD1], [CD2], [CE], [CF], [CG], [DB], [DC], [DD1], [DD2], [DE], [DF], [E"& _ 
                "A], [EB], [EC], [ED], [ED1], [ED2], [EE], [EF], [EG], [EH], [EJ], [DA1], [DA2], "& _ 
                "[DA3], [NN], [BR], [OM], [EI], [EK], [EL], [EM], [EN], [XA], [XB], [XC], [XD], ["& _ 
                "XE], [XF], [XG], [XH], [XI], [XJ], [XK], [XL], [XM], [XN], [JV], [KT]) VALUES (@"& _ 
                "CaseNumber, @BA, @BB, @BC, @BD, @BE, @BF, @BG, @BH, @BI, @BJ, @BK, @BL, @BM, @BN"& _ 
                ", @BO, @BP, @BQ, @CA, @CC, @CD1, @CD2, @CE, @CF, @CG, @DB, @DC, @DD1, @DD2, @DE,"& _ 
                " @DF, @EA, @EB, @EC, @ED, @ED1, @ED2, @EE, @EF, @EG, @EH, @EJ, @DA1, @DA2, @DA3,"& _ 
                " @NN, @BR, @OM, @EI, @EK, @EL, @EM, @EN, @XA, @XB, @XC, @XD, @XE, @XF, @XG, @XH,"& _ 
                " @XI, @XJ, @XK, @XL, @XM, @XN, @JV, @KT)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CD1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CD1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CD2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CD2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DD1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DD1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DD2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DD2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ED", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ED1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ED1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ED2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ED2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DA1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DA1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DA2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DA2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DA3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DA3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JV", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Phoenix.My.MySettings.Default.phxSQLConn
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, BA, BB, BC, BD, BE, BF, BG, BH, BI, BJ, BK, BL, BM, BN, BO, BP"& _ 
                ", BQ, CA, CC, CD1, CD2, CE, CF, CG, DB, DC, DD1, DD2, DE, DF, EA, EB, EC, ED, ED"& _ 
                "1, ED2, EE, EF, EG, EH, EJ, DA1, DA2, DA3, NN, BR, OM, EI, EK, EL, EM, EN, XA, X"& _ 
                "B, XC, XD, XE, XF, XG, XH, XI, XJ, XK, XL, XM, XN, JV, KT FROM FAMISApplicantInf"& _ 
                "ormation WHERE (CaseNumber = @CaseNumber)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PhoenixDataSet.FAMISApplicantInformationDataTable, ByVal CaseNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal CaseNumber As String) As PhoenixDataSet.FAMISApplicantInformationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            Dim dataTable As PhoenixDataSet.FAMISApplicantInformationDataTable = New PhoenixDataSet.FAMISApplicantInformationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PhoenixDataSet.FAMISApplicantInformationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PhoenixDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "FAMISApplicantInformation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CaseNumber As String,  _
                    ByVal BA As String,  _
                    ByVal BB As String,  _
                    ByVal BC As String,  _
                    ByVal BD As String,  _
                    ByVal BE As String,  _
                    ByVal BF As String,  _
                    ByVal BG As String,  _
                    ByVal BH As String,  _
                    ByVal BI As String,  _
                    ByVal BJ As String,  _
                    ByVal BK As String,  _
                    ByVal BL As String,  _
                    ByVal BM As String,  _
                    ByVal BN As String,  _
                    ByVal BO As String,  _
                    ByVal BP As String,  _
                    ByVal BQ As String,  _
                    ByVal CA As String,  _
                    ByVal CC As String,  _
                    ByVal CD1 As String,  _
                    ByVal CD2 As String,  _
                    ByVal CE As String,  _
                    ByVal CF As String,  _
                    ByVal CG As String,  _
                    ByVal DB As String,  _
                    ByVal DC As String,  _
                    ByVal DD1 As String,  _
                    ByVal DD2 As String,  _
                    ByVal DE As String,  _
                    ByVal DF As String,  _
                    ByVal EA As String,  _
                    ByVal EB As String,  _
                    ByVal EC As String,  _
                    ByVal ED As String,  _
                    ByVal ED1 As String,  _
                    ByVal ED2 As String,  _
                    ByVal EE As String,  _
                    ByVal EF As String,  _
                    ByVal EG As String,  _
                    ByVal EH As String,  _
                    ByVal EJ As String,  _
                    ByVal DA1 As String,  _
                    ByVal DA2 As String,  _
                    ByVal DA3 As String,  _
                    ByVal NN As String,  _
                    ByVal BR As String,  _
                    ByVal OM As String,  _
                    ByVal EI As String,  _
                    ByVal EK As String,  _
                    ByVal EL As String,  _
                    ByVal EM As String,  _
                    ByVal EN As String,  _
                    ByVal XA As String,  _
                    ByVal XB As String,  _
                    ByVal XC As String,  _
                    ByVal XD As String,  _
                    ByVal XE As String,  _
                    ByVal XF As String,  _
                    ByVal XG As String,  _
                    ByVal XH As String,  _
                    ByVal XI As String,  _
                    ByVal XJ As String,  _
                    ByVal XK As String,  _
                    ByVal XL As String,  _
                    ByVal XM As String,  _
                    ByVal XN As String,  _
                    ByVal JV As String,  _
                    ByVal KT As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (BA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(BA,String)
            End If
            If (BB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(BB,String)
            End If
            If (BC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(BC,String)
            End If
            If (BD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(BD,String)
            End If
            If (BE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(BE,String)
            End If
            If (BF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(BF,String)
            End If
            If (BG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(BG,String)
            End If
            If (BH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(BH,String)
            End If
            If (BI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(BI,String)
            End If
            If (BJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(BJ,String)
            End If
            If (BK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(BK,String)
            End If
            If (BL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(BL,String)
            End If
            If (BM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(BM,String)
            End If
            If (BN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(BN,String)
            End If
            If (BO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(BO,String)
            End If
            If (BP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(BP,String)
            End If
            If (BQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(BQ,String)
            End If
            If (CA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(CA,String)
            End If
            If (CC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CC,String)
            End If
            If (CD1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(CD1,String)
            End If
            If (CD2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CD2,String)
            End If
            If (CE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(CE,String)
            End If
            If (CF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(CF,String)
            End If
            If (CG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(CG,String)
            End If
            If (DB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(DB,String)
            End If
            If (DC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(DC,String)
            End If
            If (DD1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(DD1,String)
            End If
            If (DD2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(DD2,String)
            End If
            If (DE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(DE,String)
            End If
            If (DF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(DF,String)
            End If
            If (EA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(EA,String)
            End If
            If (EB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(EB,String)
            End If
            If (EC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(EC,String)
            End If
            If (ED Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(ED,String)
            End If
            If (ED1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(ED1,String)
            End If
            If (ED2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(ED2,String)
            End If
            If (EE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(EE,String)
            End If
            If (EF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(EF,String)
            End If
            If (EG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(EG,String)
            End If
            If (EH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(EH,String)
            End If
            If (EJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(EJ,String)
            End If
            If (DA1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(DA1,String)
            End If
            If (DA2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(DA2,String)
            End If
            If (DA3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(DA3,String)
            End If
            If (NN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(NN,String)
            End If
            If (BR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(BR,String)
            End If
            If (OM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(OM,String)
            End If
            If (EI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(EI,String)
            End If
            If (EK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(EK,String)
            End If
            If (EL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(EL,String)
            End If
            If (EM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(EM,String)
            End If
            If (EN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(EN,String)
            End If
            If (XA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(XA,String)
            End If
            If (XB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(XB,String)
            End If
            If (XC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(XC,String)
            End If
            If (XD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(XD,String)
            End If
            If (XE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(XE,String)
            End If
            If (XF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(XF,String)
            End If
            If (XG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(XG,String)
            End If
            If (XH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(XH,String)
            End If
            If (XI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(XI,String)
            End If
            If (XJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(XJ,String)
            End If
            If (XK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(XK,String)
            End If
            If (XL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(XL,String)
            End If
            If (XM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(XM,String)
            End If
            If (XN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(XN,String)
            End If
            If (JV Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(JV,String)
            End If
            If (KT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(KT,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FAMISCaseChildTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FAMISCaseChild"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("QA", "QA")
            tableMapping.ColumnMappings.Add("QB", "QB")
            tableMapping.ColumnMappings.Add("QC", "QC")
            tableMapping.ColumnMappings.Add("QD", "QD")
            tableMapping.ColumnMappings.Add("QF", "QF")
            tableMapping.ColumnMappings.Add("QG", "QG")
            tableMapping.ColumnMappings.Add("QH", "QH")
            tableMapping.ColumnMappings.Add("QJ", "QJ")
            tableMapping.ColumnMappings.Add("QK", "QK")
            tableMapping.ColumnMappings.Add("QL", "QL")
            tableMapping.ColumnMappings.Add("QM", "QM")
            tableMapping.ColumnMappings.Add("QN", "QN")
            tableMapping.ColumnMappings.Add("QO", "QO")
            tableMapping.ColumnMappings.Add("RA", "RA")
            tableMapping.ColumnMappings.Add("RB", "RB")
            tableMapping.ColumnMappings.Add("RC", "RC")
            tableMapping.ColumnMappings.Add("RD", "RD")
            tableMapping.ColumnMappings.Add("RE", "RE")
            tableMapping.ColumnMappings.Add("RF", "RF")
            tableMapping.ColumnMappings.Add("RG", "RG")
            tableMapping.ColumnMappings.Add("RH", "RH")
            tableMapping.ColumnMappings.Add("RH2", "RH2")
            tableMapping.ColumnMappings.Add("RI", "RI")
            tableMapping.ColumnMappings.Add("RJ1", "RJ1")
            tableMapping.ColumnMappings.Add("RJ2", "RJ2")
            tableMapping.ColumnMappings.Add("RK", "RK")
            tableMapping.ColumnMappings.Add("RL", "RL")
            tableMapping.ColumnMappings.Add("RM", "RM")
            tableMapping.ColumnMappings.Add("RP", "RP")
            tableMapping.ColumnMappings.Add("RR", "RR")
            tableMapping.ColumnMappings.Add("SN", "SN")
            tableMapping.ColumnMappings.Add("SQ", "SQ")
            tableMapping.ColumnMappings.Add("SR", "SR")
            tableMapping.ColumnMappings.Add("TA", "TA")
            tableMapping.ColumnMappings.Add("TB", "TB")
            tableMapping.ColumnMappings.Add("TI1", "TI")
            tableMapping.ColumnMappings.Add("TJ", "TJ")
            tableMapping.ColumnMappings.Add("TF", "TF")
            tableMapping.ColumnMappings.Add("TK", "TK")
            tableMapping.ColumnMappings.Add("TD", "TD")
            tableMapping.ColumnMappings.Add("UB", "UB")
            tableMapping.ColumnMappings.Add("RN", "RN")
            tableMapping.ColumnMappings.Add("RO", "RO")
            tableMapping.ColumnMappings.Add("RQ", "RQ")
            tableMapping.ColumnMappings.Add("SA", "SA")
            tableMapping.ColumnMappings.Add("SB", "SB")
            tableMapping.ColumnMappings.Add("SC", "SC")
            tableMapping.ColumnMappings.Add("SD", "SD")
            tableMapping.ColumnMappings.Add("SE", "SE")
            tableMapping.ColumnMappings.Add("SF", "SF")
            tableMapping.ColumnMappings.Add("SG", "SG")
            tableMapping.ColumnMappings.Add("SH", "SH")
            tableMapping.ColumnMappings.Add("SJ", "SJ")
            tableMapping.ColumnMappings.Add("SK", "SK")
            tableMapping.ColumnMappings.Add("SL", "SL")
            tableMapping.ColumnMappings.Add("SM", "SM")
            tableMapping.ColumnMappings.Add("SO", "SO")
            tableMapping.ColumnMappings.Add("SP", "SP")
            tableMapping.ColumnMappings.Add("SI", "SI")
            tableMapping.ColumnMappings.Add("SS", "SS")
            tableMapping.ColumnMappings.Add("TG", "TG")
            tableMapping.ColumnMappings.Add("TH", "TH")
            tableMapping.ColumnMappings.Add("TL", "TL")
            tableMapping.ColumnMappings.Add("TM", "TM")
            tableMapping.ColumnMappings.Add("TO1", "TO1")
            tableMapping.ColumnMappings.Add("TP", "TP")
            tableMapping.ColumnMappings.Add("TQ", "TQ")
            tableMapping.ColumnMappings.Add("TR", "TR")
            tableMapping.ColumnMappings.Add("TS", "TS")
            tableMapping.ColumnMappings.Add("UA", "UA")
            tableMapping.ColumnMappings.Add("UC", "UC")
            tableMapping.ColumnMappings.Add("UD", "UD")
            tableMapping.ColumnMappings.Add("UE", "UE")
            tableMapping.ColumnMappings.Add("UF", "UF")
            tableMapping.ColumnMappings.Add("UG", "UG")
            tableMapping.ColumnMappings.Add("UH", "UH")
            tableMapping.ColumnMappings.Add("UK", "UK")
            tableMapping.ColumnMappings.Add("UL", "UL")
            tableMapping.ColumnMappings.Add("TC", "TC")
            tableMapping.ColumnMappings.Add("TE", "TE")
            tableMapping.ColumnMappings.Add("UI", "UI")
            tableMapping.ColumnMappings.Add("YA", "YA")
            tableMapping.ColumnMappings.Add("QE", "QE")
            tableMapping.ColumnMappings.Add("QI", "QI")
            tableMapping.ColumnMappings.Add("TI", "TI")
            tableMapping.ColumnMappings.Add("TT", "TT")
            tableMapping.ColumnMappings.Add("TU", "TU")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FAMISCaseChild] ([CaseNumber], [QA], [QB], [QC], [QD], [QE], [QF], ["& _ 
                "QG], [QH], [QI], [QJ], [QK], [QL], [QM], [QN], [QO], [RA], [RB], [RC], [RD], [RE"& _ 
                "], [RF], [RG], [RH], [RH2], [RI], [RJ1], [RJ2], [RK], [RL], [RM], [RP], [RR], [S"& _ 
                "N], [SQ], [SR], [TA], [TB], [TI], [TJ], [TF], [TK], [TD], [UB], [RN], [RO], [RQ]"& _ 
                ", [SA], [SB], [SC], [SD], [SE], [SF], [SG], [SH], [SJ], [SK], [SL], [SM], [SO], "& _ 
                "[SP], [SI], [SS], [TG], [TH], [TL], [TM], [TO1], [TP], [TQ], [TR], [TS], [UA], ["& _ 
                "UC], [UD], [UE], [UF], [UG], [UH], [UK], [UL], [TC], [TE], [UI], [YA], [TT], [TU"& _ 
                "]) VALUES (@CaseNumber, @QA, @QB, @QC, @QD, @QE, @QF, @QG, @QH, @QI, @QJ, @QK, @"& _ 
                "QL, @QM, @QN, @QO, @RA, @RB, @RC, @RD, @RE, @RF, @RG, @RH, @RH2, @RI, @RJ1, @RJ2"& _ 
                ", @RK, @RL, @RM, @RP, @RR, @SN, @SQ, @SR, @TA, @TB, @TI, @TJ, @TF, @TK, @TD, @UB"& _ 
                ", @RN, @RO, @RQ, @SA, @SB, @SC, @SD, @SE, @SF, @SG, @SH, @SJ, @SK, @SL, @SM, @SO"& _ 
                ", @SP, @SI, @SS, @TG, @TH, @TL, @TM, @TO1, @TP, @TQ, @TR, @TS, @UA, @UC, @UD, @U"& _ 
                "E, @UF, @UG, @UH, @UK, @UL, @TC, @TE, @UI, @YA, @TT, @TU)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QG", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QK", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RH2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RH2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RJ1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RJ1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RJ2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RJ2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TO1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TO1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TU", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Phoenix.My.MySettings.Default.phxSQLConn
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, QA, QB, QC, QD, QE, QF, QG, QH, QI, QJ, QK, QL, QM, QN, QO, RA"& _ 
                ", RB, RC, RD, RE, RF, RG, RH, RH2, RI, RJ1, RJ2, RK, RL, RM, RP, RR, SN, SQ, SR,"& _ 
                " TA, TB, TI, TJ, TF, TK, TD, UB, RN, RO, RQ, SA, SB, SC, SD, SE, SF, SG, SH, SJ,"& _ 
                " SK, SL, SM, SO, SP, SI, SS, TG, TH, TL, TM, TO1, TP, TQ, TR, TS, UA, UC, UD, UE"& _ 
                ", UF, UG, UH, UK, UL, TC, TE, UI, YA, TT, TU FROM FAMISCaseChild WHERE (CaseNumb"& _ 
                "er = @CaseNumber) AND (QA = @QA)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QA", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "QA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PhoenixDataSet.FAMISCaseChildDataTable, ByVal CaseNumber As String, ByVal QA As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (QA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(QA,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal CaseNumber As String, ByVal QA As String) As PhoenixDataSet.FAMISCaseChildDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (QA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(QA,String)
            End If
            Dim dataTable As PhoenixDataSet.FAMISCaseChildDataTable = New PhoenixDataSet.FAMISCaseChildDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PhoenixDataSet.FAMISCaseChildDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PhoenixDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "FAMISCaseChild")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CaseNumber As String,  _
                    ByVal QA As String,  _
                    ByVal QB As String,  _
                    ByVal QC As String,  _
                    ByVal QD As String,  _
                    ByVal QE As String,  _
                    ByVal QF As String,  _
                    ByVal QG As Global.System.Nullable(Of Date),  _
                    ByVal QH As String,  _
                    ByVal QI As String,  _
                    ByVal QJ As String,  _
                    ByVal QK As Global.System.Nullable(Of Date),  _
                    ByVal QL As String,  _
                    ByVal QM As String,  _
                    ByVal QN As String,  _
                    ByVal QO As String,  _
                    ByVal RA As String,  _
                    ByVal RB As String,  _
                    ByVal RC As String,  _
                    ByVal RD As String,  _
                    ByVal RE As String,  _
                    ByVal RF As String,  _
                    ByVal RG As String,  _
                    ByVal RH As String,  _
                    ByVal RH2 As String,  _
                    ByVal RI As String,  _
                    ByVal RJ1 As String,  _
                    ByVal RJ2 As String,  _
                    ByVal RK As String,  _
                    ByVal RL As String,  _
                    ByVal RM As String,  _
                    ByVal RP As String,  _
                    ByVal RR As String,  _
                    ByVal SN As Global.System.Nullable(Of Date),  _
                    ByVal SQ As String,  _
                    ByVal SR As String,  _
                    ByVal TA As String,  _
                    ByVal TB As String,  _
                    ByVal TI As String,  _
                    ByVal TJ As String,  _
                    ByVal TF As String,  _
                    ByVal TK As String,  _
                    ByVal TD As String,  _
                    ByVal UB As String,  _
                    ByVal RN As String,  _
                    ByVal RO As String,  _
                    ByVal RQ As String,  _
                    ByVal SA As String,  _
                    ByVal SB As String,  _
                    ByVal SC As String,  _
                    ByVal SD As String,  _
                    ByVal SE As String,  _
                    ByVal SF As String,  _
                    ByVal SG As String,  _
                    ByVal SH As String,  _
                    ByVal SJ As String,  _
                    ByVal SK As String,  _
                    ByVal SL As String,  _
                    ByVal SM As String,  _
                    ByVal SO As String,  _
                    ByVal SP As String,  _
                    ByVal SI As String,  _
                    ByVal SS As String,  _
                    ByVal TG As String,  _
                    ByVal TH As String,  _
                    ByVal TL As Global.System.Nullable(Of Date),  _
                    ByVal TM As String,  _
                    ByVal TO1 As String,  _
                    ByVal TP As String,  _
                    ByVal TQ As String,  _
                    ByVal TR As String,  _
                    ByVal TS As String,  _
                    ByVal UA As String,  _
                    ByVal UC As String,  _
                    ByVal UD As String,  _
                    ByVal UE As String,  _
                    ByVal UF As String,  _
                    ByVal UG As String,  _
                    ByVal UH As String,  _
                    ByVal UK As String,  _
                    ByVal UL As String,  _
                    ByVal TC As String,  _
                    ByVal TE As Global.System.Nullable(Of Date),  _
                    ByVal UI As String,  _
                    ByVal YA As String,  _
                    ByVal TT As String,  _
                    ByVal TU As Global.System.Nullable(Of Date)) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (QA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(QA,String)
            End If
            If (QB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(QB,String)
            End If
            If (QC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(QC,String)
            End If
            If (QD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(QD,String)
            End If
            If (QE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(QE,String)
            End If
            If (QF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(QF,String)
            End If
            If (QG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(QG.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (QH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(QH,String)
            End If
            If (QI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(QI,String)
            End If
            If (QJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(QJ,String)
            End If
            If (QK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(QK.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (QL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(QL,String)
            End If
            If (QM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(QM,String)
            End If
            If (QN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(QN,String)
            End If
            If (QO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(QO,String)
            End If
            If (RA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(RA,String)
            End If
            If (RB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(RB,String)
            End If
            If (RC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(RC,String)
            End If
            If (RD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(RD,String)
            End If
            If (RE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(RE,String)
            End If
            If (RF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(RF,String)
            End If
            If (RG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(RG,String)
            End If
            If (RH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(RH,String)
            End If
            If (RH2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(RH2,String)
            End If
            If (RI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(RI,String)
            End If
            If (RJ1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(RJ1,String)
            End If
            If (RJ2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(RJ2,String)
            End If
            If (RK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(RK,String)
            End If
            If (RL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(RL,String)
            End If
            If (RM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(RM,String)
            End If
            If (RP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(RP,String)
            End If
            If (RR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(RR,String)
            End If
            If (SN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(SN.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (SQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(SQ,String)
            End If
            If (SR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(SR,String)
            End If
            If (TA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(TA,String)
            End If
            If (TB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(TB,String)
            End If
            If (TI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(TI,String)
            End If
            If (TJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(TJ,String)
            End If
            If (TF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(TF,String)
            End If
            If (TK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(TK,String)
            End If
            If (TD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(TD,String)
            End If
            If (UB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(UB,String)
            End If
            If (RN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(RN,String)
            End If
            If (RO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(RO,String)
            End If
            If (RQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(RQ,String)
            End If
            If (SA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(SA,String)
            End If
            If (SB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(SB,String)
            End If
            If (SC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(SC,String)
            End If
            If (SD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(SD,String)
            End If
            If (SE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(SE,String)
            End If
            If (SF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(SF,String)
            End If
            If (SG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(SG,String)
            End If
            If (SH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(SH,String)
            End If
            If (SJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(SJ,String)
            End If
            If (SK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(SK,String)
            End If
            If (SL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(SL,String)
            End If
            If (SM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(SM,String)
            End If
            If (SO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(SO,String)
            End If
            If (SP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(SP,String)
            End If
            If (SI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(SI,String)
            End If
            If (SS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(SS,String)
            End If
            If (TG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(TG,String)
            End If
            If (TH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(TH,String)
            End If
            If (TL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(TL.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (TM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(TM,String)
            End If
            If (TO1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(TO1,String)
            End If
            If (TP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(TP,String)
            End If
            If (TQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(TQ,String)
            End If
            If (TR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(TR,String)
            End If
            If (TS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(TS,String)
            End If
            If (UA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(UA,String)
            End If
            If (UC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(UC,String)
            End If
            If (UD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(UD,String)
            End If
            If (UE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(UE,String)
            End If
            If (UF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(UF,String)
            End If
            If (UG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(UG,String)
            End If
            If (UH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(UH,String)
            End If
            If (UK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(UK,String)
            End If
            If (UL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(UL,String)
            End If
            If (TC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(TC,String)
            End If
            If (TE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(TE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (UI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(UI,String)
            End If
            If (YA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(YA,String)
            End If
            If (TT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(TT,String)
            End If
            If (TU.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(TU.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FAMISCaseInformationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FAMISCaseInformation"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("AA", "AA")
            tableMapping.ColumnMappings.Add("AB", "AB")
            tableMapping.ColumnMappings.Add("AC", "AC")
            tableMapping.ColumnMappings.Add("AD", "AD")
            tableMapping.ColumnMappings.Add("AE", "AE")
            tableMapping.ColumnMappings.Add("AF", "AF")
            tableMapping.ColumnMappings.Add("AG", "AG")
            tableMapping.ColumnMappings.Add("AH", "AH")
            tableMapping.ColumnMappings.Add("AI", "AI")
            tableMapping.ColumnMappings.Add("AJ", "AJ")
            tableMapping.ColumnMappings.Add("AK", "AK")
            tableMapping.ColumnMappings.Add("AL", "AL")
            tableMapping.ColumnMappings.Add("AM", "AM")
            tableMapping.ColumnMappings.Add("AN", "AN")
            tableMapping.ColumnMappings.Add("DATEENTERED", "DATEENTERED")
            tableMapping.ColumnMappings.Add("P03", "P03")
            tableMapping.ColumnMappings.Add("P05", "P05")
            tableMapping.ColumnMappings.Add("OPERATOR", "OPERATOR")
            tableMapping.ColumnMappings.Add("P09", "P09")
            tableMapping.ColumnMappings.Add("BATCHNUMBER", "BATCHNUMBER")
            tableMapping.ColumnMappings.Add("P10", "P10")
            tableMapping.ColumnMappings.Add("WW", "WW")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FAMISCaseInformation] ([CaseNumber], [AA], [AB], [AC], [AD], [AE], ["& _ 
                "AF], [AG], [AH], [AI], [AJ], [AK], [AL], [AM], [AN], [DATEENTERED], [P03], [P05]"& _ 
                ", [OPERATOR], [P09], [BATCHNUMBER], [P10], [WW]) VALUES (@CaseNumber, @AA, @AB, "& _ 
                "@AC, @AD, @AE, @AF, @AG, @AH, @AI, @AJ, @AK, @AL, @AM, @AN, @DATEENTERED, @P03, "& _ 
                "@P05, @OPERATOR, @P09, @BATCHNUMBER, @P10, @WW)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATEENTERED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATEENTERED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P05", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERATOR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERATOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P09", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P09", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BATCHNUMBER", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BATCHNUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P10", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WW", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Phoenix.My.MySettings.Default.phxSQLConn
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, AA, AB, AC, AD, AE, AF, AG, AH, AI, AJ, AK, AL, AM, AN, DATEEN"& _ 
                "TERED, P03, P05, OPERATOR, P09, BATCHNUMBER, P10, WW FROM FAMISCaseInformation W"& _ 
                "HERE (CaseNumber = @CaseNumber)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CaseNumber, OPERATOR, BATCHNUMBER  FROM FAMISCaseInformation WHERE DateEnt"& _ 
                "ered = @todayDate ORDER BY Operator, BatchNumber"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@todayDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DATEENTERED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PhoenixDataSet.FAMISCaseInformationDataTable, ByVal CaseNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal CaseNumber As String) As PhoenixDataSet.FAMISCaseInformationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            Dim dataTable As PhoenixDataSet.FAMISCaseInformationDataTable = New PhoenixDataSet.FAMISCaseInformationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillGrid(ByVal dataTable As PhoenixDataSet.FAMISCaseInformationDataTable, ByVal todayDate As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (todayDate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(todayDate.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal todayDate As Global.System.Nullable(Of Date)) As PhoenixDataSet.FAMISCaseInformationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (todayDate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(todayDate.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As PhoenixDataSet.FAMISCaseInformationDataTable = New PhoenixDataSet.FAMISCaseInformationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PhoenixDataSet.FAMISCaseInformationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PhoenixDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "FAMISCaseInformation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CaseNumber As String,  _
                    ByVal AA As String,  _
                    ByVal AB As String,  _
                    ByVal AC As String,  _
                    ByVal AD As String,  _
                    ByVal AE As String,  _
                    ByVal AF As String,  _
                    ByVal AG As String,  _
                    ByVal AH As String,  _
                    ByVal AI As String,  _
                    ByVal AJ As String,  _
                    ByVal AK As String,  _
                    ByVal AL As String,  _
                    ByVal AM As String,  _
                    ByVal AN As String,  _
                    ByVal DATEENTERED As Global.System.Nullable(Of Date),  _
                    ByVal P03 As String,  _
                    ByVal P05 As String,  _
                    ByVal _OPERATOR As String,  _
                    ByVal P09 As String,  _
                    ByVal BATCHNUMBER As String,  _
                    ByVal P10 As String,  _
                    ByVal WW As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (AA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(AA,String)
            End If
            If (AB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(AB,String)
            End If
            If (AC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(AC,String)
            End If
            If (AD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(AD,String)
            End If
            If (AE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(AE,String)
            End If
            If (AF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(AF,String)
            End If
            If (AG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(AG,String)
            End If
            If (AH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(AH,String)
            End If
            If (AI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(AI,String)
            End If
            If (AJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(AJ,String)
            End If
            If (AK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(AK,String)
            End If
            If (AL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(AL,String)
            End If
            If (AM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(AM,String)
            End If
            If (AN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(AN,String)
            End If
            If (DATEENTERED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(DATEENTERED.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (P03 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(P03,String)
            End If
            If (P05 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(P05,String)
            End If
            If (_OPERATOR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(_OPERATOR,String)
            End If
            If (P09 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(P09,String)
            End If
            If (BATCHNUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(BATCHNUMBER,String)
            End If
            If (P10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(P10,String)
            End If
            If (WW Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(WW,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FAMISFoodStampInformationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FAMISFoodStampInformation"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("LA", "LA")
            tableMapping.ColumnMappings.Add("LB", "LB")
            tableMapping.ColumnMappings.Add("LC", "LC")
            tableMapping.ColumnMappings.Add("LD", "LD")
            tableMapping.ColumnMappings.Add("LE", "LE")
            tableMapping.ColumnMappings.Add("LF", "LF")
            tableMapping.ColumnMappings.Add("LG", "LG")
            tableMapping.ColumnMappings.Add("LH", "LH")
            tableMapping.ColumnMappings.Add("LI", "LI")
            tableMapping.ColumnMappings.Add("LJ", "LJ")
            tableMapping.ColumnMappings.Add("LK", "LK")
            tableMapping.ColumnMappings.Add("LL", "LL")
            tableMapping.ColumnMappings.Add("LM", "LM")
            tableMapping.ColumnMappings.Add("LO", "LO")
            tableMapping.ColumnMappings.Add("LP", "LP")
            tableMapping.ColumnMappings.Add("LQ", "LQ")
            tableMapping.ColumnMappings.Add("LR", "LR")
            tableMapping.ColumnMappings.Add("LT", "LT")
            tableMapping.ColumnMappings.Add("MD", "MD")
            tableMapping.ColumnMappings.Add("ND", "ND")
            tableMapping.ColumnMappings.Add("NE", "NE")
            tableMapping.ColumnMappings.Add("NF", "NF")
            tableMapping.ColumnMappings.Add("NG", "NG")
            tableMapping.ColumnMappings.Add("NI", "NI")
            tableMapping.ColumnMappings.Add("NJ", "NJ")
            tableMapping.ColumnMappings.Add("NP", "NP")
            tableMapping.ColumnMappings.Add("OA", "OA")
            tableMapping.ColumnMappings.Add("OH", "OH")
            tableMapping.ColumnMappings.Add("OI", "OI")
            tableMapping.ColumnMappings.Add("ON1", "ON1")
            tableMapping.ColumnMappings.Add("OO", "OO")
            tableMapping.ColumnMappings.Add("OK", "OK")
            tableMapping.ColumnMappings.Add("WX", "WX")
            tableMapping.ColumnMappings.Add("WY", "WY")
            tableMapping.ColumnMappings.Add("LS", "LS")
            tableMapping.ColumnMappings.Add("MA", "MA")
            tableMapping.ColumnMappings.Add("MB", "MB")
            tableMapping.ColumnMappings.Add("MC", "MC")
            tableMapping.ColumnMappings.Add("ME", "ME1")
            tableMapping.ColumnMappings.Add("MF", "MF")
            tableMapping.ColumnMappings.Add("MG", "MG")
            tableMapping.ColumnMappings.Add("MH", "MH")
            tableMapping.ColumnMappings.Add("MI", "MI")
            tableMapping.ColumnMappings.Add("MJ", "MJ")
            tableMapping.ColumnMappings.Add("MK", "MK")
            tableMapping.ColumnMappings.Add("ML", "ML")
            tableMapping.ColumnMappings.Add("MM", "MM")
            tableMapping.ColumnMappings.Add("MN", "MN")
            tableMapping.ColumnMappings.Add("MO", "MO")
            tableMapping.ColumnMappings.Add("MP", "MP")
            tableMapping.ColumnMappings.Add("MQ", "MQ")
            tableMapping.ColumnMappings.Add("MR", "MR")
            tableMapping.ColumnMappings.Add("NB", "NB")
            tableMapping.ColumnMappings.Add("NH", "NH")
            tableMapping.ColumnMappings.Add("NK", "NK")
            tableMapping.ColumnMappings.Add("NM", "NM")
            tableMapping.ColumnMappings.Add("NO", "NO")
            tableMapping.ColumnMappings.Add("OB", "OB")
            tableMapping.ColumnMappings.Add("OC", "OC")
            tableMapping.ColumnMappings.Add("OD", "OD")
            tableMapping.ColumnMappings.Add("OE", "OE")
            tableMapping.ColumnMappings.Add("OF1", "OF1")
            tableMapping.ColumnMappings.Add("OG", "OG")
            tableMapping.ColumnMappings.Add("OL", "OL")
            tableMapping.ColumnMappings.Add("NA", "NA")
            tableMapping.ColumnMappings.Add("NC", "NC")
            tableMapping.ColumnMappings.Add("NL", "NL")
            tableMapping.ColumnMappings.Add("LN", "LN")
            tableMapping.ColumnMappings.Add("MS", "MS")
            tableMapping.ColumnMappings.Add("MT", "MT")
            tableMapping.ColumnMappings.Add("ME1", "ME1")
            tableMapping.ColumnMappings.Add("OK1", "OK1")
            tableMapping.ColumnMappings.Add("OK2", "OK2")
            tableMapping.ColumnMappings.Add("OK3", "OK3")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FAMISFoodStampInformation] ([CaseNumber], [LA], [LB], [LC], [LD], [L"& _ 
                "E], [LF], [LG], [LH], [LI], [LJ], [LK], [LL], [LM], [LO], [LP], [LQ], [LR], [LT]"& _ 
                ", [MD], [ND], [NE], [NF], [NG], [NI], [NJ], [NP], [OA], [OH], [OI], [ON1], [OO],"& _ 
                " [OK], [WX], [WY], [LS], [MA], [MB], [MC], [ME1], [MF], [MG], [MH], [MI], [MJ], "& _ 
                "[MK], [ML], [MM], [MN], [MO], [MP], [MQ], [MR], [NB], [NH], [NK], [NM], [NO], [O"& _ 
                "B], [OC], [OD], [OE], [OF1], [OG], [OL], [NA], [NC], [NL], [LN], [MS], [MT], [OK"& _ 
                "1], [OK2], [OK3]) VALUES (@CaseNumber, @LA, @LB, @LC, @LD, @LE, @LF, @LG, @LH, @"& _ 
                "LI, @LJ, @LK, @LL, @LM, @LO, @LP, @LQ, @LR, @LT, @MD, @ND, @NE, @NF, @NG, @NI, @"& _ 
                "NJ, @NP, @OA, @OH, @OI, @ON1, @OO, @OK, @WX, @WY, @LS, @MA, @MB, @MC, @ME1, @MF,"& _ 
                " @MG, @MH, @MI, @MJ, @MK, @ML, @MM, @MN, @MO, @MP, @MQ, @MR, @NB, @NH, @NK, @NM,"& _ 
                " @NO, @OB, @OC, @OD, @OE, @OF1, @OG, @OL, @NA, @NC, @NL, @LN, @MS, @MT, @OK1, @O"& _ 
                "K2, @OK3)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LC", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LD", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ND", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ND", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NG", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ON1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ON1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WY", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ME1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ME1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ML", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ML", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OF1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OF1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NC", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OK1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OK1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OK2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OK2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OK3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OK3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Phoenix.My.MySettings.Default.phxSQLConn
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, LA, LB, LC, LD, LE, LF, LG, LH, LI, LJ, LK, LL, LM, LO, LP, LQ"& _ 
                ", LR, LT, MD, ND, NE, NF, NG, NI, NJ, NP, OA, OH, OI, ON1, OO, OK, WX, WY, LS, M"& _ 
                "A, MB, MC, ME1, MF, MG, MH, MI, MJ, MK, ML, MM, MN, MO, MP, MQ, MR, NB, NH, NK, "& _ 
                "NM, NO, OB, OC, OD, OE, OF1, OG, OL, NA, NC, NL, LN, MS, MT, OK1, OK2, OK3 FROM "& _ 
                "FAMISFoodStampInformation WHERE (CaseNumber = @CaseNumber)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PhoenixDataSet.FAMISFoodStampInformationDataTable, ByVal CaseNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal CaseNumber As String) As PhoenixDataSet.FAMISFoodStampInformationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            Dim dataTable As PhoenixDataSet.FAMISFoodStampInformationDataTable = New PhoenixDataSet.FAMISFoodStampInformationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PhoenixDataSet.FAMISFoodStampInformationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PhoenixDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "FAMISFoodStampInformation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CaseNumber As String,  _
                    ByVal LA As String,  _
                    ByVal LB As String,  _
                    ByVal LC As Global.System.Nullable(Of Date),  _
                    ByVal LD As Global.System.Nullable(Of Date),  _
                    ByVal LE As Global.System.Nullable(Of Date),  _
                    ByVal LF As String,  _
                    ByVal LG As String,  _
                    ByVal LH As String,  _
                    ByVal LI As String,  _
                    ByVal LJ As String,  _
                    ByVal LK As String,  _
                    ByVal LL As String,  _
                    ByVal LM As String,  _
                    ByVal LO As String,  _
                    ByVal LP As String,  _
                    ByVal LQ As String,  _
                    ByVal LR As String,  _
                    ByVal LT As Global.System.Nullable(Of Date),  _
                    ByVal MD As String,  _
                    ByVal ND As String,  _
                    ByVal NE As String,  _
                    ByVal NF As String,  _
                    ByVal NG As Global.System.Nullable(Of Date),  _
                    ByVal NI As String,  _
                    ByVal NJ As String,  _
                    ByVal NP As String,  _
                    ByVal OA As String,  _
                    ByVal OH As String,  _
                    ByVal OI As String,  _
                    ByVal ON1 As String,  _
                    ByVal OO As String,  _
                    ByVal OK As String,  _
                    ByVal WX As String,  _
                    ByVal WY As String,  _
                    ByVal LS As String,  _
                    ByVal MA As String,  _
                    ByVal MB As String,  _
                    ByVal MC As String,  _
                    ByVal ME1 As String,  _
                    ByVal MF As String,  _
                    ByVal MG As String,  _
                    ByVal MH As String,  _
                    ByVal MI As String,  _
                    ByVal MJ As String,  _
                    ByVal MK As String,  _
                    ByVal ML As String,  _
                    ByVal MM As String,  _
                    ByVal MN As String,  _
                    ByVal MO As String,  _
                    ByVal MP As String,  _
                    ByVal MQ As String,  _
                    ByVal MR As String,  _
                    ByVal NB As String,  _
                    ByVal NH As String,  _
                    ByVal NK As String,  _
                    ByVal NM As String,  _
                    ByVal NO As String,  _
                    ByVal OB As String,  _
                    ByVal OC As String,  _
                    ByVal OD As String,  _
                    ByVal OE As String,  _
                    ByVal OF1 As String,  _
                    ByVal OG As String,  _
                    ByVal OL As String,  _
                    ByVal NA As String,  _
                    ByVal NC As Global.System.Nullable(Of Date),  _
                    ByVal NL As String,  _
                    ByVal LN As String,  _
                    ByVal MS As String,  _
                    ByVal MT As String,  _
                    ByVal OK1 As String,  _
                    ByVal OK2 As String,  _
                    ByVal OK3 As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (LA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(LA,String)
            End If
            If (LB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(LB,String)
            End If
            If (LC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(LC.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LD.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (LE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(LE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (LF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(LF,String)
            End If
            If (LG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(LG,String)
            End If
            If (LH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(LH,String)
            End If
            If (LI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(LI,String)
            End If
            If (LJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(LJ,String)
            End If
            If (LK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(LK,String)
            End If
            If (LL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(LL,String)
            End If
            If (LM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(LM,String)
            End If
            If (LO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(LO,String)
            End If
            If (LP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(LP,String)
            End If
            If (LQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(LQ,String)
            End If
            If (LR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(LR,String)
            End If
            If (LT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(LT.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (MD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(MD,String)
            End If
            If (ND Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ND,String)
            End If
            If (NE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(NE,String)
            End If
            If (NF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(NF,String)
            End If
            If (NG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(NG.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (NI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(NI,String)
            End If
            If (NJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(NJ,String)
            End If
            If (NP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(NP,String)
            End If
            If (OA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(OA,String)
            End If
            If (OH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(OH,String)
            End If
            If (OI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(OI,String)
            End If
            If (ON1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(ON1,String)
            End If
            If (OO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(OO,String)
            End If
            If (OK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(OK,String)
            End If
            If (WX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(WX,String)
            End If
            If (WY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(WY,String)
            End If
            If (LS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(LS,String)
            End If
            If (MA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(MA,String)
            End If
            If (MB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(MB,String)
            End If
            If (MC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(MC,String)
            End If
            If (ME1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(ME1,String)
            End If
            If (MF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(MF,String)
            End If
            If (MG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(MG,String)
            End If
            If (MH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(MH,String)
            End If
            If (MI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(MI,String)
            End If
            If (MJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(MJ,String)
            End If
            If (MK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(MK,String)
            End If
            If (ML Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(ML,String)
            End If
            If (MM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(MM,String)
            End If
            If (MN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(MN,String)
            End If
            If (MO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(MO,String)
            End If
            If (MP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(MP,String)
            End If
            If (MQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(MQ,String)
            End If
            If (MR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(MR,String)
            End If
            If (NB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(NB,String)
            End If
            If (NH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(NH,String)
            End If
            If (NK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(NK,String)
            End If
            If (NM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(NM,String)
            End If
            If (NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(NO,String)
            End If
            If (OB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(OB,String)
            End If
            If (OC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(OC,String)
            End If
            If (OD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(OD,String)
            End If
            If (OE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(OE,String)
            End If
            If (OF1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(OF1,String)
            End If
            If (OG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(OG,String)
            End If
            If (OL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(OL,String)
            End If
            If (NA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(NA,String)
            End If
            If (NC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(NC.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (NL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(NL,String)
            End If
            If (LN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(LN,String)
            End If
            If (MS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(MS,String)
            End If
            If (MT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(MT,String)
            End If
            If (OK1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(OK1,String)
            End If
            If (OK2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(OK2,String)
            End If
            If (OK3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(OK3,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FAMISIandAInformationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FAMISIandAInformation"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("PA", "PA")
            tableMapping.ColumnMappings.Add("PB", "PB")
            tableMapping.ColumnMappings.Add("PC", "PC")
            tableMapping.ColumnMappings.Add("PD", "PD")
            tableMapping.ColumnMappings.Add("PF", "PF")
            tableMapping.ColumnMappings.Add("PG", "PG")
            tableMapping.ColumnMappings.Add("PI", "PI")
            tableMapping.ColumnMappings.Add("PJ", "PJ")
            tableMapping.ColumnMappings.Add("PK", "PK")
            tableMapping.ColumnMappings.Add("PL", "PL")
            tableMapping.ColumnMappings.Add("PN", "PN")
            tableMapping.ColumnMappings.Add("PE", "PE")
            tableMapping.ColumnMappings.Add("PH", "PH")
            tableMapping.ColumnMappings.Add("PM", "PM")
            tableMapping.ColumnMappings.Add("PO", "PO")
            tableMapping.ColumnMappings.Add("PP", "PP")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FAMISIandAInformation] ([CaseNumber], [PA], [PB], [PC], [PD], [PF], "& _ 
                "[PG], [PI], [PJ], [PK], [PL], [PN], [PE], [PH], [PM], [PO], [PP]) VALUES (@CaseN"& _ 
                "umber, @PA, @PB, @PC, @PD, @PF, @PG, @PI, @PJ, @PK, @PL, @PN, @PE, @PH, @PM, @PO"& _ 
                ", @PP)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Phoenix.My.MySettings.Default.phxSQLConn
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, PA, PB, PC, PD, PF, PG, PI, PJ, PK, PL, PN, PE, PH, PM, PO, PP"& _ 
                " FROM FAMISIandAInformation WHERE (CaseNumber = @CaseNumber)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PhoenixDataSet.FAMISIandAInformationDataTable, ByVal CaseNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal CaseNumber As String) As PhoenixDataSet.FAMISIandAInformationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            Dim dataTable As PhoenixDataSet.FAMISIandAInformationDataTable = New PhoenixDataSet.FAMISIandAInformationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PhoenixDataSet.FAMISIandAInformationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PhoenixDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "FAMISIandAInformation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CaseNumber As String,  _
                    ByVal PA As String,  _
                    ByVal PB As String,  _
                    ByVal PC As String,  _
                    ByVal PD As String,  _
                    ByVal PF As String,  _
                    ByVal PG As String,  _
                    ByVal PI As String,  _
                    ByVal PJ As String,  _
                    ByVal PK As String,  _
                    ByVal PL As String,  _
                    ByVal PN As String,  _
                    ByVal PE As String,  _
                    ByVal PH As String,  _
                    ByVal PM As String,  _
                    ByVal PO As String,  _
                    ByVal PP As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (PA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PA,String)
            End If
            If (PB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PB,String)
            End If
            If (PC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PC,String)
            End If
            If (PD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PD,String)
            End If
            If (PF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PF,String)
            End If
            If (PG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PG,String)
            End If
            If (PI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PI,String)
            End If
            If (PJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(PJ,String)
            End If
            If (PK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(PK,String)
            End If
            If (PL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(PL,String)
            End If
            If (PN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(PN,String)
            End If
            If (PE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(PE,String)
            End If
            If (PH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(PH,String)
            End If
            If (PM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PM,String)
            End If
            If (PO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(PO,String)
            End If
            If (PP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(PP,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FAMISIncomeInformationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FAMISIncomeInformation"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("JP", "JP")
            tableMapping.ColumnMappings.Add("JQ", "JQ")
            tableMapping.ColumnMappings.Add("JS", "JS")
            tableMapping.ColumnMappings.Add("JT", "JT")
            tableMapping.ColumnMappings.Add("JW", "JW")
            tableMapping.ColumnMappings.Add("JX", "JX")
            tableMapping.ColumnMappings.Add("KU", "KU")
            tableMapping.ColumnMappings.Add("KV", "KV")
            tableMapping.ColumnMappings.Add("JA", "JA")
            tableMapping.ColumnMappings.Add("JB", "JB")
            tableMapping.ColumnMappings.Add("JC", "JC")
            tableMapping.ColumnMappings.Add("JD", "JD")
            tableMapping.ColumnMappings.Add("JE", "JE")
            tableMapping.ColumnMappings.Add("JF", "JF")
            tableMapping.ColumnMappings.Add("JG", "JG")
            tableMapping.ColumnMappings.Add("JH", "JH")
            tableMapping.ColumnMappings.Add("JI", "JI")
            tableMapping.ColumnMappings.Add("JK", "JK")
            tableMapping.ColumnMappings.Add("JL", "JL")
            tableMapping.ColumnMappings.Add("JM", "JM")
            tableMapping.ColumnMappings.Add("JN", "JN")
            tableMapping.ColumnMappings.Add("JO", "JO")
            tableMapping.ColumnMappings.Add("JR", "JR")
            tableMapping.ColumnMappings.Add("JU", "JU")
            tableMapping.ColumnMappings.Add("KA", "KA")
            tableMapping.ColumnMappings.Add("KB", "KB")
            tableMapping.ColumnMappings.Add("KC", "KC")
            tableMapping.ColumnMappings.Add("KD", "KD")
            tableMapping.ColumnMappings.Add("KE", "KE")
            tableMapping.ColumnMappings.Add("KF", "KF")
            tableMapping.ColumnMappings.Add("KG", "KG")
            tableMapping.ColumnMappings.Add("KH", "KH")
            tableMapping.ColumnMappings.Add("KI", "KI")
            tableMapping.ColumnMappings.Add("KJ", "KJ")
            tableMapping.ColumnMappings.Add("KK", "KK")
            tableMapping.ColumnMappings.Add("KL", "KL")
            tableMapping.ColumnMappings.Add("KM", "KM")
            tableMapping.ColumnMappings.Add("KN", "KN")
            tableMapping.ColumnMappings.Add("KO", "KO")
            tableMapping.ColumnMappings.Add("KP", "KP")
            tableMapping.ColumnMappings.Add("KQ", "KQ")
            tableMapping.ColumnMappings.Add("KR", "KR")
            tableMapping.ColumnMappings.Add("KS", "KS")
            tableMapping.ColumnMappings.Add("JJ", "JJ")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FAMISIncomeInformation] ([CaseNumber], [JP], [JQ], [JS], [JT], [JW],"& _ 
                " [JX], [KU], [KV], [JA], [JB], [JC], [JD], [JE], [JF], [JG], [JH], [JI], [JK], ["& _ 
                "JL], [JM], [JN], [JO], [JR], [JU], [KA], [KB], [KC], [KD], [KE], [KF], [KG], [KH"& _ 
                "], [KI], [KJ], [KK], [KL], [KM], [KN], [KO], [KP], [KQ], [KR], [KS], [JJ]) VALUE"& _ 
                "S (@CaseNumber, @JP, @JQ, @JS, @JT, @JW, @JX, @KU, @KV, @JA, @JB, @JC, @JD, @JE,"& _ 
                " @JF, @JG, @JH, @JI, @JK, @JL, @JM, @JN, @JO, @JR, @JU, @KA, @KB, @KC, @KD, @KE,"& _ 
                " @KF, @KG, @KH, @KI, @KJ, @KK, @KL, @KM, @KN, @KO, @KP, @KQ, @KR, @KS, @JJ)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JW", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KU", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KV", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JU", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Phoenix.My.MySettings.Default.phxSQLConn
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, JP, JQ, JS, JT, JW, JX, KU, KV, JA, JB, JC, JD, JE, JF, JG, JH"& _ 
                ", JI, JK, JL, JM, JN, JO, JR, JU, KA, KB, KC, KD, KE, KF, KG, KH, KI, KJ, KK, KL"& _ 
                ", KM, KN, KO, KP, KQ, KR, KS, JJ FROM FAMISIncomeInformation WHERE (CaseNumber ="& _ 
                " @CaseNumber)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PhoenixDataSet.FAMISIncomeInformationDataTable, ByVal CaseNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal CaseNumber As String) As PhoenixDataSet.FAMISIncomeInformationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            Dim dataTable As PhoenixDataSet.FAMISIncomeInformationDataTable = New PhoenixDataSet.FAMISIncomeInformationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PhoenixDataSet.FAMISIncomeInformationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PhoenixDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "FAMISIncomeInformation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CaseNumber As String,  _
                    ByVal JP As String,  _
                    ByVal JQ As String,  _
                    ByVal JS As String,  _
                    ByVal JT As String,  _
                    ByVal JW As String,  _
                    ByVal JX As String,  _
                    ByVal KU As String,  _
                    ByVal KV As String,  _
                    ByVal JA As String,  _
                    ByVal JB As String,  _
                    ByVal JC As String,  _
                    ByVal JD As String,  _
                    ByVal JE As String,  _
                    ByVal JF As String,  _
                    ByVal JG As String,  _
                    ByVal JH As String,  _
                    ByVal JI As String,  _
                    ByVal JK As String,  _
                    ByVal JL As String,  _
                    ByVal JM As String,  _
                    ByVal JN As String,  _
                    ByVal JO As String,  _
                    ByVal JR As String,  _
                    ByVal JU As String,  _
                    ByVal KA As String,  _
                    ByVal KB As String,  _
                    ByVal KC As String,  _
                    ByVal KD As String,  _
                    ByVal KE As String,  _
                    ByVal KF As String,  _
                    ByVal KG As String,  _
                    ByVal KH As String,  _
                    ByVal KI As String,  _
                    ByVal KJ As String,  _
                    ByVal KK As String,  _
                    ByVal KL As String,  _
                    ByVal KM As String,  _
                    ByVal KN As String,  _
                    ByVal KO As String,  _
                    ByVal KP As String,  _
                    ByVal KQ As String,  _
                    ByVal KR As String,  _
                    ByVal KS As String,  _
                    ByVal JJ As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (JP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(JP,String)
            End If
            If (JQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(JQ,String)
            End If
            If (JS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(JS,String)
            End If
            If (JT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(JT,String)
            End If
            If (JW Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(JW,String)
            End If
            If (JX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(JX,String)
            End If
            If (KU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(KU,String)
            End If
            If (KV Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(KV,String)
            End If
            If (JA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(JA,String)
            End If
            If (JB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(JB,String)
            End If
            If (JC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(JC,String)
            End If
            If (JD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(JD,String)
            End If
            If (JE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(JE,String)
            End If
            If (JF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(JF,String)
            End If
            If (JG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(JG,String)
            End If
            If (JH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(JH,String)
            End If
            If (JI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(JI,String)
            End If
            If (JK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(JK,String)
            End If
            If (JL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(JL,String)
            End If
            If (JM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(JM,String)
            End If
            If (JN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(JN,String)
            End If
            If (JO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(JO,String)
            End If
            If (JR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(JR,String)
            End If
            If (JU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(JU,String)
            End If
            If (KA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(KA,String)
            End If
            If (KB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(KB,String)
            End If
            If (KC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(KC,String)
            End If
            If (KD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(KD,String)
            End If
            If (KE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(KE,String)
            End If
            If (KF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(KF,String)
            End If
            If (KG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(KG,String)
            End If
            If (KH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(KH,String)
            End If
            If (KI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(KI,String)
            End If
            If (KJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(KJ,String)
            End If
            If (KK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(KK,String)
            End If
            If (KL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(KL,String)
            End If
            If (KM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(KM,String)
            End If
            If (KN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(KN,String)
            End If
            If (KO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(KO,String)
            End If
            If (KP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(KP,String)
            End If
            If (KQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(KQ,String)
            End If
            If (KR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(KR,String)
            End If
            If (KS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(KS,String)
            End If
            If (JJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(JJ,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FAMISIndividualsInformationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FAMISIndividualsInformation"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("BS", "BS")
            tableMapping.ColumnMappings.Add("BT", "BT")
            tableMapping.ColumnMappings.Add("BX", "BX")
            tableMapping.ColumnMappings.Add("FA", "FA")
            tableMapping.ColumnMappings.Add("FB", "FB")
            tableMapping.ColumnMappings.Add("BU", "BU")
            tableMapping.ColumnMappings.Add("FC", "FC")
            tableMapping.ColumnMappings.Add("BV", "BV")
            tableMapping.ColumnMappings.Add("FD", "FD")
            tableMapping.ColumnMappings.Add("FD2", "FD2")
            tableMapping.ColumnMappings.Add("BW", "BW")
            tableMapping.ColumnMappings.Add("FE2", "FE2")
            tableMapping.ColumnMappings.Add("FE1", "FE1")
            tableMapping.ColumnMappings.Add("BY1", "BY1")
            tableMapping.ColumnMappings.Add("FF", "FF")
            tableMapping.ColumnMappings.Add("BZ", "BZ")
            tableMapping.ColumnMappings.Add("FG1", "FG")
            tableMapping.ColumnMappings.Add("FI", "FI")
            tableMapping.ColumnMappings.Add("FJ", "FJ")
            tableMapping.ColumnMappings.Add("FK", "FK")
            tableMapping.ColumnMappings.Add("FL", "FL")
            tableMapping.ColumnMappings.Add("FL2", "FL2")
            tableMapping.ColumnMappings.Add("FM1", "FM1")
            tableMapping.ColumnMappings.Add("FM2", "FM2")
            tableMapping.ColumnMappings.Add("FN", "FN")
            tableMapping.ColumnMappings.Add("FP1", "FP")
            tableMapping.ColumnMappings.Add("GA", "GA")
            tableMapping.ColumnMappings.Add("GB", "GB")
            tableMapping.ColumnMappings.Add("GC", "GC")
            tableMapping.ColumnMappings.Add("GD", "GD")
            tableMapping.ColumnMappings.Add("GE", "GE")
            tableMapping.ColumnMappings.Add("GF", "GF")
            tableMapping.ColumnMappings.Add("GG", "GG")
            tableMapping.ColumnMappings.Add("GH", "GH")
            tableMapping.ColumnMappings.Add("GI", "GI")
            tableMapping.ColumnMappings.Add("GJ", "GJ")
            tableMapping.ColumnMappings.Add("GK", "GK")
            tableMapping.ColumnMappings.Add("GL", "GL")
            tableMapping.ColumnMappings.Add("FH", "FH")
            tableMapping.ColumnMappings.Add("FO", "FO")
            tableMapping.ColumnMappings.Add("ZA", "ZA")
            tableMapping.ColumnMappings.Add("ZF", "ZF")
            tableMapping.ColumnMappings.Add("FG", "FG")
            tableMapping.ColumnMappings.Add("FP", "FP")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FAMISIndividualsInformation] ([CaseNumber], [BS], [BT], [BX], [FA], "& _ 
                "[FB], [BU], [FC], [BV], [FD], [FD2], [BW], [FE2], [FE1], [BY1], [FF], [BZ], [FG]"& _ 
                ", [FI], [FJ], [FK], [FL], [FL2], [FM1], [FM2], [FN], [FP], [GA], [GB], [GC], [GD"& _ 
                "], [GE], [GF], [GG], [GH], [GI], [GJ], [GK], [GL], [FH], [FO], [ZA], [ZF]) VALUE"& _ 
                "S (@CaseNumber, @BS, @BT, @BX, @FA, @FB, @BU, @FC, @BV, @FD, @FD2, @BW, @FE2, @F"& _ 
                "E1, @BY1, @FF, @BZ, @FG, @FI, @FJ, @FK, @FL, @FL2, @FM1, @FM2, @FN, @FP, @GA, @G"& _ 
                "B, @GC, @GD, @GE, @GF, @GG, @GH, @GI, @GJ, @GK, @GL, @FH, @FO, @ZA, @ZF)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BU", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BV", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FD2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FD2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BW", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BY1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BY1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BZ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BZ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FL2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FL2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FM1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FM1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FM2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FM2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Phoenix.My.MySettings.Default.phxSQLConn
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, BS, BT, BX, FA, FB, BU, FC, BV, FD, FD2, BW, FE2, FE1, BY1, FF"& _ 
                ", BZ, FG, FI, FJ, FK, FL, FL2, FM1, FM2, FN, FP, GA, GB, GC, GD, GE, GF, GG, GH,"& _ 
                " GI, GJ, GK, GL, FH, FO, ZA, ZF FROM FAMISIndividualsInformation WHERE (CaseNumb"& _ 
                "er = @CaseNumber)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PhoenixDataSet.FAMISIndividualsInformationDataTable, ByVal CaseNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal CaseNumber As String) As PhoenixDataSet.FAMISIndividualsInformationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            Dim dataTable As PhoenixDataSet.FAMISIndividualsInformationDataTable = New PhoenixDataSet.FAMISIndividualsInformationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PhoenixDataSet.FAMISIndividualsInformationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PhoenixDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "FAMISIndividualsInformation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CaseNumber As String,  _
                    ByVal BS As String,  _
                    ByVal BT As String,  _
                    ByVal BX As String,  _
                    ByVal FA As String,  _
                    ByVal FB As String,  _
                    ByVal BU As String,  _
                    ByVal FC As String,  _
                    ByVal BV As String,  _
                    ByVal FD As String,  _
                    ByVal FD2 As String,  _
                    ByVal BW As String,  _
                    ByVal FE2 As String,  _
                    ByVal FE1 As String,  _
                    ByVal BY1 As String,  _
                    ByVal FF As String,  _
                    ByVal BZ As String,  _
                    ByVal FG As String,  _
                    ByVal FI As String,  _
                    ByVal FJ As String,  _
                    ByVal FK As String,  _
                    ByVal FL As String,  _
                    ByVal FL2 As String,  _
                    ByVal FM1 As String,  _
                    ByVal FM2 As String,  _
                    ByVal FN As String,  _
                    ByVal FP As String,  _
                    ByVal GA As String,  _
                    ByVal GB As String,  _
                    ByVal GC As String,  _
                    ByVal GD As String,  _
                    ByVal GE As String,  _
                    ByVal GF As String,  _
                    ByVal GG As String,  _
                    ByVal GH As String,  _
                    ByVal GI As String,  _
                    ByVal GJ As String,  _
                    ByVal GK As String,  _
                    ByVal GL As String,  _
                    ByVal FH As String,  _
                    ByVal FO As String,  _
                    ByVal ZA As String,  _
                    ByVal ZF As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (BS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(BS,String)
            End If
            If (BT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(BT,String)
            End If
            If (BX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(BX,String)
            End If
            If (FA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(FA,String)
            End If
            If (FB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(FB,String)
            End If
            If (BU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(BU,String)
            End If
            If (FC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(FC,String)
            End If
            If (BV Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(BV,String)
            End If
            If (FD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(FD,String)
            End If
            If (FD2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(FD2,String)
            End If
            If (BW Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(BW,String)
            End If
            If (FE2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(FE2,String)
            End If
            If (FE1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(FE1,String)
            End If
            If (BY1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(BY1,String)
            End If
            If (FF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(FF,String)
            End If
            If (BZ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(BZ,String)
            End If
            If (FG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(FG,String)
            End If
            If (FI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(FI,String)
            End If
            If (FJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(FJ,String)
            End If
            If (FK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(FK,String)
            End If
            If (FL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(FL,String)
            End If
            If (FL2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(FL2,String)
            End If
            If (FM1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(FM1,String)
            End If
            If (FM2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(FM2,String)
            End If
            If (FN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(FN,String)
            End If
            If (FP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(FP,String)
            End If
            If (GA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(GA,String)
            End If
            If (GB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(GB,String)
            End If
            If (GC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(GC,String)
            End If
            If (GD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(GD,String)
            End If
            If (GE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(GE,String)
            End If
            If (GF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(GF,String)
            End If
            If (GG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(GG,String)
            End If
            If (GH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(GH,String)
            End If
            If (GI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(GI,String)
            End If
            If (GJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(GJ,String)
            End If
            If (GK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(GK,String)
            End If
            If (GL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(GL,String)
            End If
            If (FH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(FH,String)
            End If
            If (FO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(FO,String)
            End If
            If (ZA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(ZA,String)
            End If
            If (ZF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(ZF,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FAMISMedicaidInformationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FAMISMedicaidInformation"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("HD", "HD")
            tableMapping.ColumnMappings.Add("HE", "HE")
            tableMapping.ColumnMappings.Add("HF", "HF")
            tableMapping.ColumnMappings.Add("HG", "HG")
            tableMapping.ColumnMappings.Add("HH", "HH")
            tableMapping.ColumnMappings.Add("HI", "HI")
            tableMapping.ColumnMappings.Add("HJ", "HJ")
            tableMapping.ColumnMappings.Add("HK", "HK")
            tableMapping.ColumnMappings.Add("HL", "HL")
            tableMapping.ColumnMappings.Add("HM", "HM")
            tableMapping.ColumnMappings.Add("HN", "HN")
            tableMapping.ColumnMappings.Add("HO", "HO")
            tableMapping.ColumnMappings.Add("HP", "HP")
            tableMapping.ColumnMappings.Add("HQ", "HQ")
            tableMapping.ColumnMappings.Add("HR", "HR")
            tableMapping.ColumnMappings.Add("HS", "HS")
            tableMapping.ColumnMappings.Add("HT", "HT")
            tableMapping.ColumnMappings.Add("HB", "HB")
            tableMapping.ColumnMappings.Add("HC", "HC")
            tableMapping.ColumnMappings.Add("WL", "WL")
            tableMapping.ColumnMappings.Add("WA", "WA")
            tableMapping.ColumnMappings.Add("WB", "WB")
            tableMapping.ColumnMappings.Add("WE", "WE")
            tableMapping.ColumnMappings.Add("WH", "WH")
            tableMapping.ColumnMappings.Add("WI", "WI")
            tableMapping.ColumnMappings.Add("WK", "WK")
            tableMapping.ColumnMappings.Add("WM", "WM")
            tableMapping.ColumnMappings.Add("WN", "WN")
            tableMapping.ColumnMappings.Add("WO", "WO")
            tableMapping.ColumnMappings.Add("WP", "WP")
            tableMapping.ColumnMappings.Add("WQ", "WQ")
            tableMapping.ColumnMappings.Add("WR", "WR")
            tableMapping.ColumnMappings.Add("WS", "WS")
            tableMapping.ColumnMappings.Add("WT", "WT")
            tableMapping.ColumnMappings.Add("WU", "WU")
            tableMapping.ColumnMappings.Add("WV", "WV")
            tableMapping.ColumnMappings.Add("WC", "WC")
            tableMapping.ColumnMappings.Add("WD", "WD")
            tableMapping.ColumnMappings.Add("WF", "WF")
            tableMapping.ColumnMappings.Add("WG", "WG")
            tableMapping.ColumnMappings.Add("XQ", "XQ")
            tableMapping.ColumnMappings.Add("XO", "XO")
            tableMapping.ColumnMappings.Add("XR", "XR")
            tableMapping.ColumnMappings.Add("XS", "XS")
            tableMapping.ColumnMappings.Add("XT", "XT")
            tableMapping.ColumnMappings.Add("XV", "XV")
            tableMapping.ColumnMappings.Add("XU", "XU")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FAMISMedicaidInformation] ([CaseNumber], [HD], [HE], [HF], [HG], [HH"& _ 
                "], [HI], [HJ], [HK], [HL], [HM], [HN], [HO], [HP], [HQ], [HR], [HS], [HT], [HB],"& _ 
                " [HC], [WL], [WA], [WB], [WE], [WH], [WI], [WK], [WM], [WN], [WO], [WP], [WQ], ["& _ 
                "WR], [WS], [WT], [WU], [WV], [WC], [WD], [WF], [WG], [XQ], [XO], [XR], [XS], [XT"& _ 
                "], [XV], [XU]) VALUES (@CaseNumber, @HD, @HE, @HF, @HG, @HH, @HI, @HJ, @HK, @HL,"& _ 
                " @HM, @HN, @HO, @HP, @HQ, @HR, @HS, @HT, @HB, @HC, @WL, @WA, @WB, @WE, @WH, @WI,"& _ 
                " @WK, @WM, @WN, @WO, @WP, @WQ, @WR, @WS, @WT, @WU, @WV, @WC, @WD, @WF, @WG, @XQ,"& _ 
                " @XO, @XR, @XS, @XT, @XV, @XU)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HJ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WN", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WU", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WV", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XV", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XU", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Phoenix.My.MySettings.Default.phxSQLConn
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, HD, HE, HF, HG, HH, HI, HJ, HK, HL, HM, HN, HO, HP, HQ, HR, HS"& _ 
                ", HT, HB, HC, WL, WA, WB, WE, WH, WI, WK, WM, WN, WO, WP, WQ, WR, WS, WT, WU, WV"& _ 
                ", WC, WD, WF, WG, XQ, XO, XR, XS, XT, XV, XU FROM FAMISMedicaidInformation WHERE"& _ 
                " (CaseNumber = @CaseNumber)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PhoenixDataSet.FAMISMedicaidInformationDataTable, ByVal CaseNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal CaseNumber As String) As PhoenixDataSet.FAMISMedicaidInformationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            Dim dataTable As PhoenixDataSet.FAMISMedicaidInformationDataTable = New PhoenixDataSet.FAMISMedicaidInformationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PhoenixDataSet.FAMISMedicaidInformationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PhoenixDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "FAMISMedicaidInformation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CaseNumber As String,  _
                    ByVal HD As String,  _
                    ByVal HE As String,  _
                    ByVal HF As String,  _
                    ByVal HG As String,  _
                    ByVal HH As String,  _
                    ByVal HI As String,  _
                    ByVal HJ As String,  _
                    ByVal HK As String,  _
                    ByVal HL As String,  _
                    ByVal HM As String,  _
                    ByVal HN As String,  _
                    ByVal HO As String,  _
                    ByVal HP As String,  _
                    ByVal HQ As String,  _
                    ByVal HR As String,  _
                    ByVal HS As String,  _
                    ByVal HT As String,  _
                    ByVal HB As String,  _
                    ByVal HC As String,  _
                    ByVal WL As String,  _
                    ByVal WA As String,  _
                    ByVal WB As String,  _
                    ByVal WE As String,  _
                    ByVal WH As String,  _
                    ByVal WI As String,  _
                    ByVal WK As String,  _
                    ByVal WM As String,  _
                    ByVal WN As String,  _
                    ByVal WO As String,  _
                    ByVal WP As String,  _
                    ByVal WQ As String,  _
                    ByVal WR As String,  _
                    ByVal WS As String,  _
                    ByVal WT As String,  _
                    ByVal WU As String,  _
                    ByVal WV As String,  _
                    ByVal WC As String,  _
                    ByVal WD As String,  _
                    ByVal WF As String,  _
                    ByVal WG As String,  _
                    ByVal XQ As String,  _
                    ByVal XO As String,  _
                    ByVal XR As String,  _
                    ByVal XS As String,  _
                    ByVal XT As String,  _
                    ByVal XV As String,  _
                    ByVal XU As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (HD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(HD,String)
            End If
            If (HE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(HE,String)
            End If
            If (HF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(HF,String)
            End If
            If (HG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(HG,String)
            End If
            If (HH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(HH,String)
            End If
            If (HI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(HI,String)
            End If
            If (HJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(HJ,String)
            End If
            If (HK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(HK,String)
            End If
            If (HL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(HL,String)
            End If
            If (HM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(HM,String)
            End If
            If (HN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(HN,String)
            End If
            If (HO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(HO,String)
            End If
            If (HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(HP,String)
            End If
            If (HQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(HQ,String)
            End If
            If (HR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HR")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(HR,String)
            End If
            If (HS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(HS,String)
            End If
            If (HT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(HT,String)
            End If
            If (HB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(HB,String)
            End If
            If (HC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(HC,String)
            End If
            If (WL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(WL,String)
            End If
            If (WA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(WA,String)
            End If
            If (WB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(WB,String)
            End If
            If (WE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(WE,String)
            End If
            If (WH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(WH,String)
            End If
            If (WI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(WI,String)
            End If
            If (WK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(WK,String)
            End If
            If (WM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(WM,String)
            End If
            If (WN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(WN,String)
            End If
            If (WO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(WO,String)
            End If
            If (WP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(WP,String)
            End If
            If (WQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(WQ,String)
            End If
            If (WR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(WR,String)
            End If
            If (WS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(WS,String)
            End If
            If (WT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(WT,String)
            End If
            If (WU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(WU,String)
            End If
            If (WV Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(WV,String)
            End If
            If (WC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(WC,String)
            End If
            If (WD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(WD,String)
            End If
            If (WF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(WF,String)
            End If
            If (WG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(WG,String)
            End If
            If (XQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(XQ,String)
            End If
            If (XO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(XO,String)
            End If
            If (XR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(XR,String)
            End If
            If (XS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(XS,String)
            End If
            If (XT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(XT,String)
            End If
            If (XV Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(XV,String)
            End If
            If (XU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(XU,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FAMISVRPInformationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FAMISVRPInformation"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("VRPNumber", "VRPNumber")
            tableMapping.ColumnMappings.Add("VA", "VA")
            tableMapping.ColumnMappings.Add("VC", "VC")
            tableMapping.ColumnMappings.Add("VE", "VE")
            tableMapping.ColumnMappings.Add("VG", "VG")
            tableMapping.ColumnMappings.Add("VI", "VI")
            tableMapping.ColumnMappings.Add("VQ", "VQ")
            tableMapping.ColumnMappings.Add("VK", "VK")
            tableMapping.ColumnMappings.Add("VM", "VM")
            tableMapping.ColumnMappings.Add("VO", "VO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FAMISVRPInformation] ([CaseNumber], [VRPNumber], [VA], [VC], [VE], ["& _ 
                "VG], [VI], [VQ], [VK], [VM], [VO]) VALUES (@CaseNumber, @VRPNumber, @VA, @VC, @V"& _ 
                "E, @VG, @VI, @VQ, @VK, @VM, @VO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VRPNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VRPNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Phoenix.My.MySettings.Default.phxSQLConn
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, VRPNumber, VA, VC, VE, VG, VI, VQ, VK, VM, VO FROM FAMISVRPInf"& _ 
                "ormation WHERE (CaseNumber = @CaseNumber) AND (VRPNumber = @VRPNumber)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VRPNumber", Global.System.Data.SqlDbType.[Char], 5, Global.System.Data.ParameterDirection.Input, 0, 0, "VRPNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PhoenixDataSet.FAMISVRPInformationDataTable, ByVal CaseNumber As String, ByVal VRPNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (VRPNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(VRPNumber,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal CaseNumber As String, ByVal VRPNumber As String) As PhoenixDataSet.FAMISVRPInformationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (VRPNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(VRPNumber,String)
            End If
            Dim dataTable As PhoenixDataSet.FAMISVRPInformationDataTable = New PhoenixDataSet.FAMISVRPInformationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PhoenixDataSet.FAMISVRPInformationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PhoenixDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "FAMISVRPInformation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CaseNumber As String, ByVal VRPNumber As String, ByVal VA As String, ByVal VC As String, ByVal VE As String, ByVal VG As String, ByVal VI As String, ByVal VQ As String, ByVal VK As String, ByVal VM As String, ByVal VO As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (VRPNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(VRPNumber,String)
            End If
            If (VA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(VA,String)
            End If
            If (VC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(VC,String)
            End If
            If (VE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(VE,String)
            End If
            If (VG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(VG,String)
            End If
            If (VI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(VI,String)
            End If
            If (VQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(VQ,String)
            End If
            If (VK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(VK,String)
            End If
            If (VM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(VM,String)
            End If
            If (VO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(VO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IMPSInformationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IMPSInformation"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("BatchNumber", "BatchNumber")
            tableMapping.ColumnMappings.Add("Dropped", "Dropped")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [IMPSInformation] ([CaseNumber], [BatchNumber], [Dropped]) VALUES (@C"& _ 
                "aseNumber, @BatchNumber, @Dropped)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dropped", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dropped", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Phoenix.My.MySettings.Default.phxSQLConn
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, BatchNumber,  Dropped FROM IMPSInformation WHERE (DateEntered "& _ 
                "= @DateSelected) ORDER BY BatchNumber"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateSelected", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEntered", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PhoenixDataSet.IMPSInformationDataTable, ByVal DateSelected As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (DateSelected.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateSelected.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal DateSelected As Global.System.Nullable(Of Date)) As PhoenixDataSet.IMPSInformationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (DateSelected.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateSelected.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As PhoenixDataSet.IMPSInformationDataTable = New PhoenixDataSet.IMPSInformationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PhoenixDataSet.IMPSInformationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PhoenixDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "IMPSInformation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FAMISAppendedInformationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FAMISAppendedInformation"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("AQ", "AQ")
            tableMapping.ColumnMappings.Add("CH", "CH")
            tableMapping.ColumnMappings.Add("DG", "DG")
            tableMapping.ColumnMappings.Add("DH", "DH")
            tableMapping.ColumnMappings.Add("DI", "DI")
            tableMapping.ColumnMappings.Add("MU", "MU")
            tableMapping.ColumnMappings.Add("OP", "OP")
            tableMapping.ColumnMappings.Add("OQ1", "OQ1")
            tableMapping.ColumnMappings.Add("OQ2", "OQ2")
            tableMapping.ColumnMappings.Add("OR", "OR")
            tableMapping.ColumnMappings.Add("MS", "MS")
            tableMapping.ColumnMappings.Add("MT", "MT")
            tableMapping.ColumnMappings.Add("NQ", "NQ")
            tableMapping.ColumnMappings.Add("NR", "NR")
            tableMapping.ColumnMappings.Add("NS", "NS")
            tableMapping.ColumnMappings.Add("NU", "NU")
            tableMapping.ColumnMappings.Add("NV", "NV")
            tableMapping.ColumnMappings.Add("NW", "NW")
            tableMapping.ColumnMappings.Add("VB", "VB")
            tableMapping.ColumnMappings.Add("VF", "VF")
            tableMapping.ColumnMappings.Add("VH", "VH")
            tableMapping.ColumnMappings.Add("WR", "WR")
            tableMapping.ColumnMappings.Add("XO", "XO")
            tableMapping.ColumnMappings.Add("XP", "XP")
            tableMapping.ColumnMappings.Add("XQ", "XQ")
            tableMapping.ColumnMappings.Add("XR", "XR")
            tableMapping.ColumnMappings.Add("XS", "XS")
            tableMapping.ColumnMappings.Add("XU", "XU")
            tableMapping.ColumnMappings.Add("XV", "XV")
            tableMapping.ColumnMappings.Add("B1", "B1")
            tableMapping.ColumnMappings.Add("B2", "B2")
            tableMapping.ColumnMappings.Add("EO", "EO")
            tableMapping.ColumnMappings.Add("FQ", "FQ")
            tableMapping.ColumnMappings.Add("ZF", "ZF")
            tableMapping.ColumnMappings.Add("B3", "B3")
            tableMapping.ColumnMappings.Add("B4", "B4")
            tableMapping.ColumnMappings.Add("FR", "FR")
            tableMapping.ColumnMappings.Add("ZA", "ZA")
            tableMapping.ColumnMappings.Add("NT", "NT1")
            tableMapping.ColumnMappings.Add("XT", "XT1")
            tableMapping.ColumnMappings.Add("HU", "HU1")
            tableMapping.ColumnMappings.Add("HV", "HV1")
            tableMapping.ColumnMappings.Add("B5", "B5")
            tableMapping.ColumnMappings.Add("B6", "B6")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FAMISAppendedInformation] ([CaseNumber], [AQ], [CH], [DG], [DH], [DI"& _ 
                "], [MU], [OP], [OQ1], [OQ2], [OR], [MS], [MT], [NQ], [NR], [NS], [NT], [NU], [NV"& _ 
                "], [NW], [VB], [VF], [VH], [WR], [XO], [XP], [XQ], [XR], [XS], [XT], [XU], [XV],"& _ 
                " [B1], [B2], [EO], [FQ], [HU], [ZF], [B3], [B4], [FR], [HV], [ZA], [B5], [B6]) V"& _ 
                "ALUES (@CaseNumber, @AQ, @CH, @DG, @DH, @DI, @MU, @OP, @OQ1, @OQ2, @OR, @MS, @MT"& _ 
                ", @NQ, @NR, @NS, @NT, @NU, @NV, @NW, @VB, @VF, @VH, @WR, @XO, @XP, @XQ, @XR, @XS"& _ 
                ", @XT, @XU, @XV, @B1, @B2, @EO, @FQ, @HU, @ZF, @B3, @B4, @FR, @HV, @ZA, @B5, @B6"& _ 
                ")"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DI", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MU", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OQ1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OQ1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OQ2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OQ2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NU", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NV", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NW", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VB", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VH", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XU", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XV", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@B1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "B1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@B2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "B2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FQ", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HU", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZF", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@B3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "B3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@B4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "B4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HV", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@B5", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "B5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@B6", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "B6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Phoenix.My.MySettings.Default.phxSQLConn
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, AQ, CH, DG, DH, DI, MU, OP, OQ1, OQ2, [OR], MS, MT, NQ, NR, NS"& _ 
                ", NT, NU, NV, NW, VB, VF, VH, WR, XO, XP, XQ, XR, XS, XT, XU, XV, B1, B2, EO, FQ"& _ 
                ", HU, ZF, B3, B4, FR, HV, ZA, B5, B6 FROM FAMISAppendedInformation WHERE (CaseNu"& _ 
                "mber = @CaseNumber)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PhoenixDataSet.FAMISAppendedInformationDataTable, ByVal CaseNumber As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal CaseNumber As String) As PhoenixDataSet.FAMISAppendedInformationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (CaseNumber Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            Dim dataTable As PhoenixDataSet.FAMISAppendedInformationDataTable = New PhoenixDataSet.FAMISAppendedInformationDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PhoenixDataSet.FAMISAppendedInformationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PhoenixDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "FAMISAppendedInformation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
End Namespace
